{
  "_kommentar": "Valideringer for upersonlige (primært) i valideringstjenesten pr 2023-03-01. Enkelte hjelpetekster kan fortsatt mangle i retur fra valideringstjenesten",
 
 "kontrolldefinisjoner": [
    {
      "kontrollnavn": "N_AVGITT_KONSERNBIDRAG_FOR_HØYT",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig avgir konsernbidrag og avgitt konsernbidrag overstiger samlet inntekt\n        // kontrollen gir faktiskFeil\n    \n     skattemeldingUpersonlig\n            .forForekomsterAv(inntektOgUnderskudd)\n            .utslagFor {\n                    \n              \tval næringsinntektISkattemeldingUP = summer{fastsatt(naeringsinntektSomTall)}\n      \n              \tval underskuddISkattemeldingUP = summer{fastsatt(inntektsfradrag.underskuddSomTall)}\n        \n                val mottattKonsernbidragISkattemeldingUP = summer{fastsatt(inntektSomGruppe.samletMottattKonsernbidrag)}\n    \n                  val grunnlagFørAvgittKonsernbidrag = næringsinntektISkattemeldingUP - underskuddISkattemeldingUP + mottattKonsernbidragISkattemeldingUP \n\n                hvis((fastsatt(inntektsfradrag.samletAvgittKonsernbidrag) er oppgitt) og (fastsatt(inntektsfradrag.samletAvgittKonsernbidrag) erStørreEnn grunnlagFørAvgittKonsernbidrag)       \n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Avgitt konsernbidrag med skattemessig virkning er for høyt. Det kan bare avgis konsernbidrag med skattemessig virkning som tilsvarer selskapets overskudd før avgitt konsernbidrag.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_AVVIK_FREMFOERBART_UNDERSKUDD",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n \nval partsnr = skattepliktUpersonligGjeldende\t\n  \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n    \nval selskapIkkeIStorbedrift = ansvarligEnhet\n  .hvorMinstEnForekomst{erStorbedrift erLik false}\n     \n//  Validering dersom selskap fører fremførbart underskudd som er lavere enn det som fremgår av siste skatteoppgjør for året før \n// AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n// gir merknad i valideringstjenesten\n  \nskattemeldingUpersonlig\n    .forForekomsterAv(inntektOgUnderskudd)           \n   \t.utslagFor {\n           \tval finnesIKontrollisteFusjonFisjonInnsats = finnesIKontrolliste(\n                \"kontrolliste - underskudd fusjonFisjonInnsats\",\n                listeAv(partsnr)\n            )\n            val fremførtUnderskuddEgenfastsatt = summer{fastsatt(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}\n            val fremførtUnderskuddUtkast = summer{grunnlag(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}                \n      \t\tval differanseFremfoerbartUnderskudd = fremførtUnderskuddUtkast - fremførtUnderskuddEgenfastsatt\n    \n                hvis((differanseFremfoerbartUnderskudd erStørreEnn 50000) og (ikke(finnesIKontrollisteFusjonFisjonInnsats)) og \n                   selskapIkkeIStorbedrift og (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",))\n                   )  {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Beløpet som er oppgitt som underskudd til fremføring fra tidligere inntektsår, er lavere enn beløpet i gjeldende skatteoppgjør for 2021. Kontroller om dette er riktig.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_AVVIK_FREMFOERBART_UNDERSKUDD_DOKUMENTASJON",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n \nval partsnr = skattepliktUpersonligGjeldende\t\n  \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n\nval selskapIkkeIStorbedrift = ansvarligEnhet\n  .hvorMinstEnForekomst{erStorbedrift erLik false}\n      \n//  Validering dersom selskap fører fremførbart underskudd som er høyere enn det som fremgår av siste skatteoppgjør for året før \n//AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n// gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(inntektOgUnderskudd)           \n   \t.utslagFor {\n           \tval finnesIKontrollisteFusjonFisjonInnsats = finnesIKontrolliste(\n                \"kontrolliste - underskudd fusjonFisjonInnsats\",\n                listeAv(partsnr)\n            )\n            val fremførtUnderskuddEgenfastsatt = summer{fastsatt(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}\n            val fremførtUnderskuddUtkast = summer{grunnlag(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}                \n      \t\tval differanseFremfoerbartUnderskudd = fremførtUnderskuddEgenfastsatt - fremførtUnderskuddUtkast\n      \n      \t\tval harVedlegg = fastsatt(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall) har vedlegg\n    \n                hvis((differanseFremfoerbartUnderskudd erStørreEnn 50000) og (ikke(finnesIKontrollisteFusjonFisjonInnsats)) og (ikke(harVedlegg)) og\n                                      selskapIkkeIStorbedrift og (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",)))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Beløpet som er oppgitt som underskudd til fremføring fra tidligere inntektsår, er lavere enn beløpet i gjeldende skatteoppgjør for 2021. Kontroller om dette er riktig.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_AVVIK_FREMFOERBART_UNDERSKUDD_DOKUMENTASJON_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n \nval partsnr = skattepliktUpersonligGjeldende\t\n  \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n  \nval selskapIkkeIStorbedrift = ansvarligEnhet\n  .hvorMinstEnForekomst{erStorbedrift erLik false}\n  \n//  Validering dersom selskap fører fremførbart underskudd som er høyere enn det som fremgår av siste skatteoppgjør for året før \n// AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n// gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(inntektOgUnderskudd)           \n   \t.utslagFor {\n           \tval finnesIKontrollisteFusjonFisjonInnsats = finnesIKontrolliste(\n                \"kontrolliste - underskudd fusjonFisjonInnsats\",\n                listeAv(partsnr)\n            )\n            val fremførtUnderskuddEgenfastsatt = summer{fastsatt(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}\n            val fremførtUnderskuddUtkast = summer{grunnlag(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}                \n      \t\tval differanseFremfoerbartUnderskudd = fremførtUnderskuddEgenfastsatt - fremførtUnderskuddUtkast\n      \n      \t\tval harVedlegg = fastsatt(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall) har vedlegg\n    \n                hvis((differanseFremfoerbartUnderskudd erStørreEnn 50000) og (ikke(finnesIKontrollisteFusjonFisjonInnsats)) og (ikke(harVedlegg)) \n                     og selskapIkkeIStorbedrift og (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",)))  \n\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_AVVIK_FREMFOERBART_UNDERSKUDD_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n \nval partsnr = skattepliktUpersonligGjeldende\t\n  \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n    \nval selskapIkkeIStorbedrift = ansvarligEnhet\n  .hvorMinstEnForekomst{erStorbedrift erLik false}\n     \n//  Validering dersom selskap fører fremførbart underskudd som er lavere enn det som fremgår av siste skatteoppgjør for året før \n// AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n// gir merknad i valideringstjenesten\n  \nskattemeldingUpersonlig\n    .forForekomsterAv(inntektOgUnderskudd)           \n   \t.utslagFor {\n           \tval finnesIKontrollisteFusjonFisjonInnsats = finnesIKontrolliste(\n                \"kontrolliste - underskudd fusjonFisjonInnsats\",\n                listeAv(partsnr)\n            )\n            val fremførtUnderskuddEgenfastsatt = summer{fastsatt(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}\n            val fremførtUnderskuddUtkast = summer{grunnlag(underskuddTilFremfoering.fremfoertUnderskuddFraTidligereAarSomTall)}                \n      \t\tval differanseFremfoerbartUnderskudd = fremførtUnderskuddUtkast - fremførtUnderskuddEgenfastsatt\n    \n                hvis((differanseFremfoerbartUnderskudd erStørreEnn 50000) og (ikke(finnesIKontrollisteFusjonFisjonInnsats)) og \n                   selskapIkkeIStorbedrift og (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",))\n                   )  {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_AVVIK_GEVINST_OBLIGASJONER",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når selskapet har opplysninger om gevinst av obligasjon/sertifikat og summen av disse er høyere\n        // enn beløp ført i post 8079 i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        val gevinstObligasjonManglerIResultat = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .filtrer { fastsatt(type).finnesBlant(\"8079\") }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n            .utslagFor {\n                val sumGevinstObligasjon = summer { gevinstVedRealisasjonAvObligasjonOgSertifikat }\n    \n                val avvikGevinst = sumGevinstObligasjon - gevinstObligasjonManglerIResultat\n    \n                hvis(gevinstObligasjonManglerIResultat erMindreEnn sumGevinstObligasjon) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil avvikGevinst\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er avvik mellom gevinst ved realisasjon av obligasjon og sertifikat rapportert i konto 8079 i resultatregnskapet og summen av gevinster ved realisasjon som er spesifisert pr obligasjon eller sertifikat i skattemeldingen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_RENTER_OBLIGASJONER",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når selskapet har opplysninger om renteinntekt av obligasjon/sertifikat og summen av disse er høyere\n        // enn beløp ført i post 8090 i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        val renterObligasjonManglerIResultat = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .filtrer { fastsatt(type).finnesBlant(\"8090\") }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n        skattemeldingUpersonlig\n            .utslagFor {\n                val sumRenteinntektObligasjon =\n                    forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n                        .summer { renteinntektAvObligasjonOgSertifikatSomTall }\n    \n                val avvikRenter = sumRenteinntektObligasjon - renterObligasjonManglerIResultat\n    \n                hvis(renterObligasjonManglerIResultat erMindreEnn sumRenteinntektObligasjon) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil avvikRenter\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er avvik mellom renteinntekt av obligasjon og sertifikat rapportert i konto 8090 i resultatregnskapet og summen av renteinntektene som er spesifisert pr obligasjon eller sertifikat i skattemeldingen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_SKATTEMESSIG_RESULTAT",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n       .kontekst(ValideringSkattepliktig)\n    {\n    //kontrollen gir utslag dersom summen av alle forekomster av fordelt skattemessig resultat for næring avviker fra skattemessig resultat\n    //kontrollen medfører arbeidsoppgave i SMIA\n    \n    val sumFordeltSkattemessigResultat = naeringsspesifikasjon\n        .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n        .summer {fastsatt(fordeltSkattemessigResultat.beloepSomTall)}\n    \n    naeringsspesifikasjon\n        .forForekomsterAv(sti(beregnetNaeringsinntekt, skattemessigResultat))\n        .utslagFor {\n    \n          val differanseSkattemessigResultat = beloepSomTall - sumFordeltSkattemessigResultat\n    \n            hvis((differanseSkattemessigResultat erStørreEnn 1000) eller (differanseSkattemessigResultat erMindreEnn -1000))\n          {\n                betjeningsstrategiSettesTil(\n                    ikke, faktiskFeil, 1,\n                  \tAvviksbeloep settesTil differanseSkattemessigResultat\n                )\n            } } }",
      "hjelpetekstSME": "Det er avvik mellom det skattemessige resultatet og summen av fordelte næringsinntekter. Et aksjeselskap kan bare ha en fordelt næringsinntekt, mens et enkeltpersonforetak kan ha flere.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_AVVIK_TAP_OBLIGASJONER",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når selskapet har opplysninger om tap av obligasjon/sertifikat og summen av disse er høyere\n        // enn beløp ført i post 8179 i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        val tapObligasjonManglerIResultat = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finanskostnad))\n            .forForekomsterAv(kostnad)\n            .filtrer { fastsatt(type).finnesBlant(\"8179\") }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n            .utslagFor {\n                val sumTapObligasjon = summer { tapVedRealisasjonAvObligasjonOgSertifikat }\n    \n                val avvikTap = sumTapObligasjon - tapObligasjonManglerIResultat\n    \n                hvis(tapObligasjonManglerIResultat erMindreEnn sumTapObligasjon) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil avvikTap\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er avvik mellom tap ved realisasjon av obligasjon og sertifikat rapportert i konto 8179 i resultatregnskapet og summen av tap ved realisasjon som er spesifisert pr obligasjon eller sertifikat i skattemeldingen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_TILBAKEFØRT_SKATTEKOSTNAD",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det er avvik mellom sum skattekostnad i resultatregnskapet og tilbakeført skattekostnad i permanente forskjeller\n        // kontrollen medfører merknad i valideringstjenesten\n    \n        val positivSkattekostnadPermanentForskjell = naeringsspesifikasjon\n            .forForekomsterAv(permanentForskjell)\n            .filtrer { fastsatt(permanentForskjellstype) erLik \"positivSkattekostnad\" }\n            .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n        val negativSkattekostnadPermanentForskjell = naeringsspesifikasjon\n            .forForekomsterAv(permanentForskjell)\n            .filtrer { fastsatt(permanentForskjellstype) erLik \"negativSkattekostnad\" }\n            .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, sumSkattekostnad))\n            .utslagFor {\n                hvis(beloepSomTall erUlik (positivSkattekostnadPermanentForskjell - negativSkattekostnadPermanentForskjell)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er avvik mellom sum skattekostnad i resultatregnskapet og tilbakeført skattekostnad i permanente forskjeller.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_ÅRSRESULTAT_EGENKAPITALAVSTEMMING",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når\n        // kontrollen medfører merknad i valideringstjenesten\n        val aarsresultatIVirksomheten = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, aarsresultat))\n            .summer { beloepSomTall }\n    \n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"fullRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(egenkapitalavstemming)\n            .utslagFor {\n                val oppgittOverskudd = forForekomsterAv(egenkapitalendring)\n                    .filtrer { fastsatt(egenkapitalendringstype) erLik \"aaretsOverskudd\" }\n                    .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n                val oppgittUnderskudd = forForekomsterAv(egenkapitalendring)\n                    .filtrer { fastsatt(egenkapitalendringstype) erLik \"aaretsUnderskudd\" }\n                    .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n                val oppgittOverskuddEllerUnderskudd = oppgittOverskudd - oppgittUnderskudd\n                val avvikIVisning = aarsresultatIVirksomheten - oppgittOverskuddEllerUnderskudd\n    \n                hvis(harFullRegnskapspliktEllerBegrensetRegnskapsplikt og (aarsresultatIVirksomheten erUlik oppgittOverskuddEllerUnderskudd)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1,\n                        Avviksbeloep settesTil avvikIVisning\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er avvik mellom årsresultat og årets overskudd eller årets underskudd i egenkapitalavstemmingen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_FEIL_ANLEGGSMIDDELKOMPONENT_IFRSFORETAK",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n\n     // Kontrollen gir utslag dersom skattepliktig ikke er IFRS\n     // og rapporterer anleggsmiddelkomponent for IFRS-foretak i naeringsspesifikasjon\n      naeringsspesifikasjon\n         .utslagFor {\n           \n            val harIkkeRegeltypeIFRSforetak = forForekomsterAv(virksomhet)\n              .hvorMinstEnForekomst{regeltypeForAarsregnskap.finnesIkkeBlant(\"ifrs\",\"forenkletIfrs\")}\n          \n          val harAnleggsmiddelkomponentForIFRSForetak = forForekomsterAv(sti(balanseregnskap,annenSpesifikasjonAvBalanseregnskap,anleggsmiddelkomponentForIFRSForetak))\n             .hvorMinstEnForekomst{type er oppgitt}\n           \n                  \n            hvis( harIkkeRegeltypeIFRSforetak og harAnleggsmiddelkomponentForIFRSForetak)\n           {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil)\n        }\n    }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "Det er lagt inn spesifikasjon av anleggsmiddelkomponent som kun IFRS-foretak har lov til å rapportere.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_ANLEGGSMIDDELTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilAnleggsmiddelTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant( \"1350\", \"1360\",)\n            }\n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant (\"ingenRegnskapsplikt\",\"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"1070\", \"1180\", \"1312\", \"1313\", \"1320\", \"1331\", \"1332\", \"1340\", \"1395\")\n            }\n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {regnskapspliktstype.finnesBlant (\"fullRegnskapsplikt\",\"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnleggsmiddelTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type erLik \"1140\"\n            }\n      \tval harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {regnskapspliktstype erLik \"fullRegnskapsplikt\"}\n    \n        val harFeilAnleggsmiddelTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"1295\", \"1296\", \"1298\")\n            }\n        // Kontrollen gir utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // Sammen med minst en av de nevnte typene anleggsmiddel\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og\n            (harIngenRegnskapsplikt og harFeilAnleggsmiddelTypeForIngenRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnleggsmiddelTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilAnleggsmiddelTypeForFullRegnskapsplikt)\n    \n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en anleggsmiddeltype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_ANNENDRIFTSINNTEKTSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n            }\n    \n        val harFeilAnnenDriftsinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftsinntekt.annenDriftsinntektSomGruppe)\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"3500\", \"3850\", \"3870\", \"3880\", \"3885\")\n            }\n    \n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype.finnesBlant(\"fullRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n            }\n    \n        val harFeilAnnenDriftsinntektTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftsinntekt.annenDriftsinntektSomGruppe)\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type erLik \"3650\"\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"fullRegnskapsplikt\"\n            }\n    \n        val harFeilAnnenDriftsinntektTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftsinntekt.annenDriftsinntektSomGruppe)\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"3890\", \"3895\", \"3910\")\n            }\n    \n        // kontrollen kan gi utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // sammen med minst en av de nevnte typene av annen driftsinntekt\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftsinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftsinntektTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilAnnenDriftsinntektTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en driftsinntektstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_ANNENDRIFTSKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnnenDriftskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"6050\", \"7370\", \"7440\", \"7490\", \"7880\", \"7885\")\n            }\n               \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"fullRegnskapsplikt\" }\n    \n        val harFeilAnnenDriftskostnadTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"7350\", \"7400\", \"7420\", \"7890\", \"7897\", \"7910\", \"7911\")\n            }\n    \n        // Kontrollen kan gi utslag dersom skattyter kombinerer regnskapsplikttype og type egenkapital som ikke er gyldig\n        naeringsspesifikasjon \n      \t.utslagFor {\n      \t\thvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                                (harFullRegnskapsplikt og harFeilAnnenDriftskostnadTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }}",
      "hjelpetekstSME": "Det er brukt en driftskostnadstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_BANKOGFORSIKRING_IKKE_KAN_OMKLASSIFISERES",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harKorrektVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\"livsforsikringsforetakOgPensjonskasse\",\"skadeforsikringsforetak\")}\n    \n        val harInntektEllerKostnadSomIkkeKanOmklassifiseres = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, bankOgForsikringsinntektEllerKostnadSomIkkeBlirOmklassifisertTilResultatet))\n            .forForekomsterAv(inntektEllerKostnad)\n        \t.hvorMinstEnForekomst{type.finnesBlant(\"8.91.0.10.00\",\"8.91.0.30\",\"8.91.0.30.00\",\"8.91.0.60\",\"8.91.0.60.00\",\n                                                   \"8.91.0.70.00\",\"8.91.0.71\",\"8.91.0.72\",\"8.91.0.80\")}\n       \n        // Kontrollen gir utslag dersom annen virksomhet enn livs- og skadeforsikringsforetak rapporterer inntekt eller kostnad som ikke kan bli omklassifisert \n        naeringsspesifikasjon utslagFor hvis( \n            (ikke(harKorrektVirksomhetstype) og harInntektEllerKostnadSomIkkeKanOmklassifiseres)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er lagt inn bank og forsikringsinntekt eller kostnad som ikke blir omklassifisert til resultatet. Det er kun livsforsikringsforetak og Pensjonskasse og skadeforsikringsforetak har lov til å rapportere dette.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_BANKOGFORSIKRING_KAN_OMKLASSIFISERES",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harKorrektVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\"livsforsikringsforetakOgPensjonskasse\",\"skadeforsikringsforetak\")}\n    \n        val harInntektEllerKostnadSomKanOmklassifiseres = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, bankOgForsikringsinntektEllerKostnadSomKanBliOmklassifisertTilResultatet))\n            .forForekomsterAv(inntektEllerKostnad)\n        \t.hvorMinstEnForekomst{type.finnesBlant(\"8.92.0.20\",\"8.92.0.20.00\",\"8.92.0.21\",\"8.92.0.40\",\"8.92.0.40.00\",\"8.92.0.50.00\",\n                                                   \"8.92.0.60\",\"8.92.0.60.00\",\"8.92.0.70\",\"8.92.0.70.00\",\"8.92.0.80\")}\n       \n        // Kontrollen gir utslag dersom annen virksomhet enn livs- og skadeforsikringsforetak rapporterer inntekt eller kostnad som kan bli omklassifisert \n        naeringsspesifikasjon utslagFor hvis( \n            (ikke(harKorrektVirksomhetstype) og harInntektEllerKostnadSomKanOmklassifiseres)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }\n",
      "hjelpetekstSME": "Det er lagt inn bank og forsikringsinntekt eller kostnad som kan bli omklassifisert til resultatet. Det er kun livsforsikringsforetak og Pensjonskasse og skadeforsikringsforetak som har lov til å rapportere dette.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_BANK_ENDRING_EGENKAPITAL",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harVirksomhetstypeBankFinansieringsforetak = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype erLik \"bankOgFinansieringsforetak\"}\n    \n        val harEndringIEgenkapital = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, endringIEgenkapitalInnenBankOgForsikring))\n            .forForekomsterAv(endringsbeloep)\n        \t.hvorMinstEnForekomst{type.finnesBlant(\"9.01.0.00.00\",\"9.03.0.10.00\",\"9.03.0.90.00\",\"9.05.9.21.00\",\"9.05.9.25.00\",\"9.08.0.10.00\",\n                                                   \"9.08.0.40.00\",\"9.08.0.50.00\",\"9.08.0.60.10\",\"9.08.0.60.20\",\"9.08.0.70.00\",\"9.08.0.90.00\")}\n       \n        // Kontrollen gir utslag dersom annen virksomhet enn bank og finansieringsforetak rapporterer endring i egenkapital innen bank og forsikring \n        naeringsspesifikasjon utslagFor hvis( \n            (ikke(harVirksomhetstypeBankFinansieringsforetak) og harEndringIEgenkapital)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er lagt inn endring i egenkapital innen bank og forsikring som kun bank og finansieringsforetak har lov til å rapportere.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_EGENKAPITALTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"begrensetRegnskapsplikt\"\n            }\n    \n        val harFeilEgenkapitalTypeForBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(balanseregnskap.gjeldOgEgenkapital.egenkapitalSomGruppe)\n            .forForekomsterAv(kapital)\n            .hvorMinstEnForekomst {\n                type.erLik(\"2080\")\n            }\n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n            }\n    \n        val harFeilEgenkapitalTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(balanseregnskap.gjeldOgEgenkapital.egenkapitalSomGruppe)\n            .forForekomsterAv(kapital)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"2010\", \"2020\", \"2030\", \"2043\", \"2045\", \"2055\", \"9.21.11\", \"9.21.12\", \"9.21.30\", \"9.21.40\", \"9.23.00\",\n                                 \"9.23.20\", \"9.23.30\", \"9.23.40\", \"9.25.00\", \"9.26.00\", \"9.28.31\", \"9.28.33\", \"9.28.60\", \"9.28.76\",\n                                 \"9.28.77\", \"9.28.90\", \"9.28.99\")\n            }\n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"fullRegnskapsplikt\"\n            }\n    \n        val harFeilEgenkapitalTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(balanseregnskap.gjeldOgEgenkapital.egenkapitalSomGruppe)\n            .forForekomsterAv(kapital)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"2095\", \"2096\", \"2097\", \"2098\", \"9.21.11\", \"9.21.12\", \"9.21.30\", \"9.21.40\", \"9.23.00\", \"9.23.20\", \"9.23.30\", \n                                 \"9.23.40\", \"9.25.00\", \"9.26.00\", \"9.28.31\", \"9.28.33\", \"9.28.60\", \"9.28.76\", \"9.28.77\", \"9.28.90\", \"9.28.99\")\n            }\n    \n        // Kontrollen kan gi utslag dersom skattyter kombinerer regnskapsplikttype og type egenkapital som ikke er gyldig\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og\n            (harBegrensetRegnskapsplikt og harFeilEgenkapitalTypeForBegrensetRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilEgenkapitalTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilEgenkapitalTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Du har brukt en egenkapitalstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_EIENDELSTYPE_BANK_FORSIKRING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harVirksomhetstypeBankFinansieringsforetak = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype erLik \"bankOgFinansieringsforetak\"}\n    \n        val harFeilEiendelstypeForBankFinansieringsforetak = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, balanseverdiForBankOgForsikringseiendel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"2.20.80\",\"2.30.00\",\"3.51.90\",\"3.56.00\",\"3.60.00\",\"3.70.00\",\"4.89.10\")\n            }\n        val harVirksomhetstypeLivsforsikringPensjonskasse = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"livsforsikringsforetakOgPensjonskasse\" }\n    \n        val harFeilEiendelstypeForLivsforsikringPensjonskasse = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, balanseverdiForBankOgForsikringseiendel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"2.30.10\", \"2.30.40\", \"2.30.91\", \"2.30.92\", \"3.51.11\", \"3.51.15\", \"3.51.19\", \"3.51.30\", \"3.51.50\",\n                                 \"3.56.10\",\"3.56.30\",\"3.56.50\",\"4.89.70\",\"5.91.50\")\n            }\n        val harVirksomhetstypeSkadeforsikring = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {regnskapspliktstype erLik \"skadeforsikringsforetak\"}\n    \n        val harFeilEiendelstypeForSkadeforsikring = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, balanseverdiForBankOgForsikringseiendel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type \n              \t\t.finnesBlant(\"2.30.00\", \"2.30.10\", \"3.51.11\", \"3.51.15\", \"3.51.19\", \"3.51.30\", \"3.51.50\",\n                                 \"3.56.10\",\"3.56.30\",\"3.56.50\",\"3.60.00\",\"4.89.70\",\"5.91.50\")\n            }\n      \t\n        // Kontrollen gir utslag dersom skattyter rapporterer ugyldig balanseverdi for bank og forsikringseiendel \n        naeringsspesifikasjon utslagFor hvis( \n            (harVirksomhetstypeBankFinansieringsforetak og harFeilEiendelstypeForBankFinansieringsforetak) eller\n                (harVirksomhetstypeLivsforsikringPensjonskasse og harFeilEiendelstypeForLivsforsikringPensjonskasse) eller\n                (harVirksomhetstypeSkadeforsikring og harFeilEiendelstypeForSkadeforsikring)     \n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt eiendelstype som ikke er forenelig med eiendelstypen for bank og forsikring.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_FINANSIELT_DERIVAT",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harVirksomhetstypeForForsikring = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\"livsforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")}\n                 \t\n        // Kontrollen gir utslag dersom skattyter rapporterer konto for derivater som kun forsikringsforetak har lov til å rapportere. \n \n        naeringsspesifikasjon \n       .utslagFor {\n       val harfinasiellderivat= forForekomsterAv(gruppe(sti(balanseregnskap, annenSpesifikasjonAvBalanseregnskap, finansieltDerivatSomGjeldEllerAvsetning),\n                                                                   sti(balanseregnskap, annenSpesifikasjonAvBalanseregnskap,finansieltDerivatSomEiendel)))\n      .hvorMinstEnForekomst{finansieltDerivattype er oppgitt}\n      \thvis(ikke(harVirksomhetstypeForForsikring) og harfinasiellderivat \n                 ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil\n                \n            )\n        }\n    }\n    }\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er lagt inn kontoer for derivater som kun forsikringsforetak har lov til å rapportere.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_FINANSINNTEKTSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilFinansinntektTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8005\", \"8050\", \"8074\", \"8090\")\n            }\n    \n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilFinansinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8030\", \"8080\")\n            }\n    \n        val harFullRegnskapspliktEllerIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"fullRegnskapsplikt\") }\n    \n        val harFeilFinansinntektTypeForFullRegnskapspliktEllerIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type erLik \"8091\"\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // sammen med minst en av de nevnte typene av finansinntekt\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapsplikt og harFeilFinansinntektTypeForIngenRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilFinansinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerIngenRegnskapsplikt og harFeilFinansinntektTypeForFullRegnskapspliktEllerIngenRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en finansinntektstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_FINANSKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n         val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilFinanskostnadTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finanskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8006\", \"8150\", \"8174\")\n            }\n    \n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilFinanskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finanskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8100\", \"8115\", \"8130\")\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1 eller 5\n        // sammen med minst en av de nevnte typene av finanskostnad\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapsplikt og harFeilFinanskostnadTypeForIngenRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilFinanskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en finanskostnadstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_GJELD_BANKOGFORSIKRING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harVirksomhetstypeBankFinansieringsforetak = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype erLik \"bankOgFinansieringsforetak\"}\n    \n        val harFeilGjeldstypeForBankFinansieringsforetak = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, gjeldInnenBankOgForsikring))\n            .forForekomsterAv(gjeld)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"8.39.00\", \"8.61.00\", \"8.62.00\", \"8.63.00\", \"8.64.00\", \"8.65.00\", \"8.66.00\", \"8.67.00\", \"8.68.00\", \"8.69.00\", \"8.71.00\", \"8.73.00\", \"8.78.00\")\n            }\n        val harVirksomhetstypeLivsforsikringPensjonskasse = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { virksomhetstype erLik \"livsforsikringsforetakOgPensjonskasse\" }\n    \n        val harFeilGjeldstypeForLivsforsikringPensjonskasse = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, gjeldInnenBankOgForsikring))\n            .forForekomsterAv(gjeld)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"6.16.10\", \"6.16.20\", \"6.17.10\", \"6.18.10\", \"6.18.30\", \"6.18.40\", \"6.18.90\", \"7.30.11\", \"7.30.12\",\n                                 \"7.30.91\",\"7.30.92\",\"7.82.20\",\"7.82.82\",\"7.86.10\", \"7.86.30\", \"7.86.50\",\"7.87.00\",\"8.39.10\",\"8.39.90\",\"8.71.00\", \"8.73.00\", \"8.78.00\", \"8.65.00\")\n            }\n        val harVirksomhetstypeSkadeforsikring = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {virksomhetstype erLik \"skadeforsikringsforetak\"}\n    \n        val harFeilGjeldstypeForSkadeforsikring = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, gjeldInnenBankOgForsikring))\n            .forForekomsterAv(gjeld)\n            .hvorMinstEnForekomst {\n                type \n              \t\t.finnesBlant(\"6.16.10\", \"6.16.20\", \"6.17.10\", \"6.18.10\", \"6.18.30\", \"6.18.40\", \"6.18.90\", \"7.30.11\", \"7.30.12\",\n                                 \"7.30.91\",\"7.30.92\",\"7.82.20\", \"7.82.20\",\"7.82.82\", \"7.86.10\", \"7.86.30\", \"7.86.50\",\"7.87.00\",\"8.39.10\",\"8.39.90\", \"8.61.00\", \"8.62.00\", \"8.63.00\",\n                                 \"8.64.00\", \"8.65.00\", \"8.66.00\", \"8.67.00\", \"8.68.00\", \"8.69.00\")\n            }\n      \t\n        // Kontrollen gir utslag dersom skattyter rapporterer ugyldig gjeldstype for bank og forsikringseiendel \n        naeringsspesifikasjon \n      \t.utslagFor {\n      \thvis( \n            (harVirksomhetstypeBankFinansieringsforetak og harFeilGjeldstypeForBankFinansieringsforetak) eller\n                (harVirksomhetstypeLivsforsikringPensjonskasse og harFeilGjeldstypeForLivsforsikringPensjonskasse) eller\n                (harVirksomhetstypeSkadeforsikring og harFeilGjeldstypeForSkadeforsikring)     \n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }\n    }\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en gjeldstype som ikke er forenelig med gjeldstypen for bank og forsikring.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_INNTEKT_KOSTNAD_BANKFORSIKRING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {                                     \n\t\tval gyldigUnderkodeliste = resultatregnskapOgBalanse_2022\n            .forForekomsterAv{underkodeliste}\n            .filtrer{fastsatt(tekniskNavn).finnesBlant(\"bankOgForsikringskostnad\",\"bankOgForsikringsinntekt\")}\n      \t\t.forForekomsterAv {kode}\n            .filtrer { fastsatt(kodetillegg.virksomhetstype).finnesBlant(\"livsforsikringsforetakOgPensjonskasse\",\"skadeforsikringsforetak\",\"bankOgFinansieringsforetak\")}\n            .verdierFor { tekniskNavn }\n   \n        // Kontrollen gir utslag dersom bank og forsikringsforetak rapporterer kostnadskonto som ikke er gyldig\n        naeringsspesifikasjon \n      \t\t.forForekomsterAv(gruppe(sti(resultatregnskap, driftskostnad, bankOgForsikringskostnad),\n                                    sti(resultatregnskap, driftsinntekt, bankOgForsikringsinntekt)))\n            .forForekomsterAv(gruppe(inntekt,kostnad))\n            \n      \t\t.utslagFor{ \n          \t\thvis((type er oppgitt) og type.finnesBlant(gyldigUnderkodeliste))\n              {\n            \t\tbetjeningsstrategiSettesTil(\n                \t\tikke,\n                \t\tfaktiskFeil,\n            )\n        }\n    }}",
      "hjelpetekstSME": "Det er rapportert en inntekts- eller kostnadskonto som ikke er gyldig for virksomhetstypen",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_KONTO_FOR_UTSATT_INNTEKTSFOERING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harVirksomhetstypeForForsikring = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\"livsforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")}\n                 \t\n        // Kontrollen gir utslag dersom skattyter rapporterer konto for utsatt inntektsføring på andre foretak enn forsikring. \n \n        naeringsspesifikasjon \n       .utslagFor {\n       val harkontoforutsattinnteksfoering= forForekomsterAv(sti(balanseregnskap, annenSpesifikasjonAvBalanseregnskap, kontoForUtsattInntektsfoering))\n      .hvorMinstEnForekomst{kontoForUtsattInntektsfoeringSomTekst er oppgitt}\n      \thvis(ikke(harVirksomhetstypeForForsikring) og harkontoforutsattinnteksfoering \n                 ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil\n                \n            )\n        }\n    }\n    }\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er lagt inn balansespesifikasjon for utsatt inntektsføring som kun forsikringsforetak har lov til å rapportere.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_KORTSIKTIGGJELDTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n        .kontekst(ValideringSkattepliktig) {\n    \n    // Kontrollen gir utslag dersom skattyter rapporterer en kortsiktiggjeldtype som ikke er gyldig for skattyters regnskapsplikttype\n    \n            val harGyldigVirksomhetstype = naeringsspesifikasjon\n          \t\t.forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n                \"enkeltpersonforetak\",\n                \"oevrigSelskap\",\n                \"selskapMedDeltakerfastsetting\")}\n    \n             val harBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst {\n                    regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n                }\n    \n             val harFeilKorsiktigGjeldTypeForBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, kortsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type erLik \"2800\"\n                }\n          \tval harIngenRegnskapspliktellerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst {\n                    regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n                }\n    \n            val harFeilKorsiktigGjeldTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, kortsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type\n                        .finnesBlant(\"2310\", \"2320\", \"2330\", \"2460\", \"2500\", \"2510\", \"2920\", \"2970\", \"2980\")\n                }\n    \n           naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n                                                (harIngenRegnskapspliktellerBegrensetRegnskapsplikt og harFeilKorsiktigGjeldTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt) eller\n                                                (harBegrensetRegnskapsplikt og harFeilKorsiktigGjeldTypeForBegrensetRegnskapsplikt)\n            ) {\n                betjeningsstrategiSettesTil(\n                    ikke,\n                    faktiskFeil,\n                    1,\n                    Gruppering settesTil Næring\n                )\n            }\n        }",
      "hjelpetekstSME": "Det er brukt en kortsiktige gjeldstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_LANGSIKTIGGJELDTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n        .kontekst(ValideringSkattepliktig) {\n    \n    // Kontrollen gir utslag dersom skattyter rapporterer en langsiktiggjeldtype som ikke er gyldig for skattyters regnskapsplikttype\n    \n         \tval harGyldigVirksomhetstype = naeringsspesifikasjon\n          \t\t.forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n                \"enkeltpersonforetak\",\n                \"oevrigSelskap\",\n                \"selskapMedDeltakerfastsetting\")}\n    \n            val harRegnskapspliktstypeLikIngenRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n            val harFeilLangsiktigGjeldType = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, langsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type\n                        .erLik(\"2250\")\n                }\n            val harRegnskapspliktstypeLikIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n            val harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, langsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type\n                        .finnesBlant(\"2100\", \"2120\", \"2130\", \"2160\", \"2180\", \"2200\", \"2210\", \"2260\")\n                }\n    \n            naeringsspesifikasjon utslagFor hvis(\n                (harGyldigVirksomhetstype og (harRegnskapspliktstypeLikIngenRegnskapsplikt og harFeilLangsiktigGjeldType) eller\n                    (harRegnskapspliktstypeLikIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt))\n            ) {\n                betjeningsstrategiSettesTil(\n                    ikke,\n                    faktiskFeil,\n                    1,\n                    Gruppering settesTil Næring\n                )\n            }\n        }",
      "hjelpetekstSME": "Det er brukt en langsiktig gjeldstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_LØNNSKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilLoennskostnadTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, loennskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type erLik \"5600\"\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"fullRegnskapsplikt\" }\n    \n        val harFeilLoennskostnadTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, loennskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type erLik \"5950\"\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1 eller 2\n        // sammen med minst en av de nevnte typene av lønnskostnad\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og \n            (harIngenRegnskapsplikt og harFeilLoennskostnadTypeForIngenRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilLoennskostnadTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en lønnskostnadstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_OMLØPSMIDDELTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n        .kontekst(ValideringSkattepliktig) {\n    \n    // Kontrollen gir utslag dersom skattyter rapporterer en omløpsmiddeltype som ikke er gyldig for skattyters regnskapsplikttype\n    \n         \tval harGyldigVirksomhetstype = naeringsspesifikasjon\n          \t\t.forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n                \"enkeltpersonforetak\",\n                \"oevrigSelskap\",\n                \"selskapMedDeltakerfastsetting\")}\n    \n            val harIngenRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n            val harFeilOmloepsmiddelTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, omloepsmiddel, balanseverdiForOmloepsmiddel))\n                .forForekomsterAv(balanseverdi)\n                .hvorMinstEnForekomst {\n                    type erLik \"1895\"\n                }\n          \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n            val harFeilOmloepsmiddelTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, omloepsmiddel, balanseverdiForOmloepsmiddel))\n                .forForekomsterAv(balanseverdi)\n                .hvorMinstEnForekomst {\n                    type.finnesBlant(\"1490\", \"1501\", \"1560\", \"1840\")\n                }\n    \n    naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n                                \t\t(harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilOmloepsmiddelTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt) eller\n                                        (harIngenRegnskapsplikt og harFeilOmloepsmiddelTypeForIngenRegnskapsplikt)\n            ) {\n                betjeningsstrategiSettesTil(\n                    ikke,\n                    faktiskFeil,\n                    1,\n                    Gruppering settesTil Næring\n                )\n            }\n        }",
      "hjelpetekstSME": "Det er brukt en omløpsmiddeltype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_RESULTATKOMPONENTTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harResultatForIFRSForetak = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap)\n            .hvorMinstEnForekomst { sumResultatkomponentForIFRSForetak.beloepSomTall erStørreEnn 0 }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1 eller 5\n        // sammen med minst en av de nevnte typene av skattekostnad\n        naeringsspesifikasjon utslagFor hvis(\n            harGyldigVirksomhetstype og harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harResultatForIFRSForetak\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en resultatkomponentstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_SKATTEKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilSkattekostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, skattekostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8300\", \"8321\", \"8322\", \"8323\", \"8324\",\n                                 \"7.80.0.10\", \"7.80.0.10.00\", \"7.80.7.89\", \"7.80.7.89.00\", \"8.91.7.89.00\",\n                                 \"8.91.7.89\", \"8.92.7.89.00\", \"8.92.7.89\")\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"fullRegnskapsplikt\"}\n    \n        val harFeilSkattekostnadTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, skattekostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"7.80.0.10\", \"7.80.0.10.00\", \"7.80.7.89\", \"7.80.7.89.00\", \"8.91.7.89.00\",\n                                 \"8.91.7.89\", \"8.92.7.89.00\", \"8.92.7.89\")\n            }\n    \n        // kontrollen gir utslag dersom skattyter kombinderer en regnskapsplikttype og type skattekostnad som ikke er gyldig\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og\n            (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og\n                harFeilSkattekostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n            (harFullRegnskapsplikt og harFeilSkattekostnadTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "Det er brukt en skattekostnadstype som ikke er forenlig med regnskapspliktstypen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FORMUE_OG_GJELD_NÆRINGSEIENDOM",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n\t\tval partsnr = skattepliktUpersonligGjeldende\n        \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n               \n      // Kontrollen gir utslag dersom selskapet har næringseiendommer \"Anleggsmidler\" på konto 1105 og/eller 1115, og det ikke er beregnet formuesverdi næringseiendom i skattemeldingen\n      //AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n      // kontrollen gir merknad i valideringstjenesten\n      \nval manglerNæringseiendomUP = skattemeldingUpersonlig\n \t.harIngenForekomsterDer{\n      \t(fastsatt(formuesgrunnlagIkkeUtleidNaeringseiendomINorge) er oppgitt) og \n      \t(fastsatt(formuesgrunnlagIkkeUtleidNaeringseiendomIUtlandet) er oppgitt) og\n      \t(fastsatt(formuesgrunnlagUtleidNaeringseiendom) er oppgitt) }\n      \t\nnaeringsspesifikasjon\n\t.forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n    .forForekomsterAv(balanseverdi)\n        \n    .utslagFor {             \n   \t\thvis((fastsatt(type).finnesBlant(\"1105\",\"1115\")) og (manglerNæringseiendomUP) og\n                       (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",))\n          ) {\n         betjeningsstrategiSettesTil(\n         ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er rapportert bygninger i balansen. Skattemessig verdi av fast eiendom inngår i verdsettingen av selskapets aksjer. Opplysninger om fast eiendom legges til under temaet \"Faste eiendommer\" i skattemeldingen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_FORMUE_OG_GJELD_NÆRINGSEIENDOM_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n\t\tval partsnr = skattepliktUpersonligGjeldende\n        \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n               \n      // Kontrollen gir utslag dersom selskapet har næringseiendommer \"Anleggsmidler\" på konto 1105 og/eller 1115, og det ikke er beregnet formuesverdi næringseiendom i skattemeldingen\n      //AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n      // kontrollen gir merknad i valideringstjenesten\n      \nval manglerNæringseiendomUP = skattemeldingUpersonlig\n \t.harIngenForekomsterDer{\n      \t(fastsatt(formuesgrunnlagIkkeUtleidNaeringseiendomINorge) er oppgitt) og \n      \t(fastsatt(formuesgrunnlagIkkeUtleidNaeringseiendomIUtlandet) er oppgitt) og\n      \t(fastsatt(formuesgrunnlagUtleidNaeringseiendom) er oppgitt) }\n      \t\nnaeringsspesifikasjon\n\t.forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n    .forForekomsterAv(balanseverdi)\n        \n    .utslagFor {             \n   \t\thvis((fastsatt(type).finnesBlant(\"1105\",\"1115\")) og (manglerNæringseiendomUP) og\n                            (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",))\n          ) {\n         betjeningsstrategiSettesTil(\n         ikke, merknadIngen, 1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_FORSKJELLER_MIDLERTIDIGE_DRIFTSMIDLER_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n\t\tval partsnr = skattepliktUpersonligGjeldende\n        \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n           \n       val selskapIkkeIStorbedrift = ansvarligEnhet\n  \t\t.hvorMinstEnForekomst{erStorbedrift erLik false}\n     \n      \t//kontrollen plukker ut skattepliktige der den skattemessige inntektsvirkningen ved avskriving av driftsmidler ikke samsvarer med innrapporterte opplysninger i temaet spesifikasjon av anleggsmidler\n        //AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n        //kontrollen gir merknad i valideringstjenesten\n        \n        naeringsspesifikasjon\n            .utslagFor {\n                 val harFullRegnskapsplikt = forForekomsterAv(virksomhet)\n               \t\t.hvorMinstEnForekomst {\n                \t\tregnskapspliktstype erLik \"fullRegnskapsplikt\"\n            \t\t\t}\n                    \n                val erUpSdfEllerEnk = forForekomsterAv(virksomhet)\n                \t.hvorMinstEnForekomst{virksomhetstype erLik \"oevrigSelskap\"}\n    \n                val SMVerdiSaldoavskrevetAnleggsmiddel = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n                    .summer{(vederlagVedRealisasjonOgUttakInntektsfoertIAar.beloepSomTall) - (aaretsAvskrivning.beloepSomTall) + (aaretsInntektsfoeringAvNegativSaldo.beloepSomTall)}\n    \n                val SMVerdiLineærtavskrevetAnleggsmiddel = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n                    .summer{(vederlagVedRealisasjonOgUttakInntektsfoertIAar.beloepSomTall) - (aaretsAvskrivning.beloepSomTall)}\n    \n                val SMVerdiGevinstOgTapskonto = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel,gevinstOgTapskonto))\n                    .summer{(inntektFraGevinstOgTapskonto.beloepSomTall) - (inntektsfradragFraGevinstOgTapskonto.beloepSomTall)}\n    \n                val RMVerdiDriftsinntekt = forForekomsterAv(sti(resultatregnskap,driftsinntekt,annenDriftsinntektSomGruppe))\n                    .forForekomsterAv(inntekt)\n                    .filtrer{type erLik \"3880\"}\n                    .summer{beloepSomGruppe.beloepSomTall}\n    \n                val RMVerdiDriftskostnad = forForekomsterAv(sti(resultatregnskap,driftskostnad,annenDriftskostnadSomGruppe))\n                    .forForekomsterAv(kostnad)\n                    .filtrer{type.finnesBlant (\"6000\",\"6050\",\"7880\")}\n                    .summer{beloepSomGruppe.beloepSomTall}\n    \n                val VerdiMidlertidigeForskjellDriftsmiddel = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"driftsmiddelOgGoodwill\" }\n                    .summer {\n                        ((regnskapsmessigVerdiForrigeInntektsaar.beloepSomTall) - (skattemessigVerdiForrigeInntektsaar.beloepSomTall)) -\n                            ((regnskapsmessigVerdi.beloepSomTall) - (skattemessigVerdi.beloepSomTall))\n                    }\n    \n                val VerdiMidlertidigeForskjellerPositivGTK = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"positivSaldoPaaGevinstOgTapskonto\" }\n                    .summer { (skattemessigVerdiForrigeInntektsaar.beloepSomTall) - (skattemessigVerdi.beloepSomTall) }\n    \n                val VerdiMidlertidigeForskjellerNegativGTK = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"negativSaldoPaaGevinstOgTapskonto\" }\n                    .summer { (skattemessigVerdiForrigeInntektsaar.beloepSomTall) - (skattemessigVerdi.beloepSomTall) }\n    \n                val VerdiMidlertidigeForskjellerDifferanseTillegg = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"tilleggForDifferanseMellomBalansefoertOgVirkeligVerdiPaaFusjonsEllerFisjonstidspunktet\" }\n                    .summer { (regnskapsmessigVerdi.beloepSomTall) + (skattemessigVerdi.beloepSomTall) }\n    \n                val VerdiMidlertidigeForskjellerDifferanseFradrag = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"fradragForDifferanseMellomBalansefoertOgVirkeligVerdiPaaFusjonsEllerFisjonstidspunktet\" }\n                    .summer { (regnskapsmessigVerdi.beloepSomTall) + (skattemessigVerdi.beloepSomTall) }\n    \n                val sumSMVerdi =\n                    SMVerdiSaldoavskrevetAnleggsmiddel + SMVerdiLineærtavskrevetAnleggsmiddel + SMVerdiGevinstOgTapskonto\n    \n                val sumRMVerdi = RMVerdiDriftsinntekt - RMVerdiDriftskostnad\n    \n                val sumForskjeller =\n                    VerdiMidlertidigeForskjellDriftsmiddel + VerdiMidlertidigeForskjellerPositivGTK - VerdiMidlertidigeForskjellerNegativGTK +\n                        VerdiMidlertidigeForskjellerDifferanseTillegg - VerdiMidlertidigeForskjellerDifferanseFradrag\n        \n              val avvikRMSM = sumSMVerdi - (sumRMVerdi + sumForskjeller)\n              \n              val differanseSMRM = differanse(sumSMVerdi, (sumRMVerdi + sumForskjeller))\n    \n                hvis(harFullRegnskapsplikt og erUpSdfEllerEnk og selskapIkkeIStorbedrift og (differanseSMRM erStørreEnn 1000) og\n                            (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",)))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                    )\n                }\n            }\n    }  \n          \n",
      "hjelpetekstSME": "Det er avvik mellom skattemessig og regnskapsmessig inntektsvirkning av driftsmidler. Avviket er mellom innrapporterte opplysninger i temaet \"driftsmidler\" og beregnet endring i midlertidige forskjeller. Kontroller at skattemessig fradrag er riktig.     ",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_FORSKJELLER_MIDLERTIDIGE_DRIFTSMIDLER_UP_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n\t\tval partsnr = skattepliktUpersonligGjeldende\n        \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n         \n       val selskapIkkeIStorbedrift = ansvarligEnhet\n  \t\t.hvorMinstEnForekomst{erStorbedrift erLik false}\n   \n      \t//kontrollen plukker ut skattepliktige der den skattemessige inntektsvirkningen ved avskriving av driftsmidler ikke samsvarer med innrapporterte opplysninger i temaet spesifikasjon av anleggsmidler\n        //AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n        //kontrollen gir ikke merknad i valideringstjenesten\n        \n        naeringsspesifikasjon\n            .utslagFor {\n                 val harFullRegnskapsplikt = forForekomsterAv(virksomhet)\n               \t\t.hvorMinstEnForekomst {\n                \t\tregnskapspliktstype erLik \"fullRegnskapsplikt\"\n            \t\t\t}\n                    \n                val erUpSdfEllerEnk = forForekomsterAv(virksomhet)\n                \t.hvorMinstEnForekomst{\n                      \tvirksomhetstype erLik \"oevrigSelskap\" }\n    \n                val SMVerdiSaldoavskrevetAnleggsmiddel = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n                    .summer{(vederlagVedRealisasjonOgUttakInntektsfoertIAar.beloepSomTall) - (aaretsAvskrivning.beloepSomTall) + (aaretsInntektsfoeringAvNegativSaldo.beloepSomTall)}\n    \n                val SMVerdiLineærtavskrevetAnleggsmiddel = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n                    .summer{(vederlagVedRealisasjonOgUttakInntektsfoertIAar.beloepSomTall) - (aaretsAvskrivning.beloepSomTall)}\n    \n                val SMVerdiGevinstOgTapskonto = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel,gevinstOgTapskonto))\n                    .summer{(inntektFraGevinstOgTapskonto.beloepSomTall) - (inntektsfradragFraGevinstOgTapskonto.beloepSomTall)}\n    \n                val RMVerdiDriftsinntekt = forForekomsterAv(sti(resultatregnskap,driftsinntekt,annenDriftsinntektSomGruppe))\n                    .forForekomsterAv(inntekt)\n                    .filtrer{type erLik \"3880\"}\n                    .summer{beloepSomGruppe.beloepSomTall}\n    \n                val RMVerdiDriftskostnad = forForekomsterAv(sti(resultatregnskap,driftskostnad,annenDriftskostnadSomGruppe))\n                    .forForekomsterAv(kostnad)\n                    .filtrer{type.finnesBlant (\"6000\",\"6050\",\"7880\")}\n                    .summer{beloepSomGruppe.beloepSomTall}\n    \n                val VerdiMidlertidigeForskjellDriftsmiddel = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"driftsmiddelOgGoodwill\" }\n                    .summer {\n                        ((regnskapsmessigVerdiForrigeInntektsaar.beloepSomTall) - (skattemessigVerdiForrigeInntektsaar.beloepSomTall)) -\n                            ((regnskapsmessigVerdi.beloepSomTall) - (skattemessigVerdi.beloepSomTall))\n                    }\n    \n                val VerdiMidlertidigeForskjellerPositivGTK = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"positivSaldoPaaGevinstOgTapskonto\" }\n                    .summer { (skattemessigVerdiForrigeInntektsaar.beloepSomTall) - (skattemessigVerdi.beloepSomTall) }\n    \n                val VerdiMidlertidigeForskjellerNegativGTK = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"negativSaldoPaaGevinstOgTapskonto\" }\n                    .summer { (skattemessigVerdiForrigeInntektsaar.beloepSomTall) - (skattemessigVerdi.beloepSomTall) }\n    \n                val VerdiMidlertidigeForskjellerDifferanseTillegg = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"tilleggForDifferanseMellomBalansefoertOgVirkeligVerdiPaaFusjonsEllerFisjonstidspunktet\" }\n                    .summer { (regnskapsmessigVerdi.beloepSomTall) + (skattemessigVerdi.beloepSomTall) }\n    \n                val VerdiMidlertidigeForskjellerDifferanseFradrag = forForekomsterAv(midlertidigForskjell)\n                    .filtrer { fastsatt(midlertidigForskjellstype) erLik \"fradragForDifferanseMellomBalansefoertOgVirkeligVerdiPaaFusjonsEllerFisjonstidspunktet\" }\n                    .summer { (regnskapsmessigVerdi.beloepSomTall) + (skattemessigVerdi.beloepSomTall) }\n    \n                val sumSMVerdi =\n                    SMVerdiSaldoavskrevetAnleggsmiddel + SMVerdiLineærtavskrevetAnleggsmiddel + SMVerdiGevinstOgTapskonto\n    \n                val sumRMVerdi = RMVerdiDriftsinntekt - RMVerdiDriftskostnad\n    \n                val sumForskjeller =\n                    VerdiMidlertidigeForskjellDriftsmiddel + VerdiMidlertidigeForskjellerPositivGTK - VerdiMidlertidigeForskjellerNegativGTK +\n                        VerdiMidlertidigeForskjellerDifferanseTillegg - VerdiMidlertidigeForskjellerDifferanseFradrag\n        \n              val avvikRMSM = sumSMVerdi - (sumRMVerdi + sumForskjeller)\n              \n              val differanseSMRM = differanse(sumSMVerdi, (sumRMVerdi + sumForskjeller))\n    \n                hvis(harFullRegnskapsplikt og erUpSdfEllerEnk og selskapIkkeIStorbedrift og (differanseSMRM erStørreEnn 1000) og\n                            (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",)))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                        1,\n                    )\n                }\n            }\n    }  \n\n\n\n\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_FORSKJELLER_PERMANENT_3PROSENT_INNTEKTSFØRING_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n\t\tval partsnr = skattepliktUpersonligGjeldende\n        \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n      \n      // Validering dersom det er rapportert inntekter som skal inntektsføres med 3 %\n      //AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n      // kontrollen gir merknadStandard i valideringstjenesten\n\nval harUtbetalingUpersonlig = skattemeldingUpersonlig\n \t.forForekomsterAv(deltakersAndelAvFormueOgInntekt)\n    .summer{fastsatt(utbetalingMvTilDeltaker)}      \n\nnaeringsspesifikasjon\n      .utslagFor{  \n\t\tval harFullRegnskapsplikt = forForekomsterAv(virksomhet)\n        \t.hvorMinstEnForekomst{regnskapspliktstype erLik \"fullRegnskapsplikt\"}\n        val harGyldigVirksomhetstype = forForekomsterAv(virksomhet)\n        \t.hvorMinstEnForekomst{virksomhetstype erLik \"oevrigSelskap\"}\n        val harIkkePermanentForskjell = harIngenForekomsterDer{fastsatt(permanentForskjell) er oppgitt}\n     \tval harIkkeInntektsført3Prosent = forForekomsterAv(permanentForskjell) \n      \t\t.harIngenForekomsterDer{fastsatt(permanentForskjellstype) erLik \"skattepliktigDelAvUtbytterOgUtdelinger\"}\n      \tval harTilbakeførtSomPermanentForskjell = forForekomsterAv(permanentForskjell) \n      \t\t.filtrer{fastsatt(permanentForskjellstype) erLik \"tilbakefoeringAvInntektsfoertUtbytte\"}\n            .summer{beloepSomTall}\n     \t\n        \thvis(harFullRegnskapsplikt og harGyldigVirksomhetstype og (skalBekreftesAvRevisor erLik \"false\") og (((harUtbetalingUpersonlig erStørreEnn 100000) og (harIkkePermanentForskjell eller harIkkeInntektsført3Prosent)) eller \n                 ((harTilbakeførtSomPermanentForskjell erStørreEnn 100000) og (harIkkePermanentForskjell eller harIkkeInntektsført3Prosent))) og\n                            (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",))\n                ){\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                                         )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er rapportert utbytte fra aksjeselskap eller utdeling fra SDF innenfor fritaksmetoden. 3 % av dette grunnlaget skal inntektsføres. Dette gjelder likevel ikke utbytte fra datterselskap i skattekonsern. Beregnet inntekt rapporteres som permanent forskjell.",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_FORSKJELLER_PERMANENT_3PROSENT_INNTEKTSFØRING_UP_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n\t\tval partsnr = skattepliktUpersonligGjeldende\n        \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n      \n      // Validering dersom det er rapportert inntekter som skal inntektsføres med 3 %\n      // AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n      // kontrollen gir merknadStandard i valideringstjenesten\n\nval harUtbetalingUpersonlig = skattemeldingUpersonlig\n \t.forForekomsterAv(deltakersAndelAvFormueOgInntekt)\n    .summer{fastsatt(utbetalingMvTilDeltaker)}      \n\nnaeringsspesifikasjon\n      .utslagFor{  \n\t\tval harFullRegnskapsplikt = forForekomsterAv(virksomhet)\n        \t.hvorMinstEnForekomst{regnskapspliktstype erLik \"fullRegnskapsplikt\"}\n        val harGyldigVirksomhetstype = forForekomsterAv(virksomhet)\n        \t.hvorMinstEnForekomst{virksomhetstype erLik \"oevrigSelskap\"}\n        val harIkkePermanentForskjell = harIngenForekomsterDer{fastsatt(permanentForskjell) er oppgitt}\n     \tval harIkkeInntektsført3Prosent = forForekomsterAv(permanentForskjell) \n      \t\t.harIngenForekomsterDer{fastsatt(permanentForskjellstype) erLik \"skattepliktigDelAvUtbytterOgUtdelinger\"}\n      \tval harTilbakeførtSomPermanentForskjell = forForekomsterAv(permanentForskjell) \n      \t\t.filtrer{fastsatt(permanentForskjellstype) erLik \"tilbakefoeringAvInntektsfoertUtbytte\"}\n            .summer{beloepSomTall}\n     \t\n        \thvis(harFullRegnskapsplikt og harGyldigVirksomhetstype og (skalBekreftesAvRevisor erLik \"false\") og (((harUtbetalingUpersonlig erStørreEnn 100000) og (harIkkePermanentForskjell eller harIkkeInntektsført3Prosent)) eller \n                 ((harTilbakeførtSomPermanentForskjell erStørreEnn 100000) og (harIkkePermanentForskjell eller harIkkeInntektsført3Prosent))) og\n                   (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",))\n\n                ){\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                                         )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_FOU_AVVIK_PROSJEKTKATEGORI_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // Ved avvik mot prosjektkategori i forhold til opplysninger gitt av Norges forskningsråd \n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {    \n      \tval harVedlegg = fastsatt(prosjektkategori) har vedlegg\n      \n                hvis((fastsatt(prosjektkategori) erUlik grunnlag(prosjektkategori)) og (ikke(harVedlegg))\n                ){\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "Oppgitt prosjektkategori avviker fra opplysninger om godkjent prosjekt fra Norges Forskningsråd (NF). Det kan få betydning i forhold til hvor mye offentlig støtte som kan gis til prosjektet. Ved feil må det tas kontakt med NF.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_AVVIK_PROSJEKTNR_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // validering dersom det er avvik mellom oppgitt prosjektnummer og forhåndsutfylt fra Norges Forskningsråd \n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {\n      val harVedlegg = prosjektnummer har vedlegg\n      \n                hvis((grunnlag(prosjektnummer) erUlik fastsatt(prosjektnummer)) og ikke(harVedlegg))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Oppgitt prosjektnummer avviker fra opplysninger om godkjent prosjekt fra Norges Forskningsråd. Vi ber om at det lastes opp vedlegg med forklaring av avviket. Vedlegget knyttes til feltet for prosjektnummer.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_AVVIK_PROSJEKTPERIODE_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // Validering dersom det er avvik mellom oppgitt prosjektperiode og forhåndsutfylt fra Norges Forskningsråd\n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {    \n      \tval harVedlegg = (fastsatt(prosjektperiode.startdato) har vedlegg) eller (fastsatt(prosjektperiode.sluttdato) har vedlegg)\n      \n                hvis(((fastsatt(prosjektperiode.startdato) erUlik grunnlag(prosjektperiode.startdato)) eller \n                     (fastsatt(prosjektperiode.sluttdato) erUlik grunnlag(prosjektperiode.sluttdato))) og\n                     (ikke(harVedlegg))\n                ){\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "Oppgitt prosjektperiode avviker fra opplysninger om godkjent prosjekt fra Norges Forskningsråd. Vi ber om at det lastes opp vedlegg med forklaring av avviket. Vedlegget knyttes til feltet \"Prosjektperiode start\".",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_FIV_MELLOMBALANSE_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // Validering om å laste opp dokumentasjon ved angitt FIV-vurdering basert på mellombalanse\n // gir merknad i valideringstjenesten\n\nval datoIInntektsaar = KonstantTekstFelt(\"2022-01-01\").dato\n\nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {    \n      \tval harVedlegg = hvorMinstEnForekomst{(grunnlagsdokumentasjon erLik \"mellombalanse\") og (grunnlagsdokumentasjon har vedlegg)}\n      \n                hvis((prosjektperiode.startdato.dato erStørreEnn datoIInntektsaar) og\n                    (varIOekonomiskeVanskeligheterPaaSoeknadstidspunktet erLik \"true\") og\n                    (grunnlagsdokumentasjon erLik \"mellombalanse\") og\n                    (ikke(harVedlegg))\n                    )\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "Det er krysset av for at vurdering av økonomiske vanskeligheter er vurdert basert på mellombalanse. Vi ber om at denne mellombalansen lastes opp og knyttes til feltet \"Grunnlagsdokumentasjon\".",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_KOSTNADER_TILKNYTTET_PROSJEKT_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\nval partsnr = skattepliktUpersonligGjeldende\t\n  \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n    \n // Validering med informasjon om krav til timeregnskap og lønnsinnberetning \n //AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(spesifikasjonAvSkattefradragForKostnaderTilForskningOgUtvikling)\n   \t.utslagFor {      \n                hvis((fastsatt(samletTotalkostnad) erStørreEnn 0) og\n      \t\t\t\t(partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",)))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "Det er viktig å skille mellom kostnader direkte tilknyttet godkjent prosjekt og kostnader til ordinær drift. Du må kunne sende inn prosjektregnskap hvis vi ber om det.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_KOSTNADER_TILKNYTTET_PROSJEKT_UP_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\nval partsnr = skattepliktUpersonligGjeldende\t\n  \t.verdiFor { skattepliktOgOpplysningerOmSkattesubjekt.partsnummer }\n    \n // Validering med informasjon om krav til timeregnskap og lønnsinnberetning \n // AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(spesifikasjonAvSkattefradragForKostnaderTilForskningOgUtvikling)\n   \t.utslagFor {      \n                hvis((fastsatt(samletTotalkostnad) erStørreEnn 0) og\n                   (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",)))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_FOU_MAKS_OFF_STOETTE_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // Påminnelse om at det må oppgis eventuell annen offentlig støtte\n // gir merknad i valideringstjenesten\n\nval datoIInntektsaar = KonstantTekstFelt(\"2022-01-01\").dato  \n  \nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {          \n      val harMottattOffentligStøtte = hvorMinstEnForekomst{fastsatt(annenOffentligStoette.samletBruttoOffentligStoetteIProsjektperioden) er oppgitt}\n        \n                hvis((prosjektperiode.sluttdato.dato erStørreEnnEllerLik datoIInntektsaar) og ikke(harMottattOffentligStøtte)\n                ){\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n",
      "hjelpetekstSME": "Dersom dere har mottatt offentlig støtte utover maksimale grenser, må dere foreta avkorting av FoU-fradraget. Tillatt støtteintensitet er regulert i EU Kommisjonens forordning nr. 651/2014 av 17. juni 2014. Se forskriftens § 16-40-6 (7). ",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_REVISORS_BEKREFTELSE_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // Ved avvik mot prosjektkategori i forhold til opplysninger gitt av Norges forskningsråd \n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {          \n                hvis((fastsatt(prosjektSkalBekreftesAvRevisor) ikkeEr oppgitt) eller (fastsatt(prosjektSkalBekreftesAvRevisor) erLik \"false\"))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Vi minner om at FoU-fradrag skal bekreftes av revisor. Dersom dere vil be om revisors godkjenning",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_FOU_TIMEREGNSKAP_UP",
      "kontrollformel": "sakstype(Upersonlig)\n.kontekst(ValideringSkattepliktig) {\n // validering dersom det er avvik mellom oppgitt prosjektnummer og forhåndsutfylt fra Norges Forskningsråd \n // gir merknad i valideringstjenesten\n\nskattemeldingUpersonlig\n    .forForekomsterAv(forskningOgUtviklingsprosjekt)\n   \t.utslagFor {      \n                hvis(kostnadIInntektsaaret.antallEgneTimer erStørreEnn 2000)\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Merk at det er detaljerte krav til timelister",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_GJELD_FORMUESOBJEKTER_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype oevrigSelskap rapporterer samletGjeldOgFormuesobjekt\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harVirksomhetstypeLikAksjeselskap = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype erLik \"oevrigSelskap\"\n            }\n    \n        val rapportererGjeldOgFormuesobjekter = naeringsspesifikasjon\n            .forForekomsterAv(samletGjeldOgFormuesobjekter)\n            .hvorMinstEnForekomst {\n                (\n                    (formuesverdiForFormuesobjekterIkkeOmfattetAvVerdsettingsrabatt.beloepSomTall er oppgitt) eller\n                        (verdiFoerVerdsettingsrabattForFormuesobjekterOmfattetAvVerdsettingsrabatt.beloepSomTall er oppgitt) eller\n                        (samletGjeldSomGruppe.beloepSomTall er oppgitt) eller\n                        (formuesverdiForFormuesobjekterIkkeOmfattetAvVerdsettingsrabattTilordnetInnehaver.beloepSomTall er oppgitt) eller\n                        (verdiFoerVerdsettingsrabattForFormuesobjekterOmfattetAvVerdsettingsrabattTilordnetInnehaver.beloepSomTall er oppgitt) eller\n                        (samletGjeldTilordnetInnehaver.beloepSomTall er oppgitt)\n                    )\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeLikAksjeselskap og rapportererGjeldOgFormuesobjekter) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det finnes opplysninger i temaet samlet gjeld og formuesobjekter i næringsspesifikasjonen. Aksjeselskap skal ikke rapportere opplysninger i temaet samlet gjeld og formuesobjekter i næringsspesifikasjonen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_GTK_INNTEKTSFRADRAG_MANGLER_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnrUpersonlig = skattepliktUpersonligGjeldende     \n            .verdiFor {skattepliktOgOpplysningerOmSkattesubjekt.partsnummer}\n            \n       \tval harIkkeOppgittGevinstOgTapskonto = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .harIngenForekomsterDer { fastsatt(satsForInntektsfoeringOgInntektsfradrag) er oppgitt }\n\n        // kontrollen gir utslag dersom skattyter leverte skattemelding i SMIA i fjor med GTK eller ligger i kontrolliste over de som hadde GTK i SL i fjor, \n      \t// og IKKE har oppgitt GevinstOgTapskonto i årets skattemelding\n        // AB-test på skattytere som har tallet 0, 2, 4, 6, 8 i 7.siffer i partsnummeret\n        // kontrollen gir merknad i valideringstjenesten og SME\n        naeringsspesifikasjon\n            .utslagFor {\n                val positivUtgaaendeVerdiGevinstOgTapUpersonlig = finnesIKontrolliste(\n                    \"kontrolliste - negativ gevinst- og tapskonto\",\n                    listeAv(partsnrUpersonlig)\n                )\n                \n                hvis((positivUtgaaendeVerdiGevinstOgTapUpersonlig og harIkkeOppgittGevinstOgTapskonto) og\n                     (partsnrUpersonlig.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\",))\n\t\t\t\t\t\t){\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadTips, 1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Virksomheten stod oppført med netto tap på gevinst- og tapskonto per 31.12.2021. Opptil 20 % av tapet kan fradragsføres. Dette gjøres under temaet \"Gevinst- og tapskonto\".",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_GTK_INNTEKT_MANGLER_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnrUpersonlig = skattepliktUpersonligGjeldende     \n            .verdiFor {skattepliktOgOpplysningerOmSkattesubjekt.partsnummer}\n            \n       \tval harIkkeOppgittGevinstOgTapskonto = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .harIngenForekomsterDer { fastsatt(satsForInntektsfoeringOgInntektsfradrag) er oppgitt }\n\n        // kontrollen gir utslag dersom skattyter ligger i kontrolliste og IKKE har oppgitt GevinstOgTapskonto\n        // kontrollen gir merknad i valideringstjenesten og SME\n        naeringsspesifikasjon\n            .utslagFor {\n                val positivUtgaaendeVerdiGevinstOgTapUpersonlig = finnesIKontrolliste(\n                    \"kontrolliste - positiv gevinst- og tapskonto\",\n                    listeAv(partsnrUpersonlig)\n                )\n                \n                hvis(positivUtgaaendeVerdiGevinstOgTapUpersonlig og harIkkeOppgittGevinstOgTapskonto) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadTips, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Virksomheten stod oppført med netto gevinst på gevinst- og tapskonto per 31.12.2021. Minst 20 % av gevinsten skal inntektsføres. Dette gjøres under temaet \"Gevinst- og tapskonto\".",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_GTK_INNTEKT_MANGLER_UP_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnrUpersonlig = skattepliktUpersonligGjeldende     \n            .verdiFor {skattepliktOgOpplysningerOmSkattesubjekt.partsnummer}\n            \n       \tval harIkkeOppgittGevinstOgTapskonto = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .harIngenForekomsterDer { fastsatt(satsForInntektsfoeringOgInntektsfradrag) er oppgitt }\n\n      // kontrollen gir utslag dersom skattyter leverte skattemelding i SMIA i fjor med GTK eller ligger i kontrolliste over de som hadde GTK i SL i fjor, \n      \t// og IKKE har oppgitt GevinstOgTapskonto i årets skattemelding\n        // AB-test på skattytere som har tallet 1, 3, 5, 7, 9 i 7.siffer i partsnummeret\n        // kontrollen gir merknad i valideringstjenesten og SME\n        naeringsspesifikasjon\n            .utslagFor {\n                val positivUtgaaendeVerdiGevinstOgTapUpersonlig = finnesIKontrolliste(\n                    \"kontrolliste - negativ gevinst- og tapskonto\",\n                    listeAv(partsnrUpersonlig)\n                )\n                \n                hvis((positivUtgaaendeVerdiGevinstOgTapUpersonlig og harIkkeOppgittGevinstOgTapskonto) og\n                     (partsnrUpersonlig.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\",))\n\t\t\t\t\t\t){\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadIngen, 1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_HØY_AVSKRIVINGSSATS",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom det er benyttet for høy avskrivingssats for saldoavskrivninger når grunnlaget for avskriving er høyere enn 15000\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"a\") og (avskrivningssats erStørreEnn 30)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"b\") og (avskrivningssats erStørreEnn 20)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"c\") og (avskrivningssats erStørreEnn 24)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"c2\") og (avskrivningssats erStørreEnn 30)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"d\") og (avskrivningssats erStørreEnn 20)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"e\") og (avskrivningssats erStørreEnn 14)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"f\") og (avskrivningssats erStørreEnn 12)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"g\") og (avskrivningssats erStørreEnn 5)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"h\") og (avskrivningssats erStørreEnn 20)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"i\") og (avskrivningssats erStørreEnn 2)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"j\") og (avskrivningssats erStørreEnn 10))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Du har brukt for høy avskrivingssats for et driftsmiddel. Du må endre satsen.<a href=\"https://www.skatteetaten.no/satser/avskrivningssatser/\"target=\"_blank\"> På nettsiden til Skatteetaten finner du riktige satser per inntektsår (ny fane).</a>",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_INNTEKTSFRADRAG_GTK_HØY",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom sats for inntektsfradrag i gevinst- og tapskonto er høyere enn 20 % og grunnlaget er mindre enn kr - 15 000\n        // kontrollen avviser innsending\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .utslagFor {\n                hvis(\n                    (grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erMindreEnn -15000)\n                        og (satsForInntektsfoeringOgInntektsfradrag erStørreEnn 20)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt for høy sats. Satsen kan settes til maksimalt 20 prosent når grunnlaget er lavere enn - 15 000 kroner.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_INNTEKTSFØRING_GTK_LAV",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom sats for inntektsføring av gevinst- og tapskonto er lavere enn 100 % når grunnlaget er positivt og under kr 15 000\n        // kontrollen avviser innsending\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .utslagFor {\n                hvis(\n                    ((grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erStørreEnn 15000) og (satsForInntektsfoeringOgInntektsfradrag erMindreEnn 20)) eller\n                        (\n                            (grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erMindreEnnEllerLik 15000) og (grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erStørreEnn 0) og\n                                (satsForInntektsfoeringOgInntektsfradrag erMindreEnn 100)\n                            )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt for lav sats. Satsen skal settes til mimium 20 prosent når grunnlaget er høyere enn 15 000 kroner og mimium 100 prosent når grunnlaget er lavere eller lik 15 000 kroner.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_KONSERNBIDRAG_AVGITT_MANGLER_SELSKAPSNAVN",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig avgir konsernbidrag og mottakers orgnavn mangler\n        // kontrollen gir merknad i valideringstjenesten\n    \n     skattemeldingUpersonlig\n            .forForekomsterAv(sti(inntektOgUnderskudd,avgittKonsernbidrag))\n            .utslagFor {\n               hvis((fastsatt(mottakersOrganisasjonsnummer) er oppgitt) og (fastsatt(mottakersOrganisasjonsnavn) ikkeEr oppgitt)       \n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n",
      "hjelpetekstSME": "Feltet \"mottakers organisasjonsnavn\" må fylles ut.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_KONSERNBIDRAG_MOTTATT_MANGLER_SELSKAPSNAVN",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig mottar konsernbidrag og avgivers orgnavn mangler\n        // kontrollen gir merknad i valideringstjenesten\n    \n     skattemeldingUpersonlig\n            .forForekomsterAv(sti(inntektOgUnderskudd,mottattKonsernbidrag))\n            .utslagFor {\n               hvis((fastsatt(avgiversOrganisasjonsnummer) er oppgitt) og (fastsatt(avgiversOrganisasjonsnavn) ikkeEr oppgitt)       \n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n",
      "hjelpetekstSME": "Feltet \"avgivers organisasjonsnavn\" må fylles ut.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_KREDITFRADRAG_FRADRAG_NORSK_SKATT_DOKUMENTASJON",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattyter krever fradrag for betalt skatt i utlandet uten å legge ved dokumentasjon\n        // kontrollen gir merknad i valideringstjenesten og SME\n\nskattemeldingUpersonlig\n   \t.forForekomsterAv(gruppe(sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilAnnenUtenlandsinntekt,inntektsskattBetaltIUtlandet),\n    \t\t\t\t\t\t sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilInntektFraNOKUSSelskapEllerVirksomhetILavskatteland,inntektsskattBetaltIUtlandet),\n                \t\t\t sti(fradragINorskFormuesskattForSkattBetaltTilFremmedStatKnyttetTilAnnenUtenlandsinntekt,formuesskattBetaltIUtlandet),             \n                \t\t\t sti(fradragINorskFormuesskattForSkattBetaltTilFremmedStatKnyttetTilInntektFraNOKUSSelskapEllerVirksomhetILavskatteland,formuesskattBetaltIUtlandet)\n                            ))\n    \n            .utslagFor {\n             val harVedlegg = beloepSomTall har vedlegg \n                \n                hvis((fastsatt(landkode) er oppgitt) og ikke(harVedlegg)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadInformasjon, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det må dokumenteres at beløpet det kreves fradrag for<ul >  <li>utgjør utenlandsk skatt som er fradragsberettiget i norsk skatt</li><li>er innbetalt i utlandet<li>utgjør endelig skatt ved ordinær skattefastsetting i utlandet</li></ul> Dokumentasjonen lastes opp i tilknytning til feltet \"beløp\" i betalt inntektsskatt til utlandet. <br>Hvis selskapet ikke har mottatt dokumentasjon fra utlandet, ber vi dere vente med å kreve fradraget og sende inn ny skattemelding (ny egenfastsetting) med krav om kreditfradrag når dokumentasjonen er mottatt.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_KREDITFRADRAG_SKTL_1630_1631",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattyter mangler dokumentasjon i feltet  \"Årets fradragsberettigede andel av underliggende selskapsskatt\"\n        // kontrollen gir merknad i valideringstjenesten og SME\n \nskattemeldingUpersonlig\n    .utslagFor {\n      val harOpplysningerOmKreditIht1631 = hvorMinstEnForekomst{fradragINorskSkattVedSkattleggingAvUtbytteMvFraUtenlandskDatterselskap er oppgitt}\n                \n                hvis(harOpplysningerOmKreditIht1631) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadInformasjon, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Temaet \"Kreditfradrag i utenlandsk skatt av overskudd eller utbytte fra utenlandsk datterselskap\" skal dere bare benytte for skatt på utbytte fra utenlandsk datterselskap og/eller underliggende selskapsskatt i utlandet.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_KREDITFRADRAG_SKTL_1630_DOKUMENTASJON",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattyter mangler dokumentasjon i feltet  \"Årets fradragsberettigede andel av underliggende selskapsskatt\"\n        // kontrollen gir merknad i valideringstjenesten og SME\n     \nskattemeldingUpersonlig\n   \t.forForekomsterAv(fradragINorskSkattVedSkattleggingAvUtbytteMvFraUtenlandskDatterselskap)\n    .utslagFor {\n      val harVedlegg = anvendtFradragsberettigetAndelAvUnderliggendeSelskapsskattIInntektsaaret har vedlegg\n                \n                hvis((fastsatt(anvendtFradragsberettigetAndelAvUnderliggendeSelskapsskattIInntektsaaret) er oppgitt) og ikke(harVedlegg)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadInformasjon, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det må forklares i et vedlegg hvordan beløpet i feltet \"Årets fradragsberettigede andel av underliggende selskapsskatt\" er regnet ut. Betalt skatt må dokumenteres. Dokumentasjonen lastes opp i tilknytning til feltet.",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_KREDITFRADRAG_UNNTAK_FRITAKSMETODE",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig har oppgitt utbytte eller aksjesalgsgevinst i land med landkode innenfor EØS\n        // kontrollen gir merknad i valideringstjenesten\n      val EOESLandkoder = aktiveLandkoder_2022\n            .forForekomsterAv { kode }\n            .filtrer { fastsatt(kodetillegg.medlemAvEoes) erLik \"Ja\" }\n            .verdierFor { tekniskNavn } \n     \n     skattemeldingUpersonlig\n            .forForekomsterAv(gruppe(sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilAnnenUtenlandsinntekt,inntektsskattBetaltIUtlandet),\n                                     sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilInntektFraNOKUSSelskapEllerVirksomhetILavskatteland,inntektsskattBetaltIUtlandet)))                        \n            .utslagFor {\n              val landIEØS = hvorMinstEnForekomst{fastsatt(landkode) finnesBlant EOESLandkoder}\n\n               hvis((fastsatt(type).finnesBlant(\"annenInntekt\",\"aksjeutbytte\")) og landIEØS\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Kreditfradrag kan bare kreves av skatt på utbytte og gevinst som ikke er omfattet av fritaksmetoden. Utbytte og/eller gevinst ved salg av aksjer må være tatt til skattemessig inntekt for at det kan kreves kreditfradrag for den utenlandske skatten.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_MANGLER_ANSKAFFELSESKOST",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når anskaffelseskost ikke er oppgitt for lineært avskrevet driftsmiddel\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((anskaffelseskost.beloepSomTall ikkeEr oppgitt) og (paakostning.beloepSomTall ikkeEr oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det må legges inn anskaffelseskost for driftsmidler som avskrives lineært.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_MANGLER_LEVETID",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når levetid ikke er oppgitt for lineært avskrevet driftsmiddel\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(levetid ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det må legges inn levetid for driftsmidler som avskrives lineært.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_MANGLER_REALISASJONSDATO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når driftsmiddelet er realisert og realisasjonsdato mangler\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det må legges inn realisasjonsdato for driftsmidler som er solgt eller realisert på annen måte.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_PÅKOSTNING",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Kontrollen slår ut når det rapporteres påkostning på et driftsmiddel som avskrives lineært og ervervsdatoen er tidligere enn i inntektsåret\n        // Kontrollen medfører avvisning i valideringstjenesten\n        val datoIInntektsaaret = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .verdiFor { regnskapsperiode.start }.dato\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((paakostning.beloepSomTall er oppgitt) og (verdiFor { ervervsdato }.dato erMindreEnn datoIInntektsaaret)) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er rapportert påkostning på et lineært avskrivbart driftsmiddel som er anskaffet i et tidligere år. Slike påkostninger må registreres som et eget lineært avskrivbart driftsmiddel.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_MANGLER_EROMFATTETAVFRITAKSMETODEN",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n    \n        // kontrollen gir utslag dersom det er rapportert verdipapir uten at feltet erOmtattetAvFritaksmetoden er oppgitt\n        // kontrollen gir merknad i valideringstjenesten\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(\n                gruppe(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        aksjeIAksjonaerregisteret\n                    ),\n                    sti(spesifikasjonAvForholdRelevanteForBeskatning, aksjeIkkeIAksjonaerregisteret),\n                    sti(spesifikasjonAvForholdRelevanteForBeskatning, annetFinansprodukt),\n                    sti(spesifikasjonAvForholdRelevanteForBeskatning, verdipapirfond)\n    \n                )\n            )\n            .utslagFor {\n                hvis(erOmfattetAvFritaksmetoden ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det mangler opplysninger om ett eller flere verdipapirer er omfattet av fritaksmetoden eller ikke.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MANGLER_OPPLYSNINGER_OM_SELSKAPET",
      "kontrollformel": "// Kontrollen gir utslag dersom selskapet ikke svarer på spørsmålene om det er børsnotert eller om det har ytelser\n    // mellom aksjonær og selskapet eller temaet Opplysninger om selskapet mangler\n    // Kontrollen gir merknad i valideringstjenesten\n    sakstype(Upersonlig)\n        .kontekst(ValideringSkattepliktig) {\n    \n            val manglerOpplysninger = skattemeldingUpersonlig\n                .forForekomsterAv(opplysningerOmSkattesubjekt)\n                .harIngenForekomsterDer {\n                    (fastsatt(erBoersnotert) er oppgitt) eller\n                        (fastsatt(harYtelseMellomAksjonaerEllerNaerstaaendeOgSelskapEllerSelskapetsDatterselskap) er oppgitt)\n                }\n    \n            skattemeldingUpersonlig\n                .utslagFor {\n                    hvis(manglerOpplysninger eller (fastsatt(opplysningerOmSkattesubjekt) ikkeEr oppgitt)) {\n                        betjeningsstrategiSettesTil(\n                            ikke, merknadStandard, 1\n                        )\n                    }\n                }\n        }",
      "hjelpetekstSME": "Det må svares på om selskapet er børsnotert og om det er ytelser mellom aksjonær og selskapet.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MANGLER_VERDI_BAK_AKSJENE",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom ikke-børsnoterte aksjeselskap ikke rapporterer feltet samletVerdiBakAksjeneISelskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n      \tval erIkkeFormuesskattepliktig = skattepliktUpersonligGjeldende\n      \t\t.forForekomsterAv{skatteplikt}\n            .hvorMinstEnForekomst{erFritattForFormuesskatt erLik true}\n      \n      \tval selskapetErBoersnotert = skattemeldingUpersonlig\n            .forForekomsterAv(opplysningerOmSkattesubjekt)\n            .hvorMinstEnForekomst { erBoersnotert erLik true }\n    \n        val harIkkeVerdiBakAksjene = skattemeldingUpersonlig\n            .forForekomsterAv(verdsettingAvAksje)\n            .harIngenForekomsterDer { fastsatt(samletVerdiBakAksjeneISelskapet) er oppgitt }\n    \n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                hvis(erIkkeFormuesskattepliktig og harIkkeVerdiBakAksjene og ikke(selskapetErBoersnotert)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                                         )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det finnes ikke opplysninger i feltet \"samletVerdiBakAksjeneISelskapet\" i skattemeldingen. Aksjeselskap skal alltid beregne denne verdien.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MANGLER_YTELSE",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val harYtelseFraAksjonaerEllerNaerstaaendeINS = naeringsspesifikasjon\n            .forForekomsterAv(sti(andreForhold, ytelseFraAksjonaerDeltakerEllerNaerstaaende))\n            .hvorMinstEnForekomst {\n                (laan.kostnadsfoerteRenter erStørreEnn 0) eller\n                    (laan.laanesaldoVedUtgangAvInntektsaar erStørreEnn 0) eller\n                    (laan.laanesaldoPer061015 erStørreEnn 0) eller\n                    (sikkerhetsstillelse.beloepPer061015 erStørreEnn 0) eller\n                    (sikkerhetsstillelse.beloepVedUtgangAvInntektsaar erStørreEnn 0) eller\n                    (realisasjonOgUtleieAvFormuesobjektMv er oppgitt)\n            }\n    \n        val harYtelseFraSelskapINS = naeringsspesifikasjon\n            .forForekomsterAv(sti(andreForhold, ytelseFraSelskapEllerSelskapetsDatterselskap))\n            .hvorMinstEnForekomst {\n                (totaltUtdeltUtbytteVedUtgangAvInntektsaar erStørreEnn 0) eller\n                    (totaltUtdeltUtbytteVedUtgangAvInntektsaar erStørreEnn 0) eller\n                    (laan.kostnadsfoerteRenter erStørreEnn 0) eller\n                    (laan.laanesaldoVedUtgangAvInntektsaar erStørreEnn 0) eller\n                    (laan.laanesaldoPer061015 erStørreEnn 0) eller\n                    (sikkerhetsstillelse.beloepPer061015 erStørreEnn 0) eller\n                    (sikkerhetsstillelse.beloepVedUtgangAvInntektsaar erStørreEnn 0) eller\n                    (realisasjonOgUtleieAvFormuesobjektMv er oppgitt)\n            }\n    \n        skattemeldingUpersonlig\n            .utslagFor {\n                val harYtelserMellomAksjonaerOgSelskapISMU = forForekomsterAv(opplysningerOmSkattesubjekt)\n                    .hvorMinstEnForekomst { harYtelseMellomAksjonaerEllerNaerstaaendeOgSelskapEllerSelskapetsDatterselskap erLik true }\n    \n                hvis(harYtelserMellomAksjonaerOgSelskapISMU og (ikke(harYtelseFraAksjonaerEllerNaerstaaendeINS eller harYtelseFraSelskapINS))) {\n                    betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det mangler spesifikasjon av ytelse mellom selskap og aksjonær/deltaker.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MIDLERTIDIG_FORSKJELL_BESKRIVELSE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Dersom midlertidigForskjell.midlertidigForskjellstype = annenPositivMidlertidigForskjell eller annenNegativMidlertidigForskjell og midlertidigForskjell.beskrivelse mangler\n        naeringsspesifikasjon\n            .forForekomsterAv(midlertidigForskjell)\n            .filtrer {\n                fastsatt(midlertidigForskjellstype)\n                    .finnesBlant(\"annenPositivMidlertidigForskjell\", \"annenNegativMidlertidigForskjell\")\n            }\n            .utslagFor {\n                hvis(beskrivelse ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Når type midlertidig forskjell er annen negativ eller annen positiv, så må det legges inn en beskrivelse av forskjellen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEDSKREVET_VERDI_DRIFTSMIDDEL",
      "kontrollformel": "      sakstype(Personlig, Upersonlig, SDF)\n         .kontekst(ValideringSkattepliktig) {\n             // kontrollen gir utslag dersom nedskrevet verdi av utskilte driftsmidler er høyere enn \n             // summen av inngående verdi, nyanskaffelse og påkostning\n             // kontrollen gir merknad i valideringstjenesten\n             naeringsspesifikasjon\n                 .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n                 .utslagFor {\n                     hvis(\n                         (nedskrevetVerdiAvUtskiltAnleggsmiddel.beloepSomTall er oppgitt)\n                             og (\n                             (nedskrevetVerdiAvUtskiltAnleggsmiddel.beloepSomTall) erStørreEnn\n                                 ((inngaaendeVerdi.beloepSomTall) + (nyanskaffelse.beloepSomTall) + (paakostning.beloepSomTall))\n                             )\n                     ) {\n                         betjeningsstrategiSettesTil(\n                             ikke, merknadStandard, 1\n                         )\n                     }\n                 }\n         }\n    \n\n\n",
      "hjelpetekstSME": "Summen av inngående verdi,  nyanskaffelser og påkostning i saldogruppen kan ikke være lavere enn den nedskrevne verdien av utskilte driftsmidler.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEGATIV_KONTO_2080",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom post 2080 \"udekket tap\" er negativ\n        // kontrollen avviser innleveringen\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, egenkapital))\n            .forForekomsterAv(kapital)\n            .utslagFor {\n                hvis((type erLik \"2080\") og (beloepSomGruppe.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er lagt inn verdi med negativ fortegn på konto for udekket tap. Verdien skal ikke ha fortegn.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_NEGATIV_KONTO_3300",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom post 3300 \"spesielle offentlige avgifter vedrørende salg\" er negativ\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, salgsinntekt))\n            .forForekomsterAv(inntekt)\n            .utslagFor {\n                hvis((type erLik \"3300\") og (beloepSomGruppe.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er lagt inn verdi med negativ fortegn på konto for spesielle offentlige avgifter vedrørende salg. Verdien skal i utgangspunktet ikke ha fortegn.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEGATIV_SALDO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når grunnlag for inntektsføring er lavere enn - 15 000 og avskrivingssats er mindre enn minimumssatsen for saldogruppen\n        // kontrollen gir utslag når grunnlag for inntektsføring er høyere eller lik - 15 000 og avskrivningssats er mindre enn 100 %\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    (\n                        (saldogruppe erLik \"a\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 30)) eller\n                            (\n                                (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                    (avskrivningssats erMindreEnn 100)\n                                )\n                        ) eller\n                        (\n                            (saldogruppe erLik \"c\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 24)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            ) eller\n                        (\n                            (saldogruppe erLik \"c2\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 30)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            ) eller\n                        (\n                            (saldogruppe erLik \"d\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 20)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            ) eller\n                        (\n                            (saldogruppe erLik \"j\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 10)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt for lav sats ved beregning av beløpet som skal inntektsføres fra negativ saldo.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEGATIV_SALDO_IKKE_OVERFØRT_GTK",
      "kontrollformel": "sakstype(Personlig,Upersonlig,SDF)\n.kontekst(ValideringSkattepliktig) {\n // Dersom grunnlag for årets saldoavskrivning  i saldogruppe b, e, f, g, h eller i < 0  i felt \"Grunnlag for avskrivning eller inntektsføring\", og hele den negative saldoen ikke er overført til gevinst og tapskonto i felt \"Gevinst overført til gevinst- og tapskonto\"\n // gir merknad i valideringstjenesten\n\nnaeringsspesifikasjon\n    .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel,saldoavskrevetAnleggsmiddel))\n    .filtrer{fastsatt(saldogruppe).finnesBlant(\"b\",\"e\",\"f\",\"g\",\"h\",\"i\")}\n   \t.utslagFor {\n      \thvis((fastsatt(vederlagVedRealisasjonOgUttak.beloepSomTall) er oppgitt) og \n      \t\t\t(fastsatt(utgaaendeVerdi.beloepSomTall) erMindreEnn 0) og\n             \t(fastsatt(erRealisasjonenUfrivilligOgGevinstenBetingetSkattefri) erLik false)\n                ){\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Du har et negativt grunnlag for avskrivning i saldogruppen. Den negative saldoen kan inntektsføres helt eller delvis i året i feltet \"Salg og annen realisasjon inntektsført i inntektsåret\". Resten av den negative saldoen må overføres til feltet \"Gevinst overført til gevinst- og tapskonto\".",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_OBLIGASJON_MANGLER_OPPLYSNING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        skattemeldingUpersonlig\n            .forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n            .utslagFor {\n                hvis(\n                    rentepapiretsNavn er oppgitt og (\n                        (kontofoerersNavn ikkeEr oppgitt) eller\n                            (kontonummer ikkeEr oppgitt) eller\n                            (finansproduktidentifikator ikkeEr oppgitt) eller\n                            (finansproduktidentifikatortype ikkeEr oppgitt) eller\n                            (landkode ikkeEr oppgitt) eller\n                            (antallObligasjonOgSertifikat ikkeEr oppgitt)\n                        )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det mangler en eller flere opplysninger om rapportert obligasjon eller sertifikat. Vi ønsker at følgende felter fylles ut; kontofoerersNavn, kontonummer, finansproduktidentifikator, finansproduktidentifikatortype, landkode og antallObligasjonOgSertifikat.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_PERMANENT_FORSKJELL_BESKRIVELSE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Dersom permanentForskjell.permanentForskjellstype = annetInntektstillegg eller annetInntektsfradrag og permanentForskjell.beskrivelse mangler\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(permanentForskjell)\n            .filtrer {\n                fastsatt(permanentForskjellstype)\n                    .finnesBlant(\"annetInntektstillegg\", \"annetInntektsfradrag\")\n            }\n            .utslagFor {\n                hvis(beskrivelse ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Når type permanent forskjell er annet inntektstillegg eller annet inntektsfradrag, så må det legges inn en beskrivelse av forskjellen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_PERSONINNTEKT_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig som ikke er enkeltpersonforetak rapporterer personinntekt\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n         val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n             \"oevrigSelskap\",\n             \"selskapMedDeltakerfastsetting\",\n             \"bankOgFinansieringsforetak\", \n             \"livsforsikringsforetakOgPensjonskasse\",\n             \"skadeforsikringsforetak\") \n            }\n    \n        val harRapportertPersoninntekt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .hvorMinstEnForekomst {\n                (identifikatorForFordeltBeregnetPersoninntekt er oppgitt)\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harGyldigVirksomhetstype og harRapportertPersoninntekt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }}",
      "hjelpetekstSME": "Det finnes opplysninger om personinntekt i næringsspesifikasjonen. Aksjeselskap skal ikke rapportere opplysninger om personinntekt i næringsspesifikasjonen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_PRIMÆRBOLIG_UPERSONLIG",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n      // Kontrollen gir utslag dersom skattyter oppgir bolig som primærbolig\n      // gir faktiskFeil\n       \nskattemeldingUpersonlig\n      \t.forForekomsterAv(gruppe(\n      \t\tformuesgrunnlagBoenhetIBoligselskap,\n      \t\tformuesgrunnlagFlerboligbygning,\n      \t\tformuesgrunnlagSelveidBolig))\n     \t.utslagFor {\n    \n                val boligbrukBoenhetOgSelveidBolig = hvorMinstEnForekomst{fastsatt(boligbruk) erLik \"primaerbolig\"}\n                val boligbrukFlerboligbygning = forForekomsterAv(useksjonertBoenhet)\n                \t.hvorMinstEnForekomst{fastsatt(boligbruk) erLik \"primaerbolig\"}\n                \n            hvis(boligbrukBoenhetOgSelveidBolig eller boligbrukFlerboligbygning) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Selskapet har rapportert at selveid bolig, boenhet i boligselskap eller flerboligbygning er primærbolig. Et selskap kan ikke ha primærbolig, og må angi slike boliger er sekundærbolig.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_REGELTYPE_AARSREGNSKAP_MANGLER",
      "kontrollformel": "sakstype(Personlig, Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med regnskapspliktstype full regnskapsplikt ikke rapporterer regeltype for årsregnskap\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harRegnskapspliktstypeLik2 = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"fullRegnskapsplikt\"\n            }\n    \n        val regeltypeForAarsregnskapMangler = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .harIngenForekomsterDer {\n                regeltypeForAarsregnskap\n                    .finnesBlant(\n                        \"regnskapslovensAlminneligeRegler\",\n                        \"regnskapslovensReglerForSmaaForetak\",\n                        \"regnskapslovensReglerForBankKredittforetakOgFinansieringsforetak\",\n                        \"godRegnskapsskikkForIdeelleOrganisasjoner\",\n                        \"ifrs\",\n                        \"forenkletIfrs\"\n                    )\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harRegnskapspliktstypeLik2 og regeltypeForAarsregnskapMangler) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det finnes ikke opplysninger om hvilken regeltype for årsregnskap som er benyttet ved føringen av resultatregnskapet og balansen. Aksjeselskap skal alltid opplyse om dette.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_ANSKAFFELSE_EKSISTERENDE_ENKELTSALDO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det rapporteres nyanskaffelse på en eksisterende enkeltesaldo\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .filtrer { fastsatt(saldogruppe).finnesBlant(\"e\", \"f\", \"g\", \"h\", \"i\") }\n            .utslagFor {\n                hvis((inngaaendeVerdi.beloepSomTall er oppgitt) og (nyanskaffelse.beloepSomTall er oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Du har rapportert nyanskaffelse på en saldo som bare skal omfatte ett driftsmiddel. Hvis dette gjelder påkostning, må beløpet flyttes til feltet \"påkostninger\". Gjelder det nyanskaffelse, må det opprettes en ny saldo.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_FORRETNINGSBYGGFØR_01011984_ERVERVSDATO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom det oppgis opplysninger om forretningseiendom anskaffet før 01.01.84 og ervervsdatoen er senere enn 01.01.84\n        // kontrollen medfører merknad i valideringstjenesten\n        val forretningsbygg = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .hvorMinstEnForekomst {\n                (\n                    (forretningsbyggAnskaffetFoer01011984.historiskKostpris.beloepSomTall er oppgitt)\n                        eller (forretningsbyggAnskaffetFoer01011984.nedskrevetVerdiPr01011984.beloepSomTall er oppgitt)\n                        eller (forretningsbyggAnskaffetFoer01011984.nedreGrenseForAvskrivning.beloepSomTall er oppgitt)\n                    )\n            }\n    \n        val datoGrense = KonstantTekstFelt(\"1984-01-01\").dato\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((forretningsbygg) og (ervervsdato er oppgitt) og (ervervsdato.dato erStørreEnn datoGrense)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Feltet gjelder bare forretningsbygg anskaffet før 1. januar 1984.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_INNGÅENDE_VERDI_NY_ENKELTSALDO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det rapporteres inngående verdi på en ny enkeltesaldo\n        // kontrollen medfører merknad i valideringstjenesten\n    \n        val datoIInntektsaaret = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .verdiFor { regnskapsperiode.start }.dato\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .filtrer { fastsatt(saldogruppe).finnesBlant(\"e\", \"f\", \"g\", \"h\", \"i\") }\n            .utslagFor {\n                hvis((inngaaendeVerdi.beloepSomTall er oppgitt) og (verdiFor { ervervsdato }.dato erStørreEnn datoIInntektsaaret)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er rapportert inngående verdi på en enkeltsaldo som har dato for anskaffelse i inntektsåret. For saldogruppe e-i skal det være én saldo per driftsmiddel. Hvis du har anskaffet et driftsmiddel i inntektsåret, må du opprette en ny saldo der beløpet oppgis som nyanskaffelse.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_MANGLER_REALISASJONSDATO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når driftsmiddelet er realisert og realisasjonsdato mangler\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    ((saldogruppe erLik \"e\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"f\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"g\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"h\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"i\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Er driftsmiddelet solgt eller realisert på annen måte? Da må du oppgi realisasjonsdatoen.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SAMLESALDO_GTK",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    ((saldogruppe erLik \"a\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"c\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"c2\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"d\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"j\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt)))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Gevinst eller tap etter salg eller annen realisasjon for saldogruppe A, C, C2  D eller J skal ikke overføres til gevinst- og tapskonto. Slike gevinster eller tap skal inntekts- eller fradragsføres direkte på saldo, med minimum 20 prosent ved gevinst og maksimum 20 prosent ved tap.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_SKOG_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype ulik enkeltpersonforetak rapporterer skogbruk\n        // kontrollen gir faktiskFeil i valideringstjenesten\n        val harVirksomhetstypeUlikEnkeltpersonforetak = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype.finnesBlant(\"oevrigSelskap\", \"selskapMedDeltakerfastsetting\", \"bankOgFinansieringsforetak\",\n                                            \"livsforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")\n            }\n    \n        val rapportererSkogbruk = naeringsspesifikasjon\n            .forForekomsterAv(sti(skogbruk, skogOgToemmerkonto))\n            .hvorMinstEnForekomst { driftsresultatSomKanOverfoeresTilToemmerkonto.beloepSomTall er oppgitt }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeUlikEnkeltpersonforetak og rapportererSkogbruk) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det finnes opplysninger om skogbruk i næringsspesifikasjonen. Aksjeselskap skal ikke rapportere opplysninger om skogbruk i næringsspesifikasjonen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_TRANSPORTMIDDEL_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype aksjeselskap rapporterer transportmiddel i næring\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harVirksomhetstypeLikAksjeselskap = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype.finnesBlant(\"oevrigSelskap\", \"selskapMedDeltakerfastsetting\", \"bankOgFinansieringsforetak\",\n                                            \"liveforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")\n            }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, motorkjoeretoeyINaering))\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeLikAksjeselskap og (kjennemerke er oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det finnes opplysninger i temaet transportmiddel i næring i næringsspesifikasjonen. Aksjeselskap skal ikke rapportere opplysninger i temaet transportmiddel i næring i næringsspesifikasjonen.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UFULLSTENDIG_STOETTE_ORDNING",
      "kontrollformel": "// Kontrollen gir utslag når selskap rapporterer ufullstendige opplysninger knyttet til skatte- og avgiftsordrninger. Alle opplysningene må fylles ut.\n    // KOntrollen gir merknad i valideringstjenesten.\n    sakstype(Upersonlig)\n        .kontekst(ValideringSkattepliktig) {\n    \n            val gyldigeStøtteordninger = skatteOgAvgiftsordningOmfattetAvOffentligStoette_2022\n                .forForekomsterAv { kode }\n                .verdierFor { tekniskNavn }\n    \n            val harStøtteordning = skattemeldingUpersonlig\n                .forForekomsterAv(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        tilleggsinformasjonKnyttetTilMottakAvSkatteOgAvgiftsordningOmfattetAvOffentligStoette,\n                        skatteOgAvgiftsordningOmfattetAvOffentligStoette\n                    )\n                )\n                .hvorMinstEnForekomst {\n                    (fastsatt(skatteOgAvgiftsordning) er oppgitt) og\n                        (fastsatt(skatteOgAvgiftsordning).finnesBlant(gyldigeStøtteordninger))\n                }\n    \n            skattemeldingUpersonlig\n                .forForekomsterAv(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        tilleggsinformasjonKnyttetTilMottakAvSkatteOgAvgiftsordningOmfattetAvOffentligStoette\n                    )\n                )\n                .utslagFor {\n                    hvis(\n                        harStøtteordning og (varIOekonomiskeVanskerVedSistAvlagtRegnskapsaar ikkeEr oppgitt) eller\n                            (erIKonsern ikkeEr oppgitt) eller\n                            (harUtestaaendeBetalingskravKnyttetTilUlovligUtdeltStatsstoette ikkeEr oppgitt) eller\n                            (erLitenEllerMellomstorBedrift ikkeEr oppgitt) eller\n                            (harMottattAnnenOffentligStoette ikkeEr oppgitt)\n                    ) {\n                        betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                    }\n                }\n        }",
      "hjelpetekstSME": "Når selskapet mottar offentlig støtte i form av skatte- eller avgiftsfordeler må alle spørsmålene i temaet \"Tilleggsinformasjon knyttet til mottak av skatte og avgiftsordning omfattet av offentlig støtte\" besvares.",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_UGYLDIGE_FELT_NAERINGBEREGNING",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype aksjeselskap rapporterer ett eller flere av følgende felter\n        // fordeltBeregnetNaeringsinntekt.sjablongberegnetInntektFraBiomasseVedproduksjon\n        // fordeltBeregnetNaeringsinntekt.fradragForRenterINaeringPaaSvalbard\n        // fordeltBeregnetNaeringsinntekt.fremfoertUnderskuddIEnkeltpersonforetakPaaSvalbardFraTidligereAar\n        // fordeltBeregnetNaeringsinntekt.korreksjonFraReindrift\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harVirksomhetstypeUlikEnkeltpersonforetak = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype.finnesBlant(\"oevrigSelskap\", \"selskapMedDeltakerfastsetting\", \"bankOgFinansieringsforetak\",\n                                            \"livsforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")\n            }\n    \n        val rapportererUgylidigFelt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .hvorMinstEnForekomst {\n                (\n                    (sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall er oppgitt) eller\n                  \t(sjablongberegnetFradragFraBiomasseVedproduksjon.beloepSomTall er oppgitt) eller\n                        (fradragForRenterINaeringPaaSvalbard.beloepSomTall er oppgitt) eller\n                        (fremfoertUnderskuddIEnkeltpersonforetakPaaSvalbardFraTidligereAar.beloepSomTall er oppgitt) eller\n                        (korreksjonFraReindrift.beloepSomTall er oppgitt)\n                    )\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeUlikEnkeltpersonforetak og rapportererUgylidigFelt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det finnes opplysninger i temaet fordelt beregnet næringsinntekt som ikke er gyldige for aksjeselskaper. Dette er enten opplysninger om sjablongberegnet inntekt fra biomasse eller vedproduksjon, korreksjon fra reindrift, fradrag for renter på Svalbard eller fremført underskudd i enkeltpersonforetak på Svalbard.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_BILTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeBiltyper = biltype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en biltype som ikke finnes i kodelisten 2022_biltype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeBil = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, motorkjoeretoeyINaering))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(biltype) er oppgitt) og\n                            (fastsatt(biltype).finnesIkkeBlant(gyldigeBiltyper))\n                    }\n    \n                hvis(feilTypeBil) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n           }\n    }",
      "hjelpetekstSME": "Det er brukt en biltype som ikke er forenlig med kodelisten over biltyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_BRANSJETYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeBransjetyper = bransjetype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en bransjetype som ikke finnes i kodelisten for bransjetype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeBil = forForekomsterAv(sti(andreForhold, loeyveForDrosjeOgGodstransport))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(bransje) er oppgitt) og\n                            (fastsatt(bransje).finnesIkkeBlant(gyldigeBransjetyper))\n                    }\n    \n                hvis(feilTypeBil) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en bransjetype som ikke er forenlig med kodelisten over bransjetyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_EGENKAPITALENDRINGSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeEgenkapitalendringstyper = egenkapitalendringstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en egenkapitalendringstype som ikke finnes i kodelisten for egenkapitalendringstype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeEgenkapitalendring = forForekomsterAv(egenkapitalavstemming)\n                    .forForekomsterAv(egenkapitalendring)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(egenkapitalendringstype) er oppgitt) og\n                            (fastsatt(egenkapitalendringstype).finnesIkkeBlant(gyldigeEgenkapitalendringstyper))\n                    }\n    \n                hvis(feilTypeEgenkapitalendring) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en egenkapitalendringstype som ikke er forenlig med kodelisten over egenkapitalendringstyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FINANSIELT_DERIVAT",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeFinansielleDerivattyper = finansieltDerivattype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en finansiell derivattype som ikke finnes i kodelisten for finansielle derivater\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeFinansieltDerivat = forForekomsterAv(gruppe(sti(balanseregnskap, annenSpesifikasjonAvBalanseregnskap, finansieltDerivatSomEiendel),\n                                                       sti(balanseregnskap, annenSpesifikasjonAvBalanseregnskap, finansieltDerivatSomGjeldEllerAvsetning)))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(finansieltDerivattype) er oppgitt) og\n                            (fastsatt(finansieltDerivattype).finnesIkkeBlant(gyldigeFinansielleDerivattyper))\n                    }\n    \n                hvis(feilTypeFinansieltDerivat) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en finansielle derivattype som ikke er forenlig med kodelisten over finansielle derivattyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FINANSPRODUKT_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigFinansprodukt = finansprodukt_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattepliktig har oppgitt et finansprodukt som ikke finnes i kodelisten\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilFinansprodukt = forForekomsterAv(\n                    sti(spesifikasjonAvForholdRelevanteForBeskatning,annetFinansprodukt))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(finansprodukttype) er oppgitt) og\n                            (fastsatt(finansprodukttype).finnesIkkeBlant(gyldigFinansprodukt))\n                    }\n    \n                hvis(feilFinansprodukt) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    } \n\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en finansprodukttype som ikke er forenlig med kodelisten over finansprodukter",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORMUESOBJEKT",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeformuesobjekttyper = formuesobjekttypeUpersonligSkattepliktig_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt et formuesobjekt som ikke finnes i kodelistene\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilFormuesobjekttype = forForekomsterAv(formuesobjekt)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(formuesobjekttype) er oppgitt) og\n                            (fastsatt(formuesobjekttype).finnesIkkeBlant(gyldigeformuesobjekttyper))\n                    }\n    \n                hvis(feilFormuesobjekttype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en formuesobjekttype i næringsspesifikasjonen som ikke er forenlig med kodelisten \"formuesobjektVedRealisasjonEllerUtleieMellomSelskapOgNaerstaaendeMv\".",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORMUESOBJEKTTYPE",
      "kontrollformel": "// TODO: Oppdater for 2022\n    // sakstype(Upersonlig, SDF)\n    //     .kontekst(ValideringSkattepliktig) {\n    //         val gyldigeFormuesobjekttyper = formuesobjektVedRealisasjonEllerUtleieMellomSelskapOgNaerstaaendeMv_2022\n    //             .forForekomsterAv { kode }\n    //             .verdierFor { tekniskNavn }\n    //\n    //         // Kontrollen gir utslag dersom skattyter har oppgitt en formuesobjekttype som ikke finnes i kodelisten 2022_formuesobjektVedRealisasjonEllerUtleieMellomSelskapOgNaerstaaendeMv\n    //         naeringsspesifikasjon\n    //             .utslagFor {\n    //\n    //                 val feilTypeFormuesobjektForYtelserFraAksjonaererEllerNaerstaaende =\n    //                     forForekomsterAv(sti(andreForhold, ytelseFraAksjonaerEllerNaerstaaende))\n    //                         .forForekomsterAv(realisasjonOgUtleieAvFormuesobjektMv)\n    //                         .hvorMinstEnForekomst {\n    //                             (fastsatt(formuesobjektSomTekst) er oppgitt) og\n    //                                 (fastsatt(formuesobjektSomTekst).finnesIkkeBlant(gyldigeFormuesobjekttyper))\n    //                         }\n    //\n    //                 val feilTypeFormuesobjektForYtelserFraSelskap =\n    //                     forForekomsterAv(sti(andreForhold, ytelseFraSelskapEllerSelskapetsDatterselskap))\n    //                         .forForekomsterAv(realisasjonOgUtleieAvFormuesobjektMv)\n    //                         .hvorMinstEnForekomst {\n    //                             (fastsatt(formuesobjektSomTekst) er oppgitt) og\n    //                                 (fastsatt(formuesobjektSomTekst).finnesIkkeBlant(gyldigeFormuesobjekttyper))\n    //                         }\n    //\n    //                 hvis(feilTypeFormuesobjektForYtelserFraAksjonaererEllerNaerstaaende eller feilTypeFormuesobjektForYtelserFraSelskap) {\n    //                     betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n    //                 }\n    //             }\n    //     }\n    sakstype(Personlig)\n        .kontekst(AdHoc) {\n            skattemelding.deaktivertKontrollAldriUtslagFor {\n                hvis(skatteplikt er oppgitt) {\n                    betjeningsstrategiSettesTil()\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en formuesobjekttype i skattemeldingen som ikke er forenlig med kodelisten \"formuesobjekttypeUpersonligSkattepliktig\".",
      "BetjeningsstrategiSkattepliktig": "ingen"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORMUESOBJEKTTYPE_NAERSTAAENDE",
      "kontrollformel": "sakstype(Upersonlig,SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeFormuesobjekttyper = formuesobjektVedRealisasjonEllerUtleieMellomSelskapOgNaerstaaendeMv_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en finansiell derivattype som ikke finnes i kodelisten for finansielle derivater\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeFormuesobjekt = forForekomsterAv(gruppe(sti(andreForhold,ytelseFraAksjonaerDeltakerEllerNaerstaaende, realisasjonOgUtleieAvFormuesobjektMv),\n                                                             sti(andreForhold, ytelseFraSelskapEllerSelskapetsDatterselskap, realisasjonOgUtleieAvFormuesobjektMv)))\n                \n                    .hvorMinstEnForekomst {\n                        (fastsatt(formuesobjektSomTekst) er oppgitt) og\n                            (fastsatt(formuesobjektSomTekst).finnesIkkeBlant(gyldigeFormuesobjekttyper))\n                    }\n    \n                hvis(feilTypeFormuesobjekt) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en formuesobjekttype ved realisasjon eller utleie mellom selskap og nærstående mv som ikke er forenlig med kodelisten over tilsvarende formuesobjekttyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORSKJELLSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeMidlertidigForskjellstyper = midlertidigForskjellstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigePermanentForskjellstyper = permanentForskjellstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en forskjellstype (midlertidig eller permanent) som ikke finnes i kodelistene for permanentForskjellstype eller midlertidigForskjellstype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeMidlertidigForskjell = forForekomsterAv(midlertidigForskjell)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(midlertidigForskjellstype) er oppgitt) og\n                            (\n                                fastsatt(midlertidigForskjellstype).finnesIkkeBlant(\n                                    gyldigeMidlertidigForskjellstyper\n                                )\n                                )\n                    }\n    \n                val feilTypePermanentForskjell = forForekomsterAv(permanentForskjell)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(permanentForskjellstype) er oppgitt) og\n                            (fastsatt(permanentForskjellstype).finnesIkkeBlant(gyldigePermanentForskjellstyper))\n                    }\n    \n                hvis(feilTypeMidlertidigForskjell eller feilTypePermanentForskjell) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en forskjellstype som ikke er forenlig med kodelistene over midlertidige og permanente forskjellstyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FOUPROSJEKTKATEGORI_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigProsjektkategori = fouprosjektkategori_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattepliktig har oppgitt en prosjektkategori som ikke finnes i kodelisten\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilProsjektkategori = forForekomsterAv(forskningOgUtviklingsprosjekt)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(prosjektkategori) er oppgitt) og\n                            (fastsatt(prosjektkategori).finnesIkkeBlant(gyldigProsjektkategori))\n                    }\n    \n                hvis(feilProsjektkategori) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    } \n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en FoU-prosjektkategori som ikke er forenlig med kodelisten over FoU-prosjektkategorityper",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FOUPROSJEKTVEDTAKSSTAUTSTYPE_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigFoUprosjektvedtaksstatus = fouprosjektvedtakstatustype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en FoU-prosjektvedtaksstatus som ikke finnes i kodelisten for FoU-prosjektvedtaksstatustyper. \n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilFoUprosjektvedtaksstatus = forForekomsterAv(forskningOgUtviklingsprosjekt)\n                      .hvorMinstEnForekomst {\n                        (fastsatt(prosjektstatus.status) er oppgitt) og\n                            (fastsatt(prosjektstatus.status).finnesBlant(gyldigFoUprosjektvedtaksstatus))\n                    }\n    \n                hvis(feilFoUprosjektvedtaksstatus) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en FoU-prosjektvedtaksstatus som ikke er forenlig med kodelisten over FoU-prosjektvedtaksstatustyper",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FOUVIRKSOMHETSKATEGORI_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigFoUProsjektvirksomhetskategori = fouprosjektkategori_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en FoU-prosjektvirksomhetskategori som ikke finnes i kodelisten for FoU-prosjektvirksomhetskategorityper\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilProsjektkategori = forForekomsterAv(forskningOgUtviklingsprosjekt)\n                      .hvorMinstEnForekomst {\n                        (fastsatt(prosjektkategori) er oppgitt) og\n                            (fastsatt(prosjektkategori).finnesBlant(gyldigFoUProsjektvirksomhetskategori))\n                    }\n    \n                hvis(feilProsjektkategori) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en FoU-prosjektvirksomhetskategori som ikke er forenlig med kodelisten over FoU-prosjektvirksomhetskategorityper",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
	{
      "kontrollnavn": "N_UGYLDIG_FOUVIRKSOMHETSKATEGORI_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigFoUProsjektvirksomhetskategori = fouprosjektkategori_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en FoU-prosjektvirksomhetskategori som ikke finnes i kodelisten for FoU-prosjektvirksomhetskategorityper\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilProsjektkategori = forForekomsterAv(forskningOgUtviklingsprosjekt)\n                      .hvorMinstEnForekomst {\n                        (fastsatt(prosjektkategori) er oppgitt) og\n                            (fastsatt(prosjektkategori).finnesBlant(gyldigFoUProsjektvirksomhetskategori))\n                    }\n    \n                hvis(feilProsjektkategori) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en FoU-prosjektvirksomhetskategori som ikke er forenlig med kodelisten over FoU-prosjektvirksomhetskategorityper",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
	{
      "kontrollnavn": "N_UGYLDIG_FOU_GRUNNLAGSDOKUMENTASJONSTYPE_UP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigGrunnlagsdokumentasjonstype = grunnlagsdokumentasjonstypeForVurderingAvOekonomiskeVanskeligheterSkattefunn_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en grunnlagsdokumentasjonstype som ikke finnes i kodelisten.  \n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilGrunnlagsdokumentasjontype = forForekomsterAv(forskningOgUtviklingsprosjekt)\n                      .hvorMinstEnForekomst {\n                        (fastsatt(grunnlagsdokumentasjon) er oppgitt) og\n                            (fastsatt(grunnlagsdokumentasjon).finnesIkkeBlant(gyldigGrunnlagsdokumentasjonstype))\n                    }\n    \n                hvis(feilGrunnlagsdokumentasjontype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en grunnlagsdokumentasjonstype for vurdering av økonomiske vanskeligheter som ikke er forenlig med kodelisten over grunnlagsdokumentasjonstyper",     
	  "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_INNTEKTSKOSTNADSTYPE_SKATTBETALTUTLANDET",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigInntektsEllerFormuestype = inntektsEllerFormuestypeVedSkattBetaltIUtlandet_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter oppgir en kostnadsfordelingsmetode som ikke finnes i kodelisten\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilInntektsEllerFormuestype = forForekomsterAv(gruppe(sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilAnnenUtenlandsinntekt, inntektsskattBetaltIUtlandet),\n                                                                          sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilInntektFraNOKUSSelskapEllerVirksomhetILavskatteland, inntektsskattBetaltIUtlandet)))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(type) er oppgitt) og\n                            (fastsatt(type).finnesIkkeBlant(gyldigInntektsEllerFormuestype))                    \n                    }\n    \n                hvis(feilInntektsEllerFormuestype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n           }\n    }\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en inntekts- eller formuestype ved skatt betalt i utlandet som ikke er forenlig med kodelisten over inntekts- og formuestyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KASSASYSTEM",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeKassasystemtyper = kassasystemtype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en kassasystemtype som ikke finnes i kodelisten 2022 for kassasystemtype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeKassasystem = forForekomsterAv(sti(andreForhold, overnattingsOgServeringssted))\n                    .forForekomsterAv(kassasystem)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(kassasystemtype) er oppgitt) og\n                            (fastsatt(kassasystemtype).finnesIkkeBlant(gyldigeKassasystemtyper))\n                    }\n    \n                hvis(feilTypeKassasystem) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en egenkapitalendringstype som ikke er forenlig med kodelisten over kassasystemtyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONSERNTILKNYTNINGSTYPE",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeKonserntilknytningstyper = konserntilknytningstype\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter oppgir en konserntilknytningstype som ikke finnes i kodelisten\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilKonserntilknytningstype = forForekomsterAv(gruppe(sti(inntektOgUnderskudd, avgittKonsernbidrag),\n                                                                          sti(inntektOgUnderskudd, mottattKonsernbidrag)))\n                    .hvorMinstEnForekomst {(\n                        (fastsatt(mottakersKonserntilknytningstype) er oppgitt) og\n                            (fastsatt(mottakersKonserntilknytningstype).finnesIkkeBlant(gyldigeKonserntilknytningstyper)) eller\n                    \t(fastsatt(avgiversKonserntilknytningstype) er oppgitt) og\n                            (fastsatt(avgiversKonserntilknytningstype).finnesIkkeBlant(gyldigeKonserntilknytningstyper)))\n                    }\n    \n                hvis(feilKonserntilknytningstype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n           }\n    }",
      "hjelpetekstSME": "Det er brukt en konserntilknytningstype som ikke er forenlig med kodelisten over konserntilknytningstyper",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONTO_BALANSEREGNSKAP",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigekontoerForAnleggsmidler = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"balanseverdiForAnleggsmiddel\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForEgenkapital = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"egenkapital\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForKortsiktigGjeld = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"kortsiktigGjeld\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForLangsiktigGjeld = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"langsiktigGjeld\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForOmloepsmiddel = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"balanseverdiForOmloepsmiddel\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en konto som ikke finnes i kodelisten\n        // sjekker på alle typefelter under balanseregnskap\n        naeringsspesifikasjon\n            .utslagFor {\n                val feilTypeAnleggsmiddel =\n                    forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n                        .forForekomsterAv(balanseverdi)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForAnleggsmidler\n                                )\n                                )\n                        }\n    \n                val feilTypeEgenkapital =\n                    forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, egenkapital))\n                        .forForekomsterAv(kapital)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForEgenkapital\n                                )\n                                )\n                        }\n    \n                val feilTypeKortsiktigGjeld =\n                    forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, kortsiktigGjeld))\n                        .forForekomsterAv(gjeld)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForKortsiktigGjeld\n                                )\n                                )\n                        }\n    \n                val feilTypeLangsiktigGjeld =\n                    forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, langsiktigGjeld))\n                        .forForekomsterAv(gjeld)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForLangsiktigGjeld\n                                )\n                                )\n                        }\n    \n                val feilTypeOmloepsmiddel =\n                    forForekomsterAv(sti(balanseregnskap, omloepsmiddel, balanseverdiForOmloepsmiddel))\n                        .forForekomsterAv(balanseverdi)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForOmloepsmiddel\n                                )\n                                )\n                        }\n    \n                hvis(\n                    feilTypeAnleggsmiddel eller feilTypeEgenkapital eller feilTypeKortsiktigGjeld eller\n                        feilTypeLangsiktigGjeld eller feilTypeOmloepsmiddel\n                ) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en balansekonto som ikke er forenlig med kontoene i kodelisten over balansekontoer.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONTO_EGENKAPITALAVSTEMMING_PRINSIPPENDRING",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigekontoerForEgenkapitalavstemningPrinsippendring = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en konto som ikke finnes i kodelisten kodelisten egenkapitalavstemming prinsippendring\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypePrinsippendring = forForekomsterAv(egenkapitalavstemming)\n                    .forForekomsterAv(prinsippendring)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(resultatOgBalanseregnskapstype) er oppgitt) og\n                            (\n                                fastsatt(resultatOgBalanseregnskapstype).finnesIkkeBlant(\n                                    gyldigekontoerForEgenkapitalavstemningPrinsippendring\n                                )\n                                )\n                    }\n    \n                hvis(feilTypePrinsippendring) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en resultatregnskaps-/eller balansekonto som ikke er forenlig med kontoene i kodelisten over resultatregnskaps- og balansekontoer. ",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONTO_RESULTATREGNSKAP",
      "kontrollformel": "     sakstype(Personlig, Upersonlig)\n         .kontekst(ValideringSkattepliktig) {\n             val gyldigekontoerForAnnenDriftsinntekt = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"annenDriftsinntekt\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForSalgsinntekt = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"salgsinntekt\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForAnnenDriftskostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"annenDriftskostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForLoennskostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"loennskostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForVarekostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"varekostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForEkstraordinaerPost = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"ekstraordinaerPost\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForFinansinntekt = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"finansinntekt\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForFinanskostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"finanskostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForSkattekostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"skattekostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             // Kontrollen gir utslag dersom skattyter har oppgitt en konto som ikke finnes i kodelisten\n             // sjekker på alle typefelter under resultatregnskap\n             naeringsspesifikasjon\n                 .utslagFor {\n                     val feilTypeDriftsinntekt =\n                         forForekomsterAv(sti(resultatregnskap, driftsinntekt, annenDriftsinntekt))\n                             .forForekomsterAv(inntekt)\n                             .hvorMinstEnForekomst {\n                                 (fastsatt(type) er oppgitt) og (\n                                     fastsatt(type).finnesIkkeBlant(\n                                         gyldigekontoerForAnnenDriftsinntekt\n                                     )\n                                     )\n                             }\n    \n                     val feilTypeSalgsinntekt = forForekomsterAv(sti(resultatregnskap, driftsinntekt, salgsinntekt))\n                         .forForekomsterAv(inntekt)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForSalgsinntekt\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeAnnenDriftskostnad =\n                         forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnad))\n                             .forForekomsterAv(kostnad)\n                             .hvorMinstEnForekomst {\n                                 (fastsatt(type) er oppgitt) og (\n                                     fastsatt(type).finnesIkkeBlant(\n                                         gyldigekontoerForAnnenDriftskostnad\n                                     )\n                                     )\n                             }\n    \n                     val feilTypeLoennskostnad =\n                         forForekomsterAv(sti(resultatregnskap, driftskostnad, loennskostnad))\n                             .forForekomsterAv(kostnad)\n                             .hvorMinstEnForekomst {\n                                 (fastsatt(type) er oppgitt) og (\n                                     fastsatt(type).finnesIkkeBlant(\n                                         gyldigekontoerForLoennskostnad\n                                     )\n                                     )\n                             }\n    \n                     val feilTypeVarekostnad = forForekomsterAv(sti(resultatregnskap, driftskostnad, varekostnad))\n                         .forForekomsterAv(kostnad)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForVarekostnad\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeFinansinntekt = forForekomsterAv(sti(resultatregnskap, finansinntekt))\n                         .forForekomsterAv(inntekt)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForFinansinntekt\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeFinanskostnad = forForekomsterAv(sti(resultatregnskap, finanskostnad))\n                         .forForekomsterAv(kostnad)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForFinanskostnad\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeSkattekostnad = forForekomsterAv(sti(resultatregnskap, skattekostnad))\n                         .forForekomsterAv(kostnad)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForSkattekostnad\n                                 )\n                                 )\n                         }\n    \n                     hvis(\n                         feilTypeDriftsinntekt eller feilTypeSalgsinntekt eller feilTypeAnnenDriftskostnad eller\n                            feilTypeLoennskostnad eller feilTypeVarekostnad eller feilTypeFinanskostnad eller \n                       \t\tfeilTypeSkattekostnad\n                     ) {\n                         betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                     }\n                 }\n         }\n",
      "hjelpetekstSME": "Det er brukt en resultatregnskapskonto som ikke er forenlig med kontoene i kodelisten over resultatregnskapskontoer.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KOSTNADSFORDELINGSMETODE",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigKostnadsfordelingsmetode = kostnadsfordelingsmetodeVedSkattBetaltIUtlandet_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter oppgir en kostnadsfordelingsmetode som ikke finnes i kodelisten\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilKostnadsfordelingsmetode = forForekomsterAv(gruppe(sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilAnnenUtenlandsinntekt, fordelingAvKostnad),\n                                                                          sti(fradragINorskInntektsskattForSkattBetaltTilFremmedStatKnyttetTilInntektFraNOKUSSelskapEllerVirksomhetILavskatteland, fordelingAvKostnad)))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(kostnadsfordelingsmetode) er oppgitt) og\n                            (fastsatt(kostnadsfordelingsmetode).finnesIkkeBlant(gyldigKostnadsfordelingsmetode))                    \n                    }\n    \n                hvis(feilKostnadsfordelingsmetode) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n           }\n    }",
      "hjelpetekstSME": "Det er brukt en kostnadsfordelingsmetode  ved skatt betalt i utlandet som ikke er forenlig med kodelisten over kostnadsfordelingsmetoder",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_NÆRINGSEIENDOMSTYPE",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Kontrollen gir utslag dersom skattyter oppgir en næringseiendomstype som ikke er gyldig\n        // Kontrollen medfører at innleveringen avvises\n        skattemeldingUpersonlig\n            .forForekomsterAv(formuesgrunnlagIkkeUtleidNaeringseiendomINorge)\n            .utslagFor {\n    \n                val harIkkeUtleidNæringseiendomINorge = hvorMinstEnForekomst {\n                    naeringseiendomstype.finnesIkkeBlant(\n                        \"industri\",\n                        \"verksted\",\n                        \"lager\",\n                        \"hotell\",\n                        \"butikkEllerKjoepesenter\",\n                        \"kontor\",\n                        \"tomtGrunnarealHovedfunksjon\",\n                        \"annet\"\n                    )\n                }\n    \n                hvis(harIkkeUtleidNæringseiendomINorge) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en næringseiendomstype som ikke er forenlig med kodelisten over næringseiendomstyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_NÆRINGSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeNaeringstyper = naeringstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en næringstype som ikke finnes i kodelisten for næringstype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeNaering = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(naeringstype) er oppgitt) og\n                            (fastsatt(naeringstype).finnesIkkeBlant(gyldigeNaeringstyper))\n                    }\n    \n                hvis(feilTypeNaering) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en næringstype som ikke er forenlig med kodelisten over næringstyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_PRISINGSMETODE",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigPrisingsmetode = prisingsmetode_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattepliktig har oppgitt en prisingsmetode som ikke finnes i kodelisten prisingsmetode_2022\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilPrisingsmetode = forForekomsterAv(gruppe(sti(andreForhold,ytelseFraAksjonaerDeltakerEllerNaerstaaende),\n                                                                sti(andreForhold,ytelseFraSelskapEllerSelskapetsDatterselskap)))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(prisingsmetode) er oppgitt) og\n                            (fastsatt(prisingsmetode).finnesIkkeBlant(gyldigPrisingsmetode))\n                    }\n    \n                           hvis(feilPrisingsmetode) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n           }\n    }\n\n\n\n\n\n\n",
      "hjelpetekstSME": "Det er brukt en prisingsmetode som ikke er forenlig med kodelisten over prisingsmetoder",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_REGELTYPE_FOR_ÅRSREGNSKAP",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeRegeltyperForAarsregnskap = regeltypeForAarsregnskap_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en regeltype for årsregnskap som ikke finnes i kodelisten for regeltype for Årsregnskap\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeRegelForAarsregnskap = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(regeltypeForAarsregnskap) er oppgitt) og\n                            (fastsatt(regeltypeForAarsregnskap).finnesIkkeBlant(gyldigeRegeltyperForAarsregnskap))\n                    }\n    \n                hvis(feilTypeRegelForAarsregnskap) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en regeltype for årsregnskap som ikke er forenlig med kodelisten over regeltyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_REGNSKAPSPLIKTTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeRegnskapspliktstyper = regnskapsplikttype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // kontrollen gir utslag dersom skattyter har oppgitt en regnskapspliktstype som ikke finnes i kodelisten for regnskapspliktstype\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeRegnskapsplikt = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(regnskapspliktstype) er oppgitt) og\n                            (fastsatt(regnskapspliktstype).finnesIkkeBlant(gyldigeRegnskapspliktstyper))\n                    }\n    \n                hvis(feilTypeRegnskapsplikt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en regnskapspliktstype som ikke er forenlig med kodelisten over regnskapspliktstyper .",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_SALDOGRUPPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeSaldogrupper = saldogruppe_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en saldogruppe som ikke finnes i kodelisten for saldogruppe\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilSaldogruppe =\n                    forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n                        .hvorMinstEnForekomst {\n                            (fastsatt(saldogruppe) er oppgitt) og\n                                (fastsatt(saldogruppe).finnesIkkeBlant(gyldigeSaldogrupper))\n                        }\n    \n                hvis(feilSaldogruppe) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en saldogruppe som ikke er forenlig med kodelisten over saldogrupper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_SKATTE_OG_AVGIFTSORDNING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeSkatteOgAvgiftsordninger = skatteOgAvgiftsordningOmfattetAvOffentligStoette_2021\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en skatte- og avgiftsordning som ikke finnes i kodelistene\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilSkatteOgAvgiftsordning = forForekomsterAv(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        tilleggsinformasjonKnyttetTilMottakAvSkatteOgAvgiftsordningOmfattetAvOffentligStoette\n                    )\n                )\n                    .forForekomsterAv(skatteOgAvgiftsordningOmfattetAvOffentligStoette)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(skatteOgAvgiftsordning) er oppgitt) og\n                            (fastsatt(skatteOgAvgiftsordning).finnesIkkeBlant(gyldigeSkatteOgAvgiftsordninger))\n                    }\n    \n                hvis(feilSkatteOgAvgiftsordning) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en skatt- og avgiftsordning som ikke er forenlig med kodelisten \"skatteOgAvgiftsordningOmfattetAvOffentligStoette\".",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_SKJERMINGSGRUNNLAGSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeSkjermingsgrunnlagstyper = skjermingsgrunnlagstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en skjermingsgrunnlagstype som ikke finnes i kodelisten\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilSkjermingsgrunnlagstype =\n                    forForekomsterAv(sti(fordeltBeregnetPersoninntekt, spesifikasjonAvSkjermingsgrunnlag))\n                        .hvorMinstEnForekomst {\n                            (fastsatt(skjermingsgrunnlagstype) er oppgitt) og\n                                (\n                                    fastsatt(skjermingsgrunnlagstype).finnesIkkeBlant(\n                                        gyldigeSkjermingsgrunnlagstyper\n                                    )\n                                    )\n                        }\n    \n                hvis(feilSkjermingsgrunnlagstype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en skjermingsgrunnlagstype som ikke er forenlig med kodelisten over skjermingsgrunnlagstyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_TAKSAMETERTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeTaksametertyper = taksametertype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en taksametertype som ikke finnes i kodelisten for taksametertype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTaksametertype = forForekomsterAv(sti(andreForhold, loeyveForDrosjeOgGodstransport))\n                    .forForekomsterAv(kjoeretoey)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(taksametertype) er oppgitt) og\n                            (fastsatt(taksametertype).finnesIkkeBlant(gyldigeTaksametertyper))\n                    }\n    \n                hvis(feilTaksametertype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en taksametertype som ikke er forenlig med kodelisten over taksametertyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_VAREART",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeVarearter = vareart_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en vareart som ikke finnes i kodelisten for vareart\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilVareart = forForekomsterAv(sti(andreForhold, overnattingsOgServeringssted))\n                    .forForekomsterAv(varelagerPerVareart)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(vareart) er oppgitt) og\n                            (fastsatt(vareart).finnesIkkeBlant(gyldigeVarearter))\n                    }\n    \n                hvis(feilVareart) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en vareart som ikke er forenlig med kodelisten over varearter.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_VIRKSOMHETSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeVirksomhetstyper = virksomhetstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // kontrollen gir utslag dersom skattyter har oppgitt en virksomhetstype som ikke finnes i kodelisten for virksomhetstype\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeVirksomhet = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(virksomhetstype) er oppgitt) og\n                            (fastsatt(virksomhetstype).finnesIkkeBlant(gyldigeVirksomhetstyper))\n                    }\n    \n                hvis(feilTypeVirksomhet) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "Det er brukt en virksomhetstype som ikke er forenlig med kodelisten over virksomhetstyper.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "UP_HAR_NÆRINGSSPESIFIKASJON_MANGLER_SKATTEMELDING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n      \n        val harSkattemelding = skattemeldingUpersonlig\n           .hvorMinstEnForekomst { skattepliktSomGruppe.partsnummerSomTekst er oppgitt }\n\n        // kontrollen gir utslag dersom upersonlig skattyter forsøker å levere med næringsspesifikasjon uten skattemelding      \n        naeringsspesifikasjon\n            .utslagFor {\n                val harNæringsspesifikasjon = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst { virksomhetstype er oppgitt }\n                    \n                hvis(harNæringsspesifikasjon og ikke(harSkattemelding)) \n              {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil)\n                }\n            }\n    }",
      "hjelpetekstSME": "Selskapet mangler skattemelding.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "UP_HAR_SKATTEMELDING_MANGLER_NÆRINGSSPESIFIKASJON",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n      \n        val harNæringsspesifikasjon = naeringsspesifikasjon\n              .forForekomsterAv(virksomhet)\n              .hvorMinstEnForekomst { virksomhetstype er oppgitt }\n\n        // kontrollen gir utslag dersom upersonlig skattyter forsøker å levere med skattemelding uten næringsspesifikasjon      \n        skattemeldingUpersonlig\n            .utslagFor {\n                val harSkattemelding = hvorMinstEnForekomst { skattepliktSomGruppe.partsnummerSomTekst er oppgitt }\n                    \n                hvis(harSkattemelding og ikke(harNæringsspesifikasjon)) \n              {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil)\n                }\n            }\n    }",
      "hjelpetekstSME": "Selskapet mangler næringsspesifikasjon.",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    }
  ]
}