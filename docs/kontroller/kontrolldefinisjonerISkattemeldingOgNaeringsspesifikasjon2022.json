{
  "_kommentar": "Næringskontroller i valideringstjenesten pr 2022-01-10. Det vil bli endringer i noen av kontrollene, samt at nye kontroller kommer til i løpet av januar/februar",
  
  "kontrolldefinisjoner": [
    {
      "kontrollnavn": "N_ANTALL_MÅNEDER_FEIL",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når antall måneder drevet i år er lavere enn 0 eller høyere enn 12\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .utslagFor {\n                hvis((antallMaanederDrevetIAar erStørreEnn 12) eller (antallMaanederDrevetIAar erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVGITT_KONSERNBIDRAG_FOR_HØYT",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig avgir konsernbidrag og avgitt konsernbidrag overstiger samlet inntekt\n        // kontrollen gir faktiskFeil\n    \n     skattemeldingUpersonlig\n            .forForekomsterAv(inntektOgUnderskudd)\n            .utslagFor {\n                    \n              \tval næringsinntektISkattemeldingUP = summer{fastsatt(naeringsinntektSomTall)}\n      \n              \tval underskuddISkattemeldingUP = summer{fastsatt(inntektsfradrag.underskuddSomTall)}\n        \n                val mottattKonsernbidragISkattemeldingUP = summer{fastsatt(inntektSomGruppe.samletMottattKonsernbidrag)}\n    \n                  val grunnlagFørAvgittKonsernbidrag = næringsinntektISkattemeldingUP - underskuddISkattemeldingUP + mottattKonsernbidragISkattemeldingUP \n\n                hvis((fastsatt(inntektsfradrag.samletAvgittKonsernbidrag) er oppgitt) og (fastsatt(inntektsfradrag.samletAvgittKonsernbidrag) erStørreEnn grunnlagFørAvgittKonsernbidrag)       \n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_AVVIK_FREMFOERBART_UNDERSKUDD_DOKUMENTASJON",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(\n                sti(\n                    inntektOgUnderskudd,\n                    underskuddTilFremfoering,\n                    fremfoertUnderskuddFraTidligereAar\n                )\n            )\n            .utslagFor {\n                val differanseFremfoerbartUnderskudd =\n                    differanse(fastsatt(beloepSomGruppe.beloepSomTall), grunnlag(beloepSomGruppe.beloepSomTall))\n    \n                hvis(differanseFremfoerbartUnderskudd erStørreEnn 0)\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_AVVIK_GEVINST_OBLIGASJONER",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når selskapet har opplysninger om gevinst av obligasjon/sertifikat og summen av disse er høyere\n        // enn beløp ført i post 8079 i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        val gevinstObligasjonManglerIResultat = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .filtrer { fastsatt(type).finnesBlant(\"8079\") }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n            .utslagFor {\n                val sumGevinstObligasjon = summer { gevinstVedRealisasjonAvObligasjonOgSertifikat }\n    \n                val avvikGevinst = sumGevinstObligasjon - gevinstObligasjonManglerIResultat\n    \n                hvis(gevinstObligasjonManglerIResultat erMindreEnn sumGevinstObligasjon) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil avvikGevinst\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_RENTER_OBLIGASJONER",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når selskapet har opplysninger om renteinntekt av obligasjon/sertifikat og summen av disse er høyere\n        // enn beløp ført i post 8090 i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        val renterObligasjonManglerIResultat = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .filtrer { fastsatt(type).finnesBlant(\"8090\") }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n        skattemeldingUpersonlig\n            .utslagFor {\n                val sumRenteinntektObligasjon =\n                    forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n                        .summer { renteinntektAvObligasjonOgSertifikatSomTall }\n    \n                val avvikRenter = sumRenteinntektObligasjon - renterObligasjonManglerIResultat\n    \n                hvis(renterObligasjonManglerIResultat erMindreEnn sumRenteinntektObligasjon) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil avvikRenter\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_SKATTEMESSIG_RESULTAT",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n       .kontekst(ValideringSkattepliktig)\n    {\n    //kontrollen gir utslag dersom summen av alle forekomster av fordelt skattemessig resultat for næring avviker fra skattemessig resultat\n    //kontrollen medfører arbeidsoppgave i SMIA\n    \n    val sumFordeltSkattemessigResultat = naeringsspesifikasjon\n        .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n        .summer {fastsatt(fordeltSkattemessigResultat.beloepSomTall)}\n    \n    naeringsspesifikasjon\n        .forForekomsterAv(sti(beregnetNaeringsinntekt, skattemessigResultat))    \n        .utslagFor {\n    \n          val differanseSkattemessigResultat = beloepSomTall - sumFordeltSkattemessigResultat\n    \n            hvis((differanseSkattemessigResultat erStørreEnn 1000) eller (differanseSkattemessigResultat erMindreEnn -1000)) \n          {\n                betjeningsstrategiSettesTil(\n                    ikke, faktiskFeil, 1,\n                  \tAvviksbeloep settesTil differanseSkattemessigResultat\n                )\n            } } }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_AVVIK_TAP_OBLIGASJONER",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når selskapet har opplysninger om tap av obligasjon/sertifikat og summen av disse er høyere\n        // enn beløp ført i post 8179 i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        val tapObligasjonManglerIResultat = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finanskostnad))\n            .forForekomsterAv(kostnad)\n            .filtrer { fastsatt(type).finnesBlant(\"8179\") }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n            .utslagFor {\n                val sumTapObligasjon = summer { tapVedRealisasjonAvObligasjonOgSertifikat }\n    \n                val avvikTap = sumTapObligasjon - tapObligasjonManglerIResultat\n    \n                hvis(tapObligasjonManglerIResultat erMindreEnn sumTapObligasjon) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil avvikTap\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_TILBAKEFØRT_SKATTEKOSTNAD",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det er avvik mellom sum skattekostnad i resultatregnskapet og tilbakeført skattekostnad i permanente forskjeller\n        // kontrollen medfører merknad i valideringstjenesten\n    \n        val positivSkattekostnadPermanentForskjell = naeringsspesifikasjon\n            .forForekomsterAv(permanentForskjell)\n            .filtrer { fastsatt(permanentForskjellstype) erLik \"positivSkattekostnad\" }\n            .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n        val negativSkattekostnadPermanentForskjell = naeringsspesifikasjon\n            .forForekomsterAv(permanentForskjell)\n            .filtrer { fastsatt(permanentForskjellstype) erLik \"negativSkattekostnad\" }\n            .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, sumSkattekostnad))\n            .utslagFor {\n                hvis(beloepSomTall erUlik (positivSkattekostnadPermanentForskjell - negativSkattekostnadPermanentForskjell)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_AVVIK_ÅRSRESULTAT_EGENKAPITALAVSTEMMING",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når\n        // kontrollen medfører merknad i valideringstjenesten\n        val aarsresultatIVirksomheten = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, aarsresultat))\n            .summer { beloepSomTall }\n    \n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"fullRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(egenkapitalavstemming)\n            .utslagFor {\n                val oppgittOverskudd = forForekomsterAv(egenkapitalendring)\n                    .filtrer { fastsatt(egenkapitalendringstype) erLik \"aaretsOverskudd\" }\n                    .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n                val oppgittUnderskudd = forForekomsterAv(egenkapitalendring)\n                    .filtrer { fastsatt(egenkapitalendringstype) erLik \"aaretsUnderskudd\" }\n                    .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n                val oppgittOverskuddEllerUnderskudd = oppgittOverskudd - oppgittUnderskudd\n                val avvikIVisning = aarsresultatIVirksomheten - oppgittOverskuddEllerUnderskudd\n    \n                hvis(harFullRegnskapspliktEllerBegrensetRegnskapsplikt og (aarsresultatIVirksomheten erUlik oppgittOverskuddEllerUnderskudd)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1,\n                        Avviksbeloep settesTil avvikIVisning\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_BARE_PERSONINNTEKT",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når personinntekt er beregnet uten at det er oppgitt beløp i feltet for skattemessig resultat tilordnet innehaver\n        // kontrollen avviser innleveringen\n        val harPersoninntekt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .hvorMinstEnForekomst { aaretsBeregnedePersoninntektFoerFordelingOgSamordning.beloepSomTall erStørreEnn 0 }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .utslagFor {\n                hvis((harPersoninntekt) og (fordeltSkattemessigResultatEtterKorreksjon.beloepSomTall ikkeEr oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_BEREGNET_PERSONINNTEKT_MANGLER",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det er rapportert \"skattemessig resultat for næring etter korreksjon\" uten at det også er rapportert \"årets beregnede personinntekt\"\n        // kontrollen gir merknad i valideringstjenesten\n        val harPersoninntekt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .filtrer { (fastsatt(aaretsBeregnedePersoninntektFoerFordelingOgSamordning.beloepSomTall) er oppgitt) }\n            .verdierFor { identifikatorForFordeltBeregnetPersoninntekt }\n    \n        val harNæringsinntekt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .hvorMinstEnForekomst {\n                (identifikatorForFordeltBeregnetPersoninntekt finnesIkkeBlant (harPersoninntekt)) og\n                    (fordeltSkattemessigResultatEtterKorreksjon.beloepSomTall er oppgitt)\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n                hvis(harNæringsinntekt) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_BEREGNET_PERSONINNTEKT_ULIK_TRYGDEAVGIFTSSATS",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig beregner personinntekt under ett for næringstyper med ulik trygdeavgiftssats\n        // kontrollen gir faktiskFeil\n    \n      naeringsspesifikasjon\n            .utslagFor {\n            val identifikatorHøySats = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n             \t.filtrer{naeringstype.finnesBlant(\n              \t\t\"jordbrukGartneriPelsdyrnaeringMv\",\"reindrift\",\"annenNaering\",\"skiferproduksjon\",\"skogbruk\")}\n    .verdierFor{fastsatt(identifikatorForFordeltBeregnetPersoninntekt)}\n      \n            val identifikatorMellomSatsFamiliebarnehage = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n              \t.filtrer{naeringstype erLik \"familiebarnehageIEgetHjem\"}\n              \t.filtrer{fastsatt(identifikatorForFordeltBeregnetPersoninntekt).finnesBlant(identifikatorHøySats)}\n    .verdierFor{fastsatt(identifikatorForFordeltBeregnetPersoninntekt)}\n        \n            val identifikatorMellomSatsFisk = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n              \t.filtrer{naeringstype erLik \"fiskeOgFangst\"}\n              \t.filtrer{fastsatt(identifikatorForFordeltBeregnetPersoninntekt).finnesBlant(identifikatorHøySats)}\n    .verdierFor{fastsatt(identifikatorForFordeltBeregnetPersoninntekt)}         \n    \n         hvis((identifikatorMellomSatsFamiliebarnehage.antall erStørreEnn 0) eller\n              (identifikatorMellomSatsFisk.antall erStørreEnn 0)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_BRUK_AV_PRIVATBIL",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig krever fradrag for kostnader ved bruk av privatbil i næring i post 7080, utover det maksimale fradragsbeløpet\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .utslagFor {\n                hvis((type erLik \"7080\") og (beloepSomGruppe.beloepSomTall erStørreEnn 21000)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_DOBBELTFØRING_KOMPENSASJONSORDNINGEN",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når beløp i felt \"3410 Tilskudd kompensasjonsordningen\" i NSP er større enn eller lik felt \"Kompensasjon for tapt inntekt utbetalt fra NAV\" (preutfylt) i SME\n        // kontrollen gir merknad i valideringstjenesten\n        val kompensasjonISkattemeldingen = skattemelding\n      \t\t.forForekomsterAv(sti(oppgavegiver, sykepengerOgAnnenInntektMvFraOppgavegiver))\n            .filtrer { fastsatt(behandlingsart) erLik \"KOMP_PERS_INNT\" }\n            .summer { beloepSomGruppe.beloepSomTall }\n    \n      \tnaeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, annenDriftsinntekt))\n            .utslagFor {\n                val kompensasjonINæringsspesifikasjon = forForekomsterAv(inntekt)\n            \t\t.filtrer { fastsatt(type) erLik \"3410\" }\n            \t\t.summer { beloepSomGruppe.beloepSomTall }\n    \n                val avviksbeloepKompensasjon = kompensasjonINæringsspesifikasjon - kompensasjonISkattemeldingen\n    \n                hvis(kompensasjonINæringsspesifikasjon erStørreEnnEllerLik kompensasjonISkattemeldingen) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                      \tkortTypeReferanse settesLik \"tilskudd\",\n                        Avviksbeloep settesTil avviksbeloepKompensasjon\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_DOKUMENTASJON_ANNEN_KOSTNAD_HØY",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //Kontrollen gir utslag når sum driftsinntekter er blank/null, og sum driftskostnader er lik beløp på konto 7700.\n        //Skal kun slå ut når sum driftskostnader/konto 7700 er mellom kr 50 000-100 000.\n        //kontrollen gir merknad i SME\n    \n        val driftsinntekterIkkeOppgitt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt))\n            .harIngenForekomsterDer { sumDriftsinntekt er oppgitt }\n    \n        val driftsinntekterSummert = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, sumDriftsinntekt))\n            .summer { beloepSomTall }\n    \n        val driftskostnadSummert = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, sumDriftskostnad))\n            .summer { beloepSomTall }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe))\n            .utslagFor {\n    \n                val beløpPåKonto7700 = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"7700\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                hvis(\n                    (driftsinntekterIkkeOppgitt eller (driftsinntekterSummert erMindreEnnEllerLik 0)) og\n                        (driftskostnadSummert erLik beløpPåKonto7700) og (beløpPåKonto7700 erStørreEnnEllerLik 100000)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadInformasjon,\n                        1,\n                        kortTypeReferanse settesLik \"andreDriftskostnader\"\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_DOKUMENTASJON_EROVERSTYRT",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir merknad med anbefalning om å legge ved vedlegg dersom skattyter har overstyrt et eller flere felt i næringsspesifikasjonen\n        //kontrollen gir ikke utslag når felter i temaet \"samletGjeldOgFormuesobjekter\" er overstyrt\n        //kontrollen gir merknad i SME\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(\n                gruppe(\n                    spesifikasjonAvAnleggsmiddel,\n                    spesifikasjonAvOmloepsmiddel,\n                    beregnetNaeringsinntekt,\n                    fordeltBeregnetNaeringsinntekt,\n                    fordeltBeregnetPersoninntekt,\n                    egenkapitalavstemming,\n                    skogbruk\n                )\n            )\n            .forAlleForekomster\n            .utslagFor {\n    \n                hvis((beloepSomTall er oppgitt) og (erOverstyrt erLik true))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadInformasjon, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_DRIFTSTID_FISKE",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig ikke har oppgitt antall dager ombord fiskebåt\n        // kontrollen gir merknad i SME\n        val antallDagerOmbordFinnesIkke = skattemelding\n            .forForekomsterAv(saerskiltFradragForFiskereOgFangstfolk)\n            .hvorMinstEnForekomst { driftstidIFiskeOgFangst ikkeEr oppgitt }\n    \n        val næringsinntektErSkattefri = skattemelding\n            .forForekomsterAv(grunnlagKnyttetTilLottaker)\n            .hvorMinstEnForekomst {\n                (naeringsinntektForLottaker er oppgitt) og\n                    (fastsatt(naeringsinntektForLottaker.trygdeEllerSkattemessigUnntak).finnesBlant(\n                        \"skattefriUtenTrygdeavgiftsplikt\",\n                        \"skattefriMedTrygdeavgiftsplikt\"\n                    ))\n            }\n    \n        skattemelding\n            .forForekomsterAv(saerskiltFradragForFiskereOgFangstfolk)\n            .utslagFor {\n                val harIkkeVilkårstype = harIngenForekomsterDer{vilkaarstype er oppgitt}\n              \n              \thvis(\n                    ((grunnlagForBeregningAvSaerskiltFradragForFiskereOgFangstfolk.beloepSomTall erStørreEnn 0) og \n                     antallDagerOmbordFinnesIkke og harIkkeVilkårstype) og \n                  \tikke(næringsinntektErSkattefri)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadInformasjon, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_EKTEFELLE_MANGLER_NÆRINGSINNTEKT",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattyter rapporterer personinntekt fra ektefelle, men ikke også næringsinntekt\n        // kontrollen gir merknad i SME\n    \n        skattemelding\n            .forForekomsterAv(naeringsinntektMvFordeltFraEktefelle)\n            .utslagFor {\n                hvis((personinntekt.beloepSomTall er oppgitt) og (naeringsinntektSomGruppe.beloepSomTall ikkeEr oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_EKTEFELLE_MANGLER_PERSONINNTEKT",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //Kontrollen gir utslag når det er oppgitt beløp på feltet \"min andel av overskudd\" i kortet \"Næringsinntekt overført fra ektefelle, registrert partner eller\n        //meldepliktig samboer\", og feltet \"personinntekt før fremføring\" er blankt.\n        //kontrollen gir merknad i SME\n    \n        skattemelding\n            .forForekomsterAv(naeringsinntektMvFordeltFraEktefelle)\n            .utslagFor {\n                hvis(\n                    ((naeringsinntektSomGruppe.beloepSomTall er oppgitt) eller (underskuddSomGruppe.beloepSomTall er oppgitt)) og (samordnetPersoninntekt.personinntektFoerFremfoering.beloepSomTall ikkeEr oppgitt)\n    \n                ) {\n                    betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_FEIL_ANLEGGSMIDDELTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig)\n    {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilAnleggsmiddelTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant( \"1350\", \"1360\",)\n            }\n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant (\"ingenRegnskapsplikt\",\"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"1070\", \"1180\", \"1312\", \"1313\", \"1320\", \"1331\", \"1332\", \"1340\", \"1395\")\n            }\n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {regnskapspliktstype.finnesBlant (\"fullRegnskapsplikt\",\"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnleggsmiddelTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type erLik \"1140\"\n            }\n      \tval harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {regnskapspliktstype erLik \"fullRegnskapsplikt\"}\n    \n        val harFeilAnleggsmiddelTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n            .forForekomsterAv(balanseverdi)\n            .hvorMinstEnForekomst {\n                type\n                    .finnesBlant(\"1295\", \"1296\", \"1298\")\n            }\n        // Kontrollen gir utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // Sammen med minst en av de nevnte typene anleggsmiddel\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og\n            (harIngenRegnskapsplikt og harFeilAnleggsmiddelTypeForIngenRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnleggsmiddelTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilAnleggsmiddelTypeForFullRegnskapsplikt)\n    \n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_ANNENDRIFTSINNTEKTSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n            }\n    \n        val harFeilAnnenDriftsinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftsinntekt.annenDriftsinntektSomGruppe)\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"3500\", \"3850\", \"3870\", \"3880\", \"3885\")\n            }\n    \n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype.finnesBlant(\"fullRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n            }\n    \n        val harFeilAnnenDriftsinntektTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftsinntekt.annenDriftsinntektSomGruppe)\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type erLik \"3650\"\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"fullRegnskapsplikt\"\n            }\n    \n        val harFeilAnnenDriftsinntektTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftsinntekt.annenDriftsinntektSomGruppe)\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"3890\", \"3895\", \"3910\")\n            }\n    \n        // kontrollen kan gi utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // sammen med minst en av de nevnte typene av annen driftsinntekt\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftsinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftsinntektTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilAnnenDriftsinntektTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_ANNENDRIFTSKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnnenDriftskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"6050\", \"7370\", \"7440\", \"7490\", \"7880\", \"7885\")\n            }\n    \n        val harFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"fullRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilAnnenDriftskostnadTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type erLik \"6440\"\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"fullRegnskapsplikt\" }\n    \n        val harFeilAnnenDriftskostnadTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"7350\", \"7400\", \"7420\", \"7890\", \"7897\", \"7910\", \"7911\")\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // sammen med minst en av de nevnte typene av annen driftskostnad\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnnenDriftskostnadTypeForFullRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilAnnenDriftskostnadTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_EGENKAPITALTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"begrensetRegnskapsplikt\"\n            }\n    \n        val harFeilEgenkapitalTypeForBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(balanseregnskap.gjeldOgEgenkapital.egenkapitalSomGruppe)\n            .forForekomsterAv(kapital)\n            .hvorMinstEnForekomst {\n                type.erLik(\"2080\")\n            }\n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n            }\n    \n        val harFeilEgenkapitalTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(balanseregnskap.gjeldOgEgenkapital.egenkapitalSomGruppe)\n            .forForekomsterAv(kapital)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"2010\", \"2020\", \"2030\", \"2043\", \"2045\", \"2055\", \"9.21.11\", \"9.21.12\", \"9.21.30\", \"9.21.40\", \"9.23.00\",\n                                 \"9.23.20\", \"9.23.30\", \"9.23.40\", \"9.25.00\", \"9.26.00\", \"9.28.31\", \"9.28.33\", \"9.28.60\", \"9.28.76\",\n                                 \"9.28.77\", \"9.28.90\", \"9.28.99\")\n            }\n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"fullRegnskapsplikt\"\n            }\n    \n        val harFeilEgenkapitalTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(balanseregnskap.gjeldOgEgenkapital.egenkapitalSomGruppe)\n            .forForekomsterAv(kapital)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"2095\", \"2096\", \"2097\", \"2098\", \"9.21.11\", \"9.21.12\", \"9.21.30\", \"9.21.40\", \"9.23.00\", \"9.23.20\", \"9.23.30\", \n                                 \"9.23.40\", \"9.25.00\", \"9.26.00\", \"9.28.31\", \"9.28.33\", \"9.28.60\", \"9.28.76\", \"9.28.77\", \"9.28.90\", \"9.28.99\")\n            }\n    \n        // Kontrollen kan gi utslag dersom skattyter kombinerer regnskapsplikttype og type egenkapital som ikke er gyldig\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og\n            (harBegrensetRegnskapsplikt og harFeilEgenkapitalTypeForBegrensetRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilEgenkapitalTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilEgenkapitalTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_FINANSINNTEKTSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilFinansinntektTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8005\", \"8050\", \"8074\", \"8090\")\n            }\n    \n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilFinansinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8030\", \"8080\")\n            }\n    \n        val harFullRegnskapspliktEllerIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"fullRegnskapsplikt\") }\n    \n        val harFeilFinansinntektTypeForFullRegnskapspliktEllerIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finansinntekt))\n            .forForekomsterAv(inntekt)\n            .hvorMinstEnForekomst {\n                type erLik \"8091\"\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1, 2 eller 5\n        // sammen med minst en av de nevnte typene av finansinntekt\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapsplikt og harFeilFinansinntektTypeForIngenRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilFinansinntektTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n                (harFullRegnskapspliktEllerIngenRegnskapsplikt og harFeilFinansinntektTypeForFullRegnskapspliktEllerIngenRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_FINANSKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n         val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilFinanskostnadTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finanskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8006\", \"8150\", \"8174\")\n            }\n    \n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilFinanskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, finanskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8100\", \"8115\", \"8130\")\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1 eller 5\n        // sammen med minst en av de nevnte typene av finanskostnad\n        naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og\n            (harIngenRegnskapsplikt og harFeilFinanskostnadTypeForIngenRegnskapsplikt) eller\n                (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilFinanskostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_KORTSIKTIGGJELDTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n        .kontekst(ValideringSkattepliktig) {\n    \n    // Kontrollen gir utslag dersom skattyter rapporterer en kortsiktiggjeldtype som ikke er gyldig for skattyters regnskapsplikttype\n    \n            val harGyldigVirksomhetstype = naeringsspesifikasjon\n          \t\t.forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n                \"enkeltpersonforetak\",\n                \"oevrigSelskap\",\n                \"selskapMedDeltakerfastsetting\")}      \n    \n             val harBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst {\n                    regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n                }\n    \n             val harFeilKorsiktigGjeldTypeForBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, kortsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type erLik \"2800\"\n                }\n          \tval harIngenRegnskapspliktellerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst {\n                    regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\")\n                }\n    \n            val harFeilKorsiktigGjeldTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, kortsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type\n                        .finnesBlant(\"2310\", \"2320\", \"2330\", \"2460\", \"2500\", \"2510\", \"2920\", \"2970\", \"2980\")\n                }\n    \n           naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og \n                                                (harIngenRegnskapspliktellerBegrensetRegnskapsplikt og harFeilKorsiktigGjeldTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt) eller\n                                                (harBegrensetRegnskapsplikt og harFeilKorsiktigGjeldTypeForBegrensetRegnskapsplikt)\n            ) {\n                betjeningsstrategiSettesTil(\n                    ikke,\n                    faktiskFeil,\n                    1,\n                    Gruppering settesTil Næring\n                )\n            }\n        }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_LANGSIKTIGGJELDTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n        .kontekst(ValideringSkattepliktig) {\n    \n    // Kontrollen gir utslag dersom skattyter rapporterer en langsiktiggjeldtype som ikke er gyldig for skattyters regnskapsplikttype    \n    \n         \tval harGyldigVirksomhetstype = naeringsspesifikasjon\n          \t\t.forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n                \"enkeltpersonforetak\",\n                \"oevrigSelskap\",\n                \"selskapMedDeltakerfastsetting\")}    \n    \n            val harRegnskapspliktstypeLikIngenRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n            val harFeilLangsiktigGjeldType = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, langsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type\n                        .erLik(\"2250\")\n                }\n            val harRegnskapspliktstypeLikIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n            val harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, langsiktigGjeld))\n                .forForekomsterAv(gjeld)\n                .hvorMinstEnForekomst {\n                    type\n                        .finnesBlant(\"2100\", \"2120\", \"2130\", \"2160\", \"2180\", \"2200\", \"2210\", \"2260\")\n                }\n    \n            naeringsspesifikasjon utslagFor hvis(\n                (harGyldigVirksomhetstype og (harRegnskapspliktstypeLikIngenRegnskapsplikt og harFeilLangsiktigGjeldType) eller\n                    (harRegnskapspliktstypeLikIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilAnleggsmiddelTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt))\n            ) {\n                betjeningsstrategiSettesTil(\n                    ikke,\n                    faktiskFeil,\n                    1,\n                    Gruppering settesTil Næring\n                )\n            }\n        }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_LØNNSKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n        val harFeilLoennskostnadTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, loennskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type erLik \"5600\"\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"fullRegnskapsplikt\" }\n    \n        val harFeilLoennskostnadTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, loennskostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type erLik \"5950\"\n            }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1 eller 2\n        // sammen med minst en av de nevnte typene av lønnskostnad\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og \n            (harIngenRegnskapsplikt og harFeilLoennskostnadTypeForIngenRegnskapsplikt) eller\n                (harFullRegnskapsplikt og harFeilLoennskostnadTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_NEGATIV_FORETAKSGJELD",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når gjennomsnittsverdi av inngående og utgående verdi for foretaksgjeld under spesifikasjonAvSkjermingsgrunnlag er negativ\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(fordeltBeregnetPersoninntekt, spesifikasjonAvSkjermingsgrunnlag))\n            .utslagFor {\n                val inngåendeVerdiForetaksgjeld =\n                    filtrer { fastsatt(skjermingsgrunnlagstype) erLik \"foretaksgjeld\" }\n                        .summer { inngaaendeVerdi.beloepSomTall }\n    \n                val utgåendeVerdiForetaksgjeld =\n                    filtrer { fastsatt(skjermingsgrunnlagstype) erLik \"foretaksgjeld\" }\n                        .summer { utgaaendeVerdi.beloepSomTall }\n    \n                val gjennomsnittsverdiForetaksgjeld =\n                    (inngåendeVerdiForetaksgjeld + utgåendeVerdiForetaksgjeld) / 2\n    \n                hvis(gjennomsnittsverdiForetaksgjeld erMindreEnn 0) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Avviksbeloep settesTil gjennomsnittsverdiForetaksgjeld\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_OMLØPSMIDDELTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n        .kontekst(ValideringSkattepliktig) {\n    \n    // Kontrollen gir utslag dersom skattyter rapporterer en omløpsmiddeltype som ikke er gyldig for skattyters regnskapsplikttype\n    \n         \tval harGyldigVirksomhetstype = naeringsspesifikasjon\n          \t\t.forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n                \"enkeltpersonforetak\",\n                \"oevrigSelskap\",\n                \"selskapMedDeltakerfastsetting\")}\n    \n            val harIngenRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype erLik \"ingenRegnskapsplikt\" }\n    \n            val harFeilOmloepsmiddelTypeForIngenRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, omloepsmiddel, balanseverdiForOmloepsmiddel))\n                .forForekomsterAv(balanseverdi)\n                .hvorMinstEnForekomst {\n                    type erLik \"1895\"\n                }\n          \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(virksomhet)\n                .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n            val harFeilOmloepsmiddelTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt = naeringsspesifikasjon\n                .forForekomsterAv(sti(balanseregnskap, omloepsmiddel, balanseverdiForOmloepsmiddel))\n                .forForekomsterAv(balanseverdi)\n                .hvorMinstEnForekomst {\n                    type.finnesBlant(\"1490\", \"1501\", \"1560\", \"1840\")\n                }\n    \n    naeringsspesifikasjon utslagFor hvis(harGyldigVirksomhetstype og \n                                \t\t(harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harFeilOmloepsmiddelTypeForIngenRegnskapspliktOgBegrensetRegnskapsplikt) eller\n                                        (harIngenRegnskapsplikt og harFeilOmloepsmiddelTypeForIngenRegnskapsplikt)\n            ) {\n                betjeningsstrategiSettesTil(\n                    ikke,\n                    faktiskFeil,\n                    1,\n                    Gruppering settesTil Næring\n                )\n            }\n        }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_RESULTATKOMPONENTTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harResultatForIFRSForetak = naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap)\n            .hvorMinstEnForekomst { sumResultatkomponentForIFRSForetak.beloepSomTall erStørreEnn 0 }\n    \n        // kontrollen gir utslag dersom skattyter har regnskapsplikttype 1 eller 5\n        // sammen med minst en av de nevnte typene av skattekostnad\n        naeringsspesifikasjon utslagFor hvis(\n            harGyldigVirksomhetstype og harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og harResultatForIFRSForetak\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FEIL_SKATTEKOSTNADSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n            \"enkeltpersonforetak\",\n            \"oevrigSelskap\",\n            \"selskapMedDeltakerfastsetting\")}\n    \n      \tval harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        val harFeilSkattekostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, skattekostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"8300\", \"8321\", \"8322\", \"8323\", \"8324\",  \n                                 \"7.80.0.10\", \"7.80.0.10.00\", \"7.80.7.89\", \"7.80.7.89.00\", \"8.91.7.89.00\",\n                                 \"8.91.7.89\", \"8.92.7.89.00\", \"8.92.7.89\")\n            }\n    \n        val harFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype erLik \"fullRegnskapsplikt\"}\n    \n        val harFeilSkattekostnadTypeForFullRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, skattekostnad))\n            .forForekomsterAv(kostnad)\n            .hvorMinstEnForekomst {\n                type.finnesBlant(\"7.80.0.10\", \"7.80.0.10.00\", \"7.80.7.89\", \"7.80.7.89.00\", \"8.91.7.89.00\",\n                                 \"8.91.7.89\", \"8.92.7.89.00\", \"8.92.7.89\")\n            }\n    \n        // kontrollen gir utslag dersom skattyter kombinderer en regnskapsplikttype og type skattekostnad som ikke er gyldig\n        naeringsspesifikasjon utslagFor hvis( harGyldigVirksomhetstype og\n            (harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og\n                harFeilSkattekostnadTypeForIngenRegnskapspliktEllerBegrensetRegnskapsplikt) eller\n            (harFullRegnskapsplikt og harFeilSkattekostnadTypeForFullRegnskapsplikt)\n        ) {\n            betjeningsstrategiSettesTil(\n                ikke,\n                faktiskFeil,\n                1,\n                Gruppering settesTil Næring\n            )\n        }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_FRADRAG_ELEKTR_KOMMUNIKASJON",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val harIngenRegnskapspliktEllerBegrensetRegnskapsplikt = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { regnskapspliktstype.finnesBlant(\"ingenRegnskapsplikt\", \"begrensetRegnskapsplikt\") }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt kostnader til elektroniske kommunikasjonstjenester på konto 6995, men som ikke har tilbakeført for privat bruk på konto 6998\n        // Gir merknad\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnadSomGruppe))\n            .utslagFor {\n    \n                val harElektroniskKommunkasjon = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"6995\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                val harTilbakeførtElKomm = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"6998\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                hvis(\n                    harIngenRegnskapspliktEllerBegrensetRegnskapsplikt og (harElektroniskKommunkasjon erStørreEnnEllerLik 5000) og (\n                        ikke(\n                            harTilbakeførtElKomm erStørreEnn 0\n                        ) \n                        )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        kortTypeReferanse settesLik \"kontorlokaler\"\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_FRADRAG_ELEKTR_KOMMUNIKASJON_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        // Kontrollen gir IKKE utslag dersom skattyter har oppgitt kostnader til elektroniske kommunikasjonstjenester på konto 6995, men som ikke har tilbakeført for privat bruk på konto 6998\n        // AB-test på skattytere som har tallet 0 eller 1 i 7.siffer i partsnummeret\n        // Gir ingen merknad\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnadSomGruppe))\n            .utslagFor {\n    \n                val harElektroniskKommunkasjon = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"6995\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                val harTilbakefoertElKomm = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"6998\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                hvis(\n                    (harElektroniskKommunkasjon erStørreEnnEllerLik 5000) og (\n                        ikke(harTilbakefoertElKomm erStørreEnn 0) og\n                            (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"1\"))\n                        )\n                ) {\n                    betjeningsstrategiSettesTil(ikke, merknadIngen, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_FRADRAG_HJEMMEKONTOR",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattytere hvor forretningsadresse er lik bostedsadresse i folkeregisteret og beløp i feltet 'Leie lokale' er mellom kr 1800 - 150 000.\n        // AB-test på skattytere som har tallet 2, 3, 4, 5, 6, 7, 8, 9 i 7.siffer i partsnummeret\n        // kontrollen gir merknad\n    \n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .utslagFor {\n    \n                val harLeiekostnad = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"6300\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                val finnesIKontrollisteHjemmekontor = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - fradrag hjemmekontor\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(\n                    finnesIKontrollisteHjemmekontor og ((harLeiekostnad erStørreEnnEllerLik 18000) og (harLeiekostnad erMindreEnnEllerLik 150000))\n                        og (partsnr.tegnFraIndeks(7).finnesBlant(\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1, kortTypeReferanse settesLik \"kontorlokaler\"\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_FRADRAG_HJEMMEKONTOR_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattytere hvor forretningsadresse er lik bostedsadresse i folkeregisteret og beløp i feltet 'Leie lokale' er mellom kr 1800 - 150 000.\n        // AB-test på skattytere som har tallet 0 eller 1 i 7.siffer i partsnummeret\n        // kontrollen gir ingen merknad\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .utslagFor {\n                val harLeiekostnad = forForekomsterAv(kostnad)\n                    .filtrer { fastsatt(type) erLik \"6300\" }\n                    .summer { beloepSomGruppe.beloepSomTall }\n    \n                val finnesIKontrollisteHjemmekontor = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - fradrag hjemmekontor\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(\n                    finnesIKontrollisteHjemmekontor og ((harLeiekostnad erStørreEnnEllerLik 18000) og (harLeiekostnad erMindreEnnEllerLik 150000))\n                        og (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"1\"))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_GJELD_FORMUESOBJEKTER_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype oevrigSelskap rapporterer samletGjeldOgFormuesobjekt\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harVirksomhetstypeLikAksjeselskap = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype erLik \"oevrigSelskap\"\n            }\n    \n        val rapportererSkogbruk = naeringsspesifikasjon\n            .forForekomsterAv(samletGjeldOgFormuesobjekter)\n            .hvorMinstEnForekomst {\n                (\n                    (formuesverdiForFormuesobjekterIkkeOmfattetAvVerdsettingsrabatt.beloepSomTall er oppgitt) eller\n                        (verdiFoerVerdsettingsrabattForFormuesobjekterOmfattetAvVerdsettingsrabatt.beloepSomTall er oppgitt) eller\n                        (samletGjeldSomGruppe.beloepSomTall er oppgitt) eller\n                        (formuesverdiForFormuesobjekterIkkeOmfattetAvVerdsettingsrabattTilordnetInnehaver.beloepSomTall er oppgitt) eller\n                        (verdiFoerVerdsettingsrabattForFormuesobjekterOmfattetAvVerdsettingsrabattTilordnetInnehaver.beloepSomTall er oppgitt) eller\n                        (samletGjeldTilordnetInnehaver.beloepSomTall er oppgitt)\n                    )\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeLikAksjeselskap og rapportererSkogbruk) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_GTK_INNTEKTSFRADRAG_MANGLER",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val harIkkeOppgittGevinstOgTapskonto = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .harIngenForekomsterDer { fastsatt(satsForInntektsfoeringOgInntektsfradrag) er oppgitt }\n    \n        // kontrollen gir utslag dersom skattyter ligger i kontrolliste og IKKE har oppgitt GevinstOgTapskonto\n        // kontrollen gir merknad i valideringstjenesten og SME\n        naeringsspesifikasjon\n            .fokusområde(\"Fokusområde\")\n            .utslagFor {\n                val utgaaendeVerdiFraKontrollisteGevinstOgTap = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - negativ gevinst- og tapskonto\",\n                    listeAv(partsnr)\n                )\n                hvis(utgaaendeVerdiFraKontrollisteGevinstOgTap og harIkkeOppgittGevinstOgTapskonto) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadTips, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_GTK_INNTEKT_MANGLER",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val harIkkeOppgittGevinstOgTapskonto = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .harIngenForekomsterDer { fastsatt(satsForInntektsfoeringOgInntektsfradrag) er oppgitt }\n    \n        // kontrollen gir utslag dersom skattyter ligger i kontrolliste og IKKE har oppgitt GevinstOgTapskonto\n        // kontrollen gir merknad i valideringstjenesten og SME\n        naeringsspesifikasjon\n            .utslagFor {\n                val utgaaendeVerdiFraKontrollisteGevinstOgTap = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - positiv gevinst- og tapskonto\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(utgaaendeVerdiFraKontrollisteGevinstOgTap og harIkkeOppgittGevinstOgTapskonto) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadTips, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_HØY_AVSKRIVINGSSATS",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom det er benyttet for høy avskrivingssats for saldoavskrivninger når grunnlaget for avskriving er høyere enn 15000\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"a\") og (avskrivningssats erStørreEnn 30)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"b\") og (avskrivningssats erStørreEnn 20)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"c\") og (avskrivningssats erStørreEnn 24)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"c2\") og (avskrivningssats erStørreEnn 30)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"d\") og (avskrivningssats erStørreEnn 20)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"e\") og (avskrivningssats erStørreEnn 14)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"f\") og (avskrivningssats erStørreEnn 12)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"g\") og (avskrivningssats erStørreEnn 5)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"h\") og (avskrivningssats erStørreEnn 20)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"i\") og (avskrivningssats erStørreEnn 2)) eller\n                        ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnn 15000) og (saldogruppe erLik \"j\") og (avskrivningssats erStørreEnn 10))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_HØY_INNTEKT_FELLESFISKE",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom korrigert andel av inntekt som gjelder fellesfiske er høyere enn sum driftsinntekter.\n        // kontrollen medfører merknad i skattemeldingen\n        val sumDriftsinntektEnefisker = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, sumDriftsinntekt))\n            .summer { beloepSomTall }\n    \n        skattemelding\n            .forForekomsterAv(saerskiltFradragForFiskereOgFangstfolk)\n            .utslagFor {\n                hvis(\n                    (\n                        korrigeringerIGrunnlagForSaerskiltFradragForFiskereOgFangstfolkKnyttetTilEnefisker\n                            .andelAvInntektINaeringsinntektForFiskeSomGjelderFellesfiske\n                        ) erStørreEnn (sumDriftsinntektEnefisker)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_HØY_KOSTNAD_FELLESFISKE",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom korrigert andel av kostnad som gjelder fellesfiske er høyere enn sum driftskostnader.\n        // kontrollen medfører merknad i skattemeldingen\n        val sumDriftskostnadEnefisker = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, sumDriftskostnad))\n            .summer { beloepSomTall }\n    \n        skattemelding\n            .forForekomsterAv(saerskiltFradragForFiskereOgFangstfolk)\n            .utslagFor {\n                hvis(\n                    (\n                        korrigeringerIGrunnlagForSaerskiltFradragForFiskereOgFangstfolkKnyttetTilEnefisker\n                            .andelAvKostnadINaeringsinntektForFiskeSomGjelderFellesfiske\n                        ) erStørreEnn (sumDriftskostnadEnefisker)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_HØY_SKJERMINGSRENTE",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skjermingsrenten er høyere enn renten som er fastsatt av Skattedirektoratet\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .utslagFor {\n                hvis((skjermingsrente) erStørreEnn 0.6) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_IKKEØKONOMISK_AKTIVITET_ELLER_VIRKSOMHET",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig de tre foregående inntektsårene (2018-2020) har sum driftsinntekter på under kr 50 000 og underskudd i næring, og\n        // har driftsinntekter under kr 50 000 og underskudd i inntektsåret.\n        // kontrollen gir merknad\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val harLavDriftsinntektIInntektsåret = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, sumDriftsinntekt))\n            .summer { beloepSomTall }\n    \n        naeringsspesifikasjon\n            .fokusområde(\"Fokusområde\")\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .utslagFor {\n                val finnesIKontrollisteIkkeAktivitetEllerVirksomhet = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - ikke aktivitet eller virksomhet\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(finnesIKontrollisteIkkeAktivitetEllerVirksomhet og (harLavDriftsinntektIInntektsåret erMindreEnn 50000) og (fordeltSkattemessigResultat.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_INNEHAVERSANDEL_OVER_100",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom innehavers andel er satt til over 100 %\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .utslagFor {\n                hvis((andelAvSkattemessigResultatTilordnetInnehaver) erStørreEnn 100) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_INNRAPP_NÆRINGSINNTEKT_STØRRE_ENN_DRIFTSINNTEKT",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom innrapportert næringsinntekt er større enn sum driftsinntekt i resultatregnskapet\n        //kontrollen gir merknad\n    \n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val sumInnrapportertNæringsinntekt = skattemelding\n            .forForekomsterAv(oppgavegiver)\n            .summer { inntektFraUtbetalingTilSelvstendigNaeringsdrivende.beloepSomTall }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val driftsinntekterSummert =\n                    forForekomsterAv(sti(resultatregnskap, driftsinntekt, salgsinntekt))\n                        .forForekomsterAv(inntekt)\n                        .filtrer { fastsatt(type).finnesBlant(\"3000\", \"3100\", \"3200\", \"3300\") }\n                        .summer { beloepSomGruppe.beloepSomTall }\n    \n                val finnesIKontrollisteTredjepart = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - innrapportert naeringsinntekt hoyere enn driftsinntekt\",\n                    listeAv(partsnr)\n                )\n    \n                val verdiFraKontrollist = hentKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - innrapportert naeringsinntekt hoyere enn driftsinntekt\",\n                    listeAv(partsnr)\n                )\n                    .forForekomsterAv { verdi }\n                    .summer { verdiSomTall1 }\n    \n                val avvikBeløp = verdiFraKontrollist - sumInnrapportertNæringsinntekt - driftsinntekterSummert\n    \n                hvis(finnesIKontrollisteTredjepart og (avvikBeløp erStørreEnnEllerLik 1000))\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1, Avviksbeloep settesTil avvikBeløp,\n                        kortTypeReferanse settesLik \"salgsinntekt\"\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_INNTEKTSFRADRAG_GTK_HØY",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom sats for inntektsfradrag i gevinst- og tapskonto er høyere enn 20 % og grunnlaget er mindre enn kr - 15 000\n        // kontrollen avviser innsending\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .utslagFor {\n                hvis(\n                    (grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erMindreEnn -15000)\n                        og (satsForInntektsfoeringOgInntektsfradrag erStørreEnn 20)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_INNTEKTSFØRING_GTK_LAV",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom sats for inntektsføring av gevinst- og tapskonto er lavere enn 100 % når grunnlaget er positivt og under kr 15 000\n        // kontrollen avviser innsending\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, gevinstOgTapskonto))\n            .utslagFor {\n                hvis(\n                    ((grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erStørreEnn 15000) og (satsForInntektsfoeringOgInntektsfradrag erMindreEnn 20)) eller\n                        (\n                            (grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erMindreEnnEllerLik 15000) og (grunnlagForAaretsInntektsOgFradragsfoering.beloepSomTall erStørreEnn 0) og\n                                (satsForInntektsfoeringOgInntektsfradrag erMindreEnn 100)\n                            )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_KOMPENSASJONSYTELSE_NAV_AVVIK_GLD",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når beløpet fylt ut på feltet 'Kompensasjon for tapt inntekt' avviker fra innrapportert beløp fra NAV. Gjelder både når beløpet er større eller mindre enn innrapportert beløp.\n        // kontrollen gir merknad i valideringstjenesten\n    \n        skattemelding\n            .forForekomsterAv(sti(oppgavegiver, sykepengerOgAnnenInntektMvFraOppgavegiver))\n            .utslagFor {\n    \n                val harKompensasjonNAV = filtrer { grunnlag(behandlingsart) erLik \"KOMP_PERS_INNT\" }\n                    .hvorMinstEnForekomst { grunnlag(beloepSomGruppe.beloepSomTall) er oppgitt }\n    \n                val fastsattKompensasjonNAV = filtrer { fastsatt(behandlingsart) erLik \"KOMP_PERS_INNT\" }\n                    .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n                val grunnlagKompensasjonNAV = filtrer { grunnlag(behandlingsart) erLik \"KOMP_PERS_INNT\" }\n                    .summer { grunnlag(beloepSomGruppe.beloepSomTall) }\n    \n                val differanseKompensasjonNAV = fastsattKompensasjonNAV - grunnlagKompensasjonNAV\n    \n                hvis(harKompensasjonNAV og (differanseKompensasjonNAV erUlik 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil differanseKompensasjonNAV\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_MANGLER_ANSKAFFELSESKOST",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når anskaffelseskost ikke er oppgitt for lineært avskrevet driftsmiddel\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((anskaffelseskost.beloepSomTall ikkeEr oppgitt) og (paakostning.beloepSomTall ikkeEr oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_MANGLER_LEVETID",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når levetid ikke er oppgitt for lineært avskrevet driftsmiddel\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(levetid ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_MANGLER_REALISASJONSDATO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når driftsmiddelet er realisert og realisasjonsdato mangler\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_LINEÆRAVSKRIVNING_PÅKOSTNING",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Kontrollen slår ut når det rapporteres påkostning på et driftsmiddel som avskrives lineært og ervervsdatoen er tidligere enn i inntektsåret\n        // Kontrollen medfører avvisning i valideringstjenesten\n        val datoIInntektsaaret = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .verdiFor { regnskapsperiode.start }.dato\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, lineaertavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((paakostning.beloepSomTall er oppgitt) og (verdiFor { ervervsdato }.dato erMindreEnn datoIInntektsaaret)) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_MANGLER_EROMFATTETAVFRITAKSMETODEN",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n    \n        // kontrollen gir utslag dersom det er rapportert verdipapir uten at feltet erOmtattetAvFritaksmetoden er oppgitt\n        // kontrollen gir merknad i valideringstjenesten\n    \n        skattemeldingUpersonlig\n            .forForekomsterAv(\n                gruppe(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        aksjeIAksjonaerregisteret\n                    ),\n                    sti(spesifikasjonAvForholdRelevanteForBeskatning, aksjeIkkeIAksjonaerregisteret),\n                    sti(spesifikasjonAvForholdRelevanteForBeskatning, annetFinansprodukt),                  \n                    sti(spesifikasjonAvForholdRelevanteForBeskatning, verdipapirfond)\n                  \n                )\n            )\n            .utslagFor {\n                hvis(erOmfattetAvFritaksmetoden ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MANGLER_NÆRINGSSPESIFIKASJON_OG_DELTAKER_SDF_INFO",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattyters partsnr finnes i kontrollisten (er næringsdrivende) og\n        // ikke har oppgitt næringsspesifikasjon eller opplysninger om deltakers andel i SDF\n        // kontrollen gir merknadMangel i SME\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { partsnummerSomTekst }\n    \n        val finnesIKontrollisteErNaeringsdrivende = finnesIKontrolliste(\n            \"kontrolliste - naeringsdrivende\",\n            listeAv(partsnr)\n        )\n    \n        val harOppgittNaeringsspesifikasjon = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst { virksomhetstype er oppgitt }\n    \n        val harIkkeOppgittDeltakerinformasjonSDF = skattemelding\n            .harIngenForekomsterDer { fastsatt(deltakersAndelAvFormueOgInntekt) er oppgitt }\n    \n        skattemelding\n            .utslagFor {\n                hvis(\n                    finnesIKontrollisteErNaeringsdrivende og\n                        ikke(harOppgittNaeringsspesifikasjon) og\n                        harIkkeOppgittDeltakerinformasjonSDF\n                ) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_MANGLER_OPPLYSNINGER_OM_SELSKAPET",
      "kontrollformel": "// Kontrollen gir utslag dersom selskapet ikke svarer på spørsmålene om det er børsnotert eller om det har ytelser\n    // mellom aksjonær og selskapet eller temaet Opplysninger om selskapet mangler\n    // Kontrollen gir merknad i valideringstjenesten\n    sakstype(Upersonlig)\n        .kontekst(ValideringSkattepliktig) {\n    \n            val manglerOpplysninger = skattemeldingUpersonlig\n                .forForekomsterAv(opplysningerOmSkattesubjekt)\n                .harIngenForekomsterDer {\n                    (fastsatt(erBoersnotert) er oppgitt) eller\n                        (fastsatt(harYtelseMellomAksjonaerEllerNaerstaaendeOgSelskapEllerSelskapetsDatterselskap) er oppgitt)\n                }\n    \n            skattemeldingUpersonlig\n                .utslagFor {\n                    hvis(manglerOpplysninger eller (fastsatt(opplysningerOmSkattesubjekt) ikkeEr oppgitt)) {\n                        betjeningsstrategiSettesTil(\n                            ikke, merknadStandard, 1\n                        )\n                    }\n                }\n        }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MANGLER_VERDI_BAK_AKSJENE",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom ikke-børsnoterte aksjeselskap ikke rapporterer feltet samletVerdiBakAksjeneISelskapet\n        // kontrollen gir faktiskFeil i valideringstjenesten verdsettingAvAksje.samletVerdiBakAksjeneISelskapet\n    \n        val selskapetErBoersnotert = skattemeldingUpersonlig\n            .forForekomsterAv(opplysningerOmSkattesubjekt)\n            .hvorMinstEnForekomst { erBoersnotert erLik true }\n    \n        val harFormueOgGjeldMenIkkeVerdiBakAksjene = skattemeldingUpersonlig\n            .forForekomsterAv(formueOgGjeld)\n            .harIngenForekomsterDer { fastsatt(samletVerdiBakAksjeneISelskapet) er oppgitt }\n    \n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                hvis(\n                    (harFormueOgGjeldMenIkkeVerdiBakAksjene eller (fastsatt(formueOgGjeld) ikkeEr oppgitt)) og ikke(\n                        selskapetErBoersnotert\n                    )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_MANGLER_YTELSE",
      "kontrollformel": "// TODO: Oppdater for 2022\n    // sakstype(Upersonlig)\n    //     .kontekst(ValideringSkattepliktig) {\n    //         val harYtelseFraAksjonaerEllerNaerstaaendeINS = naeringsspesifikasjon\n    //             .forForekomsterAv(sti(andreForhold, ytelseFraAksjonaerEllerNaerstaaende))\n    //             .hvorMinstEnForekomst {\n    //                 (laan.kostnadsfoerteRenter erStørreEnn 0) eller\n    //                     (laan.laanesaldoVedUtgangAvInntektsaar erStørreEnn 0) eller\n    //                     (laan.laanesaldoPer061015 erStørreEnn 0) eller\n    //                     (sikkerhetsstillelse.beloepPer061015 erStørreEnn 0) eller\n    //                     (sikkerhetsstillelse.beloepVedUtgangAvInntektsaar erStørreEnn 0) eller\n    //                     (realisasjonOgUtleieAvFormuesobjektMv er oppgitt)\n    //             }\n    //\n    //         val harYtelseFraSelskapINS = naeringsspesifikasjon\n    //             .forForekomsterAv(sti(andreForhold, ytelseFraSelskapEllerSelskapetsDatterselskap))\n    //             .hvorMinstEnForekomst {\n    //                 (totaltUtdeltUtbytteVedUtgangAvInntektsaar erStørreEnn 0) eller\n    //                     (totaltUtdeltUtbytteVedUtgangAvInntektsaar erStørreEnn 0) eller\n    //                     (laan.kostnadsfoerteRenter erStørreEnn 0) eller\n    //                     (laan.laanesaldoVedUtgangAvInntektsaar erStørreEnn 0) eller\n    //                     (laan.laanesaldoPer061015 erStørreEnn 0) eller\n    //                     (sikkerhetsstillelse.beloepPer061015 erStørreEnn 0) eller\n    //                     (sikkerhetsstillelse.beloepVedUtgangAvInntektsaar erStørreEnn 0) eller\n    //                     (realisasjonOgUtleieAvFormuesobjektMv er oppgitt)\n    //             }\n    //\n    //         skattemeldingUpersonlig\n    //             .utslagFor {\n    //                 val harYtelserMellomAksjonaerOgSelskapISMU = forForekomsterAv(opplysningerOmSkattesubjekt)\n    //                     .hvorMinstEnForekomst { harYtelseMellomAksjonaerEllerNaerstaaendeOgSelskapEllerSelskapetsDatterselskap erLik true }\n    //\n    //                 hvis(harYtelserMellomAksjonaerOgSelskapISMU og (ikke(harYtelseFraAksjonaerEllerNaerstaaendeINS eller harYtelseFraSelskapINS))) {\n    //                     betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n    //                 }\n    //             }\n    //     }\n    sakstype(Personlig)\n        .kontekst(AdHoc) {\n            skattemelding.deaktivertKontrollAldriUtslagFor {\n                hvis(skatteplikt er oppgitt) {\n                    betjeningsstrategiSettesTil()\n                }\n            }\n        }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "ingen"
    },
    {
      "kontrollnavn": "N_MIDLERTIDIG_FORSKJELL_BESKRIVELSE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Dersom midlertidigForskjell.midlertidigForskjellstype = annenPositivMidlertidigForskjell eller annenNegativMidlertidigForskjell og midlertidigForskjell.beskrivelse mangler\n        naeringsspesifikasjon\n            .forForekomsterAv(midlertidigForskjell)\n            .filtrer {\n                fastsatt(midlertidigForskjellstype)\n                    .finnesBlant(\"annenPositivMidlertidigForskjell\", \"annenNegativMidlertidigForskjell\")\n            }\n            .utslagFor {\n                hvis(beskrivelse ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_MVA_FJERNLEVERBARE_TJENESTER",
      "kontrollformel": "sakstype(Personlig, Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag når skattyter ikke har inntekter i post 3000 og 3100, og har kostnader i post 6700 fremmed tjeneste og/eller 7330 salgs-og reklamekostnader\n        //Kan ha verdier i øvrige inntekts- og kostnadsposter\n        //kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .utslagFor {\n                val harIkkeSalgsinntekt3000Og3100 =\n                    forForekomsterAv(sti(resultatregnskap, driftsinntekt, salgsinntektSomGruppe))\n                        .forForekomsterAv(inntekt)\n                        .harIngenForekomsterDer { fastsatt(type).finnesBlant(\"3000\", \"3100\") }\n    \n                val harAndreKostnader6700Eller7330 =\n                    forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnadSomGruppe))\n                        .forForekomsterAv(kostnad)\n                        .filtrer { fastsatt(type).finnesBlant(\"6700\", \"7330\") }\n                        .summer { beloepSomGruppe.beloepSomTall }\n    \n                hvis(harIkkeSalgsinntekt3000Og3100 og (harAndreKostnader6700Eller7330 erStørreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEGATIV_KONTO_2080",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom post 2080 \"udekket tap\" er negativ\n        // kontrollen avviser innleveringen\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, egenkapital))\n            .forForekomsterAv(kapital)\n            .utslagFor {\n                hvis((type erLik \"2080\") og (beloepSomGruppe.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_NEGATIV_KONTO_3300",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom post 3300 \"spesielle offentlige avgifter vedrørende salg\" er negativ\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, salgsinntekt))\n            .forForekomsterAv(inntekt)\n            .utslagFor {\n                hvis((type erLik \"3300\") og (beloepSomGruppe.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEGATIV_KONTO_6998",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når post 6998 rapporteres med negativt fortegn\n        // kontrollen avviser innleveringen\n        naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .utslagFor {\n                hvis((type erLik \"6998\") og (beloepSomGruppe.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_NEGATIV_KONTO_7099",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom post 7099 er negativ\n        // kontrollen avviser innleveringen\n        naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .utslagFor {\n                hvis((type erLik \"7099\") og (beloepSomGruppe.beloepSomTall erMindreEnn 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_NEGATIV_SALDO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når grunnlag for inntektsføring er lavere enn - 15 000 og avskrivingssats er mindre enn minimumssatsen for saldogruppen\n        // kontrollen gir utslag når grunnlag for inntektsføring er høyere eller lik - 15 000 og avskrivningssats er mindre enn 100 %\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    (\n                        (saldogruppe erLik \"a\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 30)) eller\n                            (\n                                (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                    (avskrivningssats erMindreEnn 100)\n                                )\n                        ) eller\n                        (\n                            (saldogruppe erLik \"c\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 24)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            ) eller\n                        (\n                            (saldogruppe erLik \"c2\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 30)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            ) eller\n                        (\n                            (saldogruppe erLik \"d\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 20)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            ) eller\n                        (\n                            (saldogruppe erLik \"j\") og ((grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn -15000) og (avskrivningssats erMindreEnn 10)) eller\n                                (\n                                    (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erMindreEnn 0) og (grunnlagForAvskrivningOgInntektsfoering.beloepSomTall erStørreEnnEllerLik -15000) og\n                                        (avskrivningssats erMindreEnn 100)\n                                    )\n                            )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_NEGATIV_SALDO_IFJOR_OVER_15000",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom skattyters partsnr finnes i kontrolliste (negativ saldo under 15000) og\n        //skattyter ikke har inntektsført andel av negativ saldo\n        //kontrollen gir oppgave i SMIA\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { partsnummerSomTekst }\n    \n        val harIkkeOppgittNegativSaldo = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .harIngenForekomsterDer { fastsatt(avskrivningssats) er oppgitt }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n                val finnesIKontrollisteNegativSaldo = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - negativ saldo over 15000\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(finnesIKontrollisteNegativSaldo og harIkkeOppgittNegativSaldo) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadTips,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_NEGATIV_SALDO_IFJOR_UNDER_15000",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom skattyters partsnr finnes i kontrolliste (negativ saldo under 15000) og\n        //skattyter ikke har inntektsført andel av negativ saldo\n        //kontrollen gir oppgave i SMIA\n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { partsnummerSomTekst }\n    \n        val harIkkeOppgittNegativSaldo = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .harIngenForekomsterDer { fastsatt(avskrivningssats) er oppgitt }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n                val finnesIKontrollisteNegativSaldo = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - negativ saldo under 15000\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(finnesIKontrollisteNegativSaldo og harIkkeOppgittNegativSaldo) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadTips,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_NÆRINGSINNTEKT_MANGLER_SKATTEMESSIG_UNNTAK",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom skattyter har valgt 'Ikke skattepliktig eller trygdepliktig' som trygde- og skattemessig unntak for personinntekt,\n        //og det mangler trygde- og skattemessig unntak 'Ikke skattepliktig eller trygdepliktig' for næringsinntekten.\n        //kontrollen gir merknad i SME\n    \n        skattemelding\n            .forForekomsterAv(naeringsinntektMv)\n            .utslagFor {\n    \n                val harTrygdefritakPåPersoninntekt = hvorMinstEnForekomst {\n                    (samordnetPersoninntekt.personinntekt.beloepSomTall er oppgitt) og\n                        (\n                            fastsatt(samordnetPersoninntekt.personinntekt.trygdeEllerSkattemessigUnntak) erLik (\n                                \"skattefriUtenTrygdeavgiftsplikt\"\n                                )\n                            )\n                }\n    \n                val harIkkeSkattefritakPåNæringsinntekt = hvorMinstEnForekomst {\n                    (\n                        (naeringsinntektTilordnetInnehaver.beloepSomTall er oppgitt) og\n                            (\n                                fastsatt(naeringsinntektTilordnetInnehaver.trygdeEllerSkattemessigUnntak) erUlik (\n                                    \"skattefriUtenTrygdeavgiftsplikt\"\n                                    )\n                                ) eller\n                            (\n                                (underskuddTilordnetInnehaver.beloepSomTall er oppgitt) og (\n                                    fastsatt(underskuddTilordnetInnehaver.trygdeEllerSkattemessigUnntak) erUlik (\n                                        \"skattefriUtenTrygdeavgiftsplikt\"\n                                        )\n                                    )\n                                )\n                        )\n                }\n    \n                hvis(harTrygdefritakPåPersoninntekt og harIkkeSkattefritakPåNæringsinntekt) {\n                    betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_OBLIGASJON_MANGLER_OPPLYSNING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        skattemeldingUpersonlig\n            .forForekomsterAv(sti(spesifikasjonAvForholdRelevanteForBeskatning, obligasjonOgSertifikat))\n            .utslagFor {\n                hvis(\n                    rentepapiretsNavn er oppgitt og (\n                        (kontofoerersNavn ikkeEr oppgitt) eller\n                            (kontonummer ikkeEr oppgitt) eller\n                            (finansproduktidentifikator ikkeEr oppgitt) eller\n                            (finansproduktidentifikatortype ikkeEr oppgitt) eller\n                            (landkode ikkeEr oppgitt) eller\n                            (antallObligasjonOgSertifikat ikkeEr oppgitt)\n                        )\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_OMSETNING_MVA_SME_SBS",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom skattyter finnes i kontrolliste (innrapportert i mva) og ikke har rapportert drifsinntekter eller driftskostnader i NSP\n        // AB-test på skattytere som har partall i 7.siffer i partsnummeret\n        //kontrollen gir merknad\n    \n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val harIkkeDriftsinntekter = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, sumDriftsinntekt))\n            .summer { beloepSomTall }\n    \n        val harIkkeDriftskostnader = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, sumDriftskostnad))\n            .summer { beloepSomTall }\n    \n        skattemelding\n            .fokusområde(\"Fokusområde\")\n            .forForekomsterAv(naeringsinntektMv)\n            .utslagFor {\n    \n                val finnesIKontrollisteMva = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - innrapportert i mva\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(\n                    finnesIKontrollisteMva og (harIkkeDriftsinntekter erLik 0) og (harIkkeDriftskostnader erLik 0) og\n                        (partsnr.tegnFraIndeks(7).finnesBlant(\"0\", \"2\", \"4\", \"6\", \"8\"))\n                )\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_OMSETNING_MVA_SME_SBS_IKKE_MERKNAD",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom skattyter finnes i kontrolliste (innrapportert i mva) og ikke har rapportert drifsinntekter eller driftskostnader i NSP\n        // AB-test på skattytere som har partall i 7.siffer i partsnummeret\n        //kontrollen gir ingen merknad\n    \n        val partsnr = skattepliktGjeldende\n            .forForekomsterAv(skatteplikt)\n            .verdiFor { fastsattEllerGrunnlag(partsnummerSomTekst) }\n    \n        val harIkkeDriftsinntekter = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftsinntekt, sumDriftsinntekt))\n            .summer { beloepSomTall }\n    \n        val harIkkeDriftskostnader = naeringsspesifikasjon\n            .forForekomsterAv(sti(resultatregnskap, driftskostnad, sumDriftskostnad))\n            .summer { beloepSomTall }\n    \n        skattemelding\n            .fokusområde(\"Fokusområde\")\n            .forForekomsterAv(naeringsinntektMv)\n            .utslagFor {\n    \n                val finnesIKontrollisteMva = finnesIKontrolliste(\n                    skattemelding.kontrollKontekst.inntektsaar,\n                    \"kontrolliste - innrapportert i mva\",\n                    listeAv(partsnr)\n                )\n    \n                hvis(\n                    finnesIKontrollisteMva og (harIkkeDriftsinntekter erLik 0) og (harIkkeDriftskostnader erLik 0) og\n                        (partsnr.tegnFraIndeks(7).finnesBlant(\"1\", \"3\", \"5\", \"7\", \"9\"))\n                )\n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadIngen,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadIngen"
    },
    {
      "kontrollnavn": "N_PERMANENT_FORSKJELL_BESKRIVELSE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Dersom permanentForskjell.permanentForskjellstype = annetInntektstillegg eller annetInntektsfradrag og permanentForskjell.beskrivelse mangler\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(permanentForskjell)\n            .filtrer {\n                fastsatt(permanentForskjellstype)\n                    .finnesBlant(\"annetInntektstillegg\", \"annetInntektsfradrag\")\n            }\n            .utslagFor {\n                hvis(beskrivelse ikkeEr oppgitt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_PERSONINNTEKT_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig som ikke er enkeltpersonforetak rapporterer personinntekt\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n         val harGyldigVirksomhetstype = naeringsspesifikasjon\n      \t\t.forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst{virksomhetstype.finnesBlant(\n             \"oevrigSelskap\",\n             \"selskapMedDeltakerfastsetting\",\n             \"bankOgFinansieringsforetak\", \n             \"livsforsikringsforetakOgPensjonskasse\",\n             \"skadeforsikringsforetak\") \n            }\n                    \n        val harRapportertPersoninntekt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .hvorMinstEnForekomst {\n                (identifikatorForFordeltBeregnetPersoninntekt er oppgitt)\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harGyldigVirksomhetstype og harRapportertPersoninntekt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }}",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_PERSONINNTEKT_MANGLER_TRYGDEOGSKATTEMESSIG_UNNTAK",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        //kontrollen gir utslag dersom skattyter har valgt 'Ikke skattepliktig eller trygdepliktig' som trygde- og skattemessig unntak for næringsinntekt,\n        //og det mangler trygde- og skattemessig unntak 'Ikke skattepliktig eller trygdepliktig' for personinntekten.\n        //kontrollen gir merknad i SME\n    \n        skattemelding\n            .forForekomsterAv(naeringsinntektMv)\n            .utslagFor {\n    \n                val harSkattefritakPåNæringsinntekt = hvorMinstEnForekomst {\n                    (\n                        (naeringsinntektTilordnetInnehaver.beloepSomTall er oppgitt) og\n                            (\n                                fastsatt(naeringsinntektTilordnetInnehaver.trygdeEllerSkattemessigUnntak) erLik (\n                                    \"skattefriUtenTrygdeavgiftsplikt\"\n                                    )\n                                )\n                        ) eller\n                        (\n                            (underskuddTilordnetInnehaver.beloepSomTall er oppgitt) og\n                                (\n                                    fastsatt(underskuddTilordnetInnehaver.trygdeEllerSkattemessigUnntak) erLik (\n                                        \"skattefriUtenTrygdeavgiftsplikt\"\n                                        )\n                                    )\n                            )\n                }\n    \n                val harIkkeTrygdefritakPåPersoninntekt = hvorMinstEnForekomst {\n                    (samordnetPersoninntekt.personinntekt.beloepSomTall er oppgitt) og\n                        (\n                            fastsatt(samordnetPersoninntekt.personinntekt.trygdeEllerSkattemessigUnntak) erUlik (\n                                \"skattefriUtenTrygdeavgiftsplikt\"\n                                )\n                            )\n                }\n    \n                hvis(harSkattefritakPåNæringsinntekt og harIkkeTrygdefritakPåPersoninntekt) {\n                    betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_PÅKOSTNING_SKIP_OG_FARTØY",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        \n// Merknad til skattepliktige med påkostninger på skip og fartøy - informasjon om å opprette eget kort ved påkostninger over 20 % av kostprisen.\n// kontrollen medfører merknad i SME\n      \nval harVerdierISaldogruppeE = naeringsspesifikasjon\n \t.forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n    .filtrer{fastsatt(saldogruppe) erLik \"e\"} \n    .hvorMinstEnForekomst{(fastsatt(inngaaendeVerdi.beloepSomTall) er oppgitt) og\n    \t\t\t\t\t\t(fastsatt(paakostning.beloepSomTall) er oppgitt) og\n    \t\t\t\t\t\t(fastsatt(erDetFysiskAnleggsmiddelIUtgaaendeVerdi) erLik \"true\")}\n          \nval forekomsterAvSkip = skattemelding\n   \t.forForekomsterAv(formuesspesifikasjonForSkipFiskeOgFangstfartoeyMv)\n    .antall\n      \nskattemelding\n    .fokusområde(\"Fokusområde\")\n    .forForekomsterAv(formuesspesifikasjonForSkipFiskeOgFangstfartoeyMv)\n    .utslagFor { \n      val harKostprisEllerPåkostningOver20Prosent = hvorMinstEnForekomst {kostprisEllerAnskaffelsespris.beloepSomTall er oppgitt}\n           \n      \thvis(harVerdierISaldogruppeE og harKostprisEllerPåkostningOver20Prosent og (forekomsterAvSkip erLik 1))\n      \t{\n        \tbetjeningsstrategiSettesTil(\n             \tikke, merknadInformasjon, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadInformasjon"
    },
    {
      "kontrollnavn": "N_REGELTYPE_AARSREGNSKAP_MANGLER",
      "kontrollformel": "sakstype(Personlig, Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med regnskapspliktstype full regnskapsplikt ikke rapporterer regeltype for årsregnskap\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harRegnskapspliktstypeLik2 = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                regnskapspliktstype erLik \"fullRegnskapsplikt\"\n            }\n    \n        val regeltypeForAarsregnskapMangler = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .harIngenForekomsterDer {\n                regeltypeForAarsregnskap\n                    .finnesBlant(\n                        \"regnskapslovensAlminneligeRegler\",\n                        \"regnskapslovensReglerForSmaaForetak\",\n                        \"regnskapslovensReglerForSmaaForetak\",\n                        \"godRegnskapsskikkForIdeelleOrganisasjoner\",\n                        \"ifrs\",\n                        \"forenkletIfrs\"\n                    )\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harRegnskapspliktstypeLik2 og regeltypeForAarsregnskapMangler) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_ANSKAFFELSE_EKSISTERENDE_ENKELTSALDO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det rapporteres nyanskaffelse på en eksisterende enkeltesaldo\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .filtrer { fastsatt(saldogruppe).finnesBlant(\"e\", \"f\", \"g\", \"h\", \"i\") }\n            .utslagFor {\n                hvis((inngaaendeVerdi.beloepSomTall er oppgitt) og (nyanskaffelse.beloepSomTall er oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_FORRETNINGSBYGGFØR_01011984_ERVERVSDATO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom det oppgis opplysninger om forretningseiendom anskaffet før 01.01.84 og ervervsdatoen er senere enn 01.01.84\n        // kontrollen medfører merknad i valideringstjenesten\n        val forretningsbygg = naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .hvorMinstEnForekomst {\n                (\n                    (forretningsbyggAnskaffetFoer01011984.historiskKostpris.beloepSomTall er oppgitt)\n                        eller (forretningsbyggAnskaffetFoer01011984.nedskrevetVerdiPr01011984.beloepSomTall er oppgitt)\n                        eller (forretningsbyggAnskaffetFoer01011984.nedreGrenseForAvskrivning.beloepSomTall er oppgitt)\n                    )\n            }\n    \n        val datoGrense = KonstantTekstFelt(\"1984-01-01\").dato\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis((forretningsbygg) og (ervervsdato er oppgitt) og (verdiFor { ervervsdato }.dato erStørreEnn datoGrense)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_INNGÅENDE_VERDI_NY_ENKELTSALDO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når det rapporteres inngående verdi på en ny enkeltesaldo\n        // kontrollen medfører merknad i valideringstjenesten\n    \n        val datoIInntektsaaret = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .verdiFor { regnskapsperiode.start }.dato\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .filtrer { fastsatt(saldogruppe).finnesBlant(\"e\", \"f\", \"g\", \"h\", \"i\") }\n            .utslagFor {\n                hvis((inngaaendeVerdi.beloepSomTall er oppgitt) og (verdiFor { ervervsdato }.dato erStørreEnn datoIInntektsaaret)) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SALDOAVSKRIVNING_MANGLER_REALISASJONSDATO",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når driftsmiddelet er realisert og realisasjonsdato mangler\n        // kontrollen medfører merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    ((saldogruppe erLik \"e\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"f\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"g\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"h\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt)) eller\n                        ((saldogruppe erLik \"i\") og (vederlagVedRealisasjonOgUttak.beloepSomTall er oppgitt) og (realisasjonsdato ikkeEr oppgitt))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SAMLESALDO_GTK",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n            .utslagFor {\n                hvis(\n                    ((saldogruppe erLik \"a\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"c\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"c2\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"d\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt))) eller\n                        ((saldogruppe erLik \"j\") og ((gevinstOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt) eller (tapOverfoertTilGevinstOgTapskonto.beloepSomTall er oppgitt)))\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, faktiskFeil, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_SKIP_FORMUESVERDI_MANGLER",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        \n// Merknad skal gis til skattepliktige som har eiendeler på konto 1221 i balanseregnskapet og/eller saldogruppe e, men ikke har fastsatt formuesverdi av skip, fartøy mv.\n// kontrollen avviser innleveringen\n      \nval harBegrensetSkatteplikt = skattepliktGjeldende\n   \t.forForekomsterAv(skatteplikt)\n    .hvorMinstEnForekomst { personligSkattesubjekt.skattepliktTilNorge erLik \"begrenset\" }\n      \nval harSaldogruppeE = naeringsspesifikasjon\n \t.forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n    .filtrer{fastsatt(saldogruppe) erLik \"e\"} \n    .hvorMinstEnForekomst{fastsatt(utgaaendeVerdi.beloepSomTall) er oppgitt}\n    \nval harBeløpPåKonto1221 = naeringsspesifikasjon\n \t.forForekomsterAv(sti(balanseregnskap,anleggsmiddel,balanseverdiForAnleggsmiddel))\n   \t.forForekomsterAv(balanseverdi)\n    .filtrer{type erLik \"1221\"}\n    .hvorMinstEnForekomst{fastsatt(beloepSomGruppe.beloepSomTall) er oppgitt} \n    \nskattemelding\n    .utslagFor { \n      val harFormuesverdiFartøy = harIngenForekomsterDer{formuesspesifikasjonForSkipFiskeOgFangstfartoeyMv er oppgitt}\n      \thvis(ikke(harBegrensetSkatteplikt) og (harSaldogruppeE eller harBeløpPåKonto1221) og harFormuesverdiFartøy) \n      \t{\n        \tbetjeningsstrategiSettesTil(\n             \tikke, merknadTips, 1\n                    )\n                }\n            }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadTips"
    },
    {
      "kontrollnavn": "N_SKJERMINGFRADRAG_NEGATIVT",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skjermingsfradraget blir negativt\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .utslagFor {\n                hvis(skjermingsfradrag.beloepSomTall erMindreEnn 0) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SKJERMINGSRENTE_MANGLER",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom sum skjermingsgrunnlag etter gjeldsfradrag er positiv og skjermingsrente mangler\n        // kontrollen gir merknad i valideringstjenesten\n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetPersoninntekt)\n            .utslagFor {\n                hvis(\n                    (sumSkjermingsgrunnlagEtterGjeldsfradrag.beloepSomTall erStørreEnn 0)\n                        og (skjermingsrente erMindreEnnEllerLik 0)\n                ) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SKOGBRUK_DIFFERANSE_FRADRAG",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når sjablongberegnet fradrag i skogbruk i fordelt beregnet næringsinntekt er ulik summen av sjablongberegnet fradrag pr tømmerkonto\n        // kontrollen gir merknad i valideringstjenesten\n        val sumSjablongberegnetFradragISkogbruk = naeringsspesifikasjon\n            .forForekomsterAv(sti(skogbruk, skogOgToemmerkonto))\n            .summer { inntektOgKostnad.sjablongberegnetFradragKnyttetTilBiomasseOgVedproduksjon.beloepSomTall }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .utslagFor {\n                val næringstypeSkogbruk = hvorMinstEnForekomst { naeringstype erLik \"skogbruk\" }\n    \n                val differanseSjablongberegnetFradrag =\n                    sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall + sumSjablongberegnetFradragISkogbruk\n                // må bruke pluss i beregningen siden sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall angis med minus i fordeltBeregnetNaeringsinntekt\n    \n                hvis(næringstypeSkogbruk og (sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall erUlik (sumSjablongberegnetFradragISkogbruk * -1))) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil differanseSjablongberegnetFradrag\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SKOGBRUK_DIFFERANSE_JORDBRUK",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n    \n        //kontrollen gir utslag når sjablongberegnet fradrag i skogbruk i fordelt beregnet næringsinntekt er ulik sjablongberegnet inntekt i jordbruk i fordelt beregnet næringsinntekt\n        //kontrollen gir merknad i valideringstjenesten\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val sjablongISkogbruk = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n                    .hvorMinstEnForekomst { ((naeringstype erLik \"skogbruk\") og (sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall er oppgitt)) }\n    \n                val sjablongIJordbruk = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n                    .hvorMinstEnForekomst { ((naeringstype erLik \"jordbrukGartneriPelsdyrnaeringMv\") og (sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall er oppgitt)) }\n    \n                val sumSjablongISkogOgJord = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n                    .summer { sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall }\n    \n                hvis(sjablongISkogbruk og sjablongIJordbruk og (sumSjablongISkogOgJord erUlik 0))\n    \n                {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil sumSjablongISkogOgJord\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SKOGBRUK_SJABLONGFRADRAG_BIOMASSEOGVED",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når sjablongberegnet fradrag i skogbruk pr tømmerkonto er høyere enn 55 % av salgsinntekt/uttak ved og biomasse\n        // kontrollen gir merknad i valideringstjenesten\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(skogbruk, skogOgToemmerkonto))\n            .utslagFor {\n                val maxSjablongberegnetFradrag =\n                    inntektOgKostnad.salgsinntektOgUttakAvVedOgBiomasse.beloepSomTall * 55.prosent\n    \n                hvis(inntektOgKostnad.sjablongberegnetFradragKnyttetTilBiomasseOgVedproduksjon.beloepSomTall erStørreEnn maxSjablongberegnetFradrag) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_SKOG_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype ulik enkeltpersonforetak rapporterer skogbruk\n        // kontrollen gir faktiskFeil i valideringstjenesten\n        val harVirksomhetstypeUlikEnkeltpersonforetak = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype.finnesBlant(\"oevrigSelskap\", \"selskapMedDeltakerfastsetting\", \"bankOgFinansieringsforetak\",\n                                            \"livsforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")\n            }\n    \n        val rapportererSkogbruk = naeringsspesifikasjon\n            .forForekomsterAv(sti(skogbruk, skogOgToemmerkonto))\n            .hvorMinstEnForekomst { driftsresultatSomKanOverfoeresTilToemmerkonto.beloepSomTall er oppgitt }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeUlikEnkeltpersonforetak og rapportererSkogbruk) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_SYKEPENGER_AVVIK_GLD",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n    \n        // kontrollen gir utslag når beløpet fylt ut på feltet 'Sykepenger for selvstendig næringsdrivende' avviker fra innrapportert beløp fra NAV. Gjelder både når beløpet er større eller mindre enn innrapportert beløp.\n    \n        skattemelding\n            .forForekomsterAv(sti(oppgavegiver, sykepengerOgAnnenInntektMvFraOppgavegiver))\n            .utslagFor {\n    \n                val harSykepengerNAV = filtrer { grunnlag(behandlingsart) erLik \"SYKEPENGER_NAER\" }\n                    .hvorMinstEnForekomst { grunnlag(beloepSomGruppe.beloepSomTall) er oppgitt }\n    \n                val fastsattSykepengerNAV = filtrer { fastsatt(behandlingsart) erLik \"SYKEPENGER_NAER\" }\n                    .summer { fastsatt(beloepSomGruppe.beloepSomTall) }\n    \n                val grunnlagSykepengerNAV = filtrer { grunnlag(behandlingsart) erLik \"SYKEPENGER_NAER\" }\n                    .summer { grunnlag(beloepSomGruppe.beloepSomTall) }\n    \n                val differanseSykepengerNAV = fastsattSykepengerNAV - grunnlagSykepengerNAV\n    \n                hvis(harSykepengerNAV og (differanseSykepengerNAV erUlik 0)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        merknadStandard,\n                        1,\n                        Avviksbeloep settesTil differanseSykepengerNAV\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_TAP_FORDRINGER_KONTRAKTER",
      "kontrollformel": "sakstype(Personlig, Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattyter i post 7830 eller 7860 har oppgitt mer enn 20 000 i kostander\n        // kontrollen gir merknad i valideringstjenesten og SME\n        naeringsspesifikasjon\n            .forForekomsterAv(resultatregnskap.driftskostnad.annenDriftskostnadSomGruppe)\n            .forForekomsterAv(kostnad)\n            .filtrer { fastsatt(type).finnesBlant(\"7830\", \"7860\") }\n            .utslagFor {\n                hvis(beloepSomTall erStørreEnn 20_000) {\n                    betjeningsstrategiSettesTil(\n                        ikke, merknadStandard, 1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_TRANSPORTMIDDEL_AKSJESELSKAP",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype aksjeselskap rapporterer transportmiddel i næring\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harVirksomhetstypeLikAksjeselskap = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype.finnesBlant(\"oevrigSelskap\", \"selskapMedDeltakerfastsetting\", \"bankOgFinansieringsforetak\",\n                                            \"liveforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")\n            }\n    \n        naeringsspesifikasjon\n            .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, motorkjoeretoeyINaering))\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeLikAksjeselskap og (kjennemerke er oppgitt)) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_TRANSPORTMIDDEL_DRIFTSKOSTNADER",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag når summen av driftskostnader rapportert pr bil under transportmiddel i næring er større enn driftskostnader til bil ført i resultatregnskapet\n        // kontrollen gir merknad i valideringstjenesten\n    \n        naeringsspesifikasjon\n            .utslagFor {\n                val sumDriftskostnaderTransportmiddel =\n                    forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, motorkjoeretoeyINaering))\n                        .summer { driftskostnader.beloepSomTall }\n    \n                val sumDriftskostnaderBilIResultatregnskapet =\n                    forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnadSomGruppe))\n                        .forForekomsterAv(kostnad)\n                        .filtrer { type.finnesBlant(\"7000\", \"7020\", \"7040\") }\n                        .summer { beloepSomGruppe.beloepSomTall }\n    \n                hvis(sumDriftskostnaderTransportmiddel erStørreEnn sumDriftskostnaderBilIResultatregnskapet) {\n                    betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_TRANSPORTMIDDEL_LEASINGLEIE",
      "kontrollformel": "sakstype(Personlig)\n      .kontekst(ValideringSkattepliktig) {\n          // kontrollen gir utslag når summen av leasingleie rapportert pr bil under transportmiddel i næring er større enn leasingleie av bil i konto 6440 i resultatregnskapet\n          // kontrollen gir merknad i valideringstjenesten\n    \n          naeringsspesifikasjon\n              .utslagFor {\n                  val sumLeasingleie = naeringsspesifikasjon\n                      .forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, motorkjoeretoeyINaering))\n                      .summer { leasingleie.beloepSomTall }\n    \n                  val harLeasingleie = naeringsspesifikasjon\n                      .forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnadSomGruppe))\n                      .forForekomsterAv(kostnad)\n                      .filtrer { type erLik \"6440\" }\n                      .summer { beloepSomGruppe.beloepSomTall }\n    \n                  hvis(sumLeasingleie erStørreEnn harLeasingleie) {\n                      betjeningsstrategiSettesTil(\n                          ikke,\n                          merknadStandard,\n                          1\n                      )\n                  }\n              }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_TØMMERKONTO_MANGLER_NÆRINGSINNTEKT_SKOG",
      "kontrollformel": "sakstype(Personlig)\n    .kontekst(ValideringSkattepliktig) {\n        \n// Merknad til skattepliktige når har tømmerkonto men ikke næringstype skogbruk\n// kontrollen medfører merknad i SME\n      \nval harInntektFradragFraTømmerkonto = naeringsspesifikasjon\n \t.forForekomsterAv(sti(skogbruk, skogOgToemmerkonto))\n    .summer{(fastsatt(inntektFraToemmerkonto.beloepSomTall)) +\n    \t\t(fastsatt(inntektsfradragFraToemmerkonto.beloepSomTall))}\n    \nval harIkkeInntektFradragPåTømmerkonto = naeringsspesifikasjon\n   \t.forForekomsterAv(sti(skogbruk, skogOgToemmerkonto))\n    .summer{(fastsatt(driftsresultatSomKanOverfoeresTilToemmerkonto.beloepSomTall)) }\n      \nnaeringsspesifikasjon\n    .utslagFor { \n      val harIkkeNæringstypeSkogbruk = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n      \t.harIngenForekomsterDer {(naeringstype erLik \"skogbruk\")}\n           \n      \thvis(((harInntektFradragFraTømmerkonto erUlik 0) eller (harIkkeInntektFradragPåTømmerkonto erUlik 0)) og harIkkeNæringstypeSkogbruk)\n      \t{\n        \tbetjeningsstrategiSettesTil(\n             \tikke, merknadStandard, 1, Avviksbeloep settesTil harInntektFradragFraTømmerkonto\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_UFULLSTENDIG_STOETTE_ORDNING",
      "kontrollformel": "// Kontrollen gir utslag når selskap rapporterer ufullstendige opplysninger knyttet til skatte- og avgiftsordrninger. Alle opplysningene må fylles ut.\n    // KOntrollen gir merknad i valideringstjenesten.\n    sakstype(Upersonlig)\n        .kontekst(ValideringSkattepliktig) {\n    \n            val gyldigeStøtteordninger = skatteOgAvgiftsordningOmfattetAvOffentligStoette_2022\n                .forForekomsterAv { kode }\n                .verdierFor { tekniskNavn }\n    \n            val harStøtteordning = skattemeldingUpersonlig\n                .forForekomsterAv(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        tilleggsinformasjonKnyttetTilMottakAvSkatteOgAvgiftsordningOmfattetAvOffentligStoette,\n                        skatteOgAvgiftsordningOmfattetAvOffentligStoette\n                    )\n                )\n                .hvorMinstEnForekomst {\n                    (fastsatt(skatteOgAvgiftsordning) er oppgitt) og\n                        (fastsatt(skatteOgAvgiftsordning).finnesBlant(gyldigeStøtteordninger))\n                }\n    \n            skattemeldingUpersonlig\n                .forForekomsterAv(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        tilleggsinformasjonKnyttetTilMottakAvSkatteOgAvgiftsordningOmfattetAvOffentligStoette\n                    )\n                )\n                .utslagFor {\n                    hvis(\n                        harStøtteordning og (varIOekonomiskeVanskerVedSistAvlagtRegnskapsaar ikkeEr oppgitt) eller\n                            (erIKonsern ikkeEr oppgitt) eller\n                            (harUtestaaendeBetalingskravKnyttetTilUlovligUtdeltStatsstoette ikkeEr oppgitt) eller\n                            (erLitenEllerMellomstorBedrift ikkeEr oppgitt) eller\n                            (harMottattAnnenOffentligStoette ikkeEr oppgitt)\n                    ) {\n                        betjeningsstrategiSettesTil(ikke, merknadStandard, 1)\n                    }\n                }\n        }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "merknadStandard"
    },
    {
      "kontrollnavn": "N_UGYLDIGE_FELT_NAERINGBEREGNING",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // kontrollen gir utslag dersom skattepliktig med virksomhetstype aksjeselskap rapporterer ett eller flere av følgende felter\n        // fordeltBeregnetNaeringsinntekt.sjablongberegnetInntektFraBiomasseVedproduksjon\n        // fordeltBeregnetNaeringsinntekt.fradragForRenterINaeringPaaSvalbard\n        // fordeltBeregnetNaeringsinntekt.fremfoertUnderskuddIEnkeltpersonforetakPaaSvalbardFraTidligereAar\n        // fordeltBeregnetNaeringsinntekt.korreksjonFraReindrift\n        // kontrollen gir faktiskFeil i valideringstjenesten\n    \n        val harVirksomhetstypeUlikEnkeltpersonforetak = naeringsspesifikasjon\n            .forForekomsterAv(virksomhet)\n            .hvorMinstEnForekomst {\n                virksomhetstype.finnesBlant(\"oevrigSelskap\", \"selskapMedDeltakerfastsetting\", \"bankOgFinansieringsforetak\",\n                                            \"livsforsikringsforetakOgPensjonskasse\", \"skadeforsikringsforetak\")\n            }\n    \n        val rapportererUgylidigFelt = naeringsspesifikasjon\n            .forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n            .hvorMinstEnForekomst {\n                (\n                    (sjablongberegnetInntektFraBiomasseVedproduksjon.beloepSomTall er oppgitt) eller\n                  \t(sjablongberegnetFradragFraBiomasseVedproduksjon.beloepSomTall er oppgitt) eller\n                        (fradragForRenterINaeringPaaSvalbard.beloepSomTall er oppgitt) eller\n                        (fremfoertUnderskuddIEnkeltpersonforetakPaaSvalbardFraTidligereAar.beloepSomTall er oppgitt) eller\n                        (korreksjonFraReindrift.beloepSomTall er oppgitt)\n                    )\n            }\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                hvis(harVirksomhetstypeUlikEnkeltpersonforetak og rapportererUgylidigFelt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_BILTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeBiltyper = biltype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en biltype som ikke finnes i kodelisten 2021_biltype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeBil = forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, motorkjoeretoeyINaering))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(biltype) er oppgitt) og\n                            (fastsatt(biltype).finnesIkkeBlant(gyldigeBiltyper))\n                    }\n    \n                hvis(feilTypeBil) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n           }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_BRANSJETYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeBransjetyper = bransjetype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en bransjetype som ikke finnes i kodelisten for bransjetype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeBil = forForekomsterAv(sti(andreForhold, loeyveForDrosjeOgGodstransport))\n                    .hvorMinstEnForekomst {\n                        (fastsatt(bransje) er oppgitt) og\n                            (fastsatt(bransje).finnesIkkeBlant(gyldigeBransjetyper))\n                    }\n    \n                hvis(feilTypeBil) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_EGENKAPITALENDRINGSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeEgenkapitalendringstyper = egenkapitalendringstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en egenkapitalendringstype som ikke finnes i kodelisten for egenkapitalendringstype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeEgenkapitalendring = forForekomsterAv(egenkapitalavstemming)\n                    .forForekomsterAv(egenkapitalendring)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(egenkapitalendringstype) er oppgitt) og\n                            (fastsatt(egenkapitalendringstype).finnesIkkeBlant(gyldigeEgenkapitalendringstyper))\n                    }\n    \n                hvis(feilTypeEgenkapitalendring) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORMUESOBJEKT",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeformuesobjekttyper = formuesobjekttypeUpersonligSkattepliktig_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt et formuesobjekt som ikke finnes i kodelistene\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilFormuesobjekttype = forForekomsterAv(formuesobjekt)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(formuesobjekttype) er oppgitt) og\n                            (fastsatt(formuesobjekttype).finnesIkkeBlant(gyldigeformuesobjekttyper))\n                    }\n    \n                hvis(feilFormuesobjekttype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORMUESOBJEKTTYPE",
      "kontrollformel": "// TODO: Oppdater for 2022\n    // sakstype(Upersonlig, SDF)\n    //     .kontekst(ValideringSkattepliktig) {\n    //         val gyldigeFormuesobjekttyper = formuesobjektVedRealisasjonEllerUtleieMellomSelskapOgNaerstaaendeMv_2022\n    //             .forForekomsterAv { kode }\n    //             .verdierFor { tekniskNavn }\n    //\n    //         // Kontrollen gir utslag dersom skattyter har oppgitt en formuesobjekttype som ikke finnes i kodelisten 2022_formuesobjektVedRealisasjonEllerUtleieMellomSelskapOgNaerstaaendeMv\n    //         naeringsspesifikasjon\n    //             .utslagFor {\n    //\n    //                 val feilTypeFormuesobjektForYtelserFraAksjonaererEllerNaerstaaende =\n    //                     forForekomsterAv(sti(andreForhold, ytelseFraAksjonaerEllerNaerstaaende))\n    //                         .forForekomsterAv(realisasjonOgUtleieAvFormuesobjektMv)\n    //                         .hvorMinstEnForekomst {\n    //                             (fastsatt(formuesobjektSomTekst) er oppgitt) og\n    //                                 (fastsatt(formuesobjektSomTekst).finnesIkkeBlant(gyldigeFormuesobjekttyper))\n    //                         }\n    //\n    //                 val feilTypeFormuesobjektForYtelserFraSelskap =\n    //                     forForekomsterAv(sti(andreForhold, ytelseFraSelskapEllerSelskapetsDatterselskap))\n    //                         .forForekomsterAv(realisasjonOgUtleieAvFormuesobjektMv)\n    //                         .hvorMinstEnForekomst {\n    //                             (fastsatt(formuesobjektSomTekst) er oppgitt) og\n    //                                 (fastsatt(formuesobjektSomTekst).finnesIkkeBlant(gyldigeFormuesobjekttyper))\n    //                         }\n    //\n    //                 hvis(feilTypeFormuesobjektForYtelserFraAksjonaererEllerNaerstaaende eller feilTypeFormuesobjektForYtelserFraSelskap) {\n    //                     betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n    //                 }\n    //             }\n    //     }\n    sakstype(Personlig)\n        .kontekst(AdHoc) {\n            skattemelding.deaktivertKontrollAldriUtslagFor {\n                hvis(skatteplikt er oppgitt) {\n                    betjeningsstrategiSettesTil()\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "ingen"
    },
    {
      "kontrollnavn": "N_UGYLDIG_FORSKJELLSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeMidlertidigForskjellstyper = midlertidigForskjellstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigePermanentForskjellstyper = permanentForskjellstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en forskjellstype (midlertidig eller permanent) som ikke finnes i kodelistene for permanentForskjellstype eller midlertidigForskjellstype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeMidlertidigForskjell = forForekomsterAv(midlertidigForskjell)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(midlertidigForskjellstype) er oppgitt) og\n                            (\n                                fastsatt(midlertidigForskjellstype).finnesIkkeBlant(\n                                    gyldigeMidlertidigForskjellstyper\n                                )\n                                )\n                    }\n    \n                val feilTypePermanentForskjell = forForekomsterAv(permanentForskjell)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(permanentForskjellstype) er oppgitt) og\n                            (fastsatt(permanentForskjellstype).finnesIkkeBlant(gyldigePermanentForskjellstyper))\n                    }\n    \n                hvis(feilTypeMidlertidigForskjell eller feilTypePermanentForskjell) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KASSASYSTEM",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeKassasystemtyper = kassasystemtype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en kassasystemtype som ikke finnes i kodelisten 2022 for kassasystemtype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeKassasystem = forForekomsterAv(sti(andreForhold, overnattingsOgServeringssted))\n                    .forForekomsterAv(kassasystem)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(kassasystemtype) er oppgitt) og\n                            (fastsatt(kassasystemtype).finnesIkkeBlant(gyldigeKassasystemtyper))\n                    }\n    \n                hvis(feilTypeKassasystem) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONTO_BALANSEREGNSKAP",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigekontoerForAnleggsmidler = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"balanseverdiForAnleggsmiddel\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForEgenkapital = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"egenkapital\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForKortsiktigGjeld = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"kortsiktigGjeld\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForLangsiktigGjeld = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"langsiktigGjeld\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        val gyldigekontoerForOmloepsmiddel = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .filtrer { fastsatt(tekniskNavn) erLik \"balanseverdiForOmloepsmiddel\" }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en konto som ikke finnes i kodelisten\n        // sjekker på alle typefelter under balanseregnskap\n        naeringsspesifikasjon\n            .utslagFor {\n                val feilTypeAnleggsmiddel =\n                    forForekomsterAv(sti(balanseregnskap, anleggsmiddel, balanseverdiForAnleggsmiddel))\n                        .forForekomsterAv(balanseverdi)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForAnleggsmidler\n                                )\n                                )\n                        }\n    \n                val feilTypeEgenkapital =\n                    forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, egenkapital))\n                        .forForekomsterAv(kapital)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForEgenkapital\n                                )\n                                )\n                        }\n    \n                val feilTypeKortsiktigGjeld =\n                    forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, kortsiktigGjeld))\n                        .forForekomsterAv(gjeld)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForKortsiktigGjeld\n                                )\n                                )\n                        }\n    \n                val feilTypeLangsiktigGjeld =\n                    forForekomsterAv(sti(balanseregnskap, gjeldOgEgenkapital, langsiktigGjeld))\n                        .forForekomsterAv(gjeld)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForLangsiktigGjeld\n                                )\n                                )\n                        }\n    \n                val feilTypeOmloepsmiddel =\n                    forForekomsterAv(sti(balanseregnskap, omloepsmiddel, balanseverdiForOmloepsmiddel))\n                        .forForekomsterAv(balanseverdi)\n                        .hvorMinstEnForekomst {\n                            (fastsatt(type) er oppgitt) og (\n                                fastsatt(type).finnesIkkeBlant(\n                                    gyldigekontoerForOmloepsmiddel\n                                )\n                                )\n                        }\n    \n                hvis(\n                    feilTypeAnleggsmiddel eller feilTypeEgenkapital eller feilTypeKortsiktigGjeld eller\n                        feilTypeLangsiktigGjeld eller feilTypeOmloepsmiddel\n                ) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONTO_EGENKAPITALAVSTEMMING_PRINSIPPENDRING",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigekontoerForEgenkapitalavstemningPrinsippendring = resultatregnskapOgBalanse_2022\n            .forForekomsterAv { underkodeliste }\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en konto som ikke finnes i kodelisten kodelisten egenkapitalavstemming prinsippendring\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypePrinsippendring = forForekomsterAv(egenkapitalavstemming)\n                    .forForekomsterAv(prinsippendring)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(resultatOgBalanseregnskapstype) er oppgitt) og\n                            (\n                                fastsatt(resultatOgBalanseregnskapstype).finnesIkkeBlant(\n                                    gyldigekontoerForEgenkapitalavstemningPrinsippendring\n                                )\n                                )\n                    }\n    \n                hvis(feilTypePrinsippendring) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_KONTO_RESULTATREGNSKAP",
      "kontrollformel": "     sakstype(Personlig, Upersonlig)\n         .kontekst(ValideringSkattepliktig) {\n             val gyldigekontoerForAnnenDriftsinntekt = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"annenDriftsinntekt\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForSalgsinntekt = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"salgsinntekt\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForAnnenDriftskostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"annenDriftskostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForLoennskostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"loennskostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForVarekostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"varekostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForEkstraordinaerPost = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"ekstraordinaerPost\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForFinansinntekt = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"finansinntekt\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForFinanskostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"finanskostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             val gyldigekontoerForSkattekostnad = resultatregnskapOgBalanse_2022\n                 .forForekomsterAv { underkodeliste }\n                 .filtrer { tekniskNavn erLik \"skattekostnad\" }\n                 .forForekomsterAv { kode }\n                 .verdierFor { tekniskNavn }\n    \n             // Kontrollen gir utslag dersom skattyter har oppgitt en konto som ikke finnes i kodelisten\n             // sjekker på alle typefelter under resultatregnskap\n             naeringsspesifikasjon\n                 .utslagFor {\n                     val feilTypeDriftsinntekt =\n                         forForekomsterAv(sti(resultatregnskap, driftsinntekt, annenDriftsinntekt))\n                             .forForekomsterAv(inntekt)\n                             .hvorMinstEnForekomst {\n                                 (fastsatt(type) er oppgitt) og (\n                                     fastsatt(type).finnesIkkeBlant(\n                                         gyldigekontoerForAnnenDriftsinntekt\n                                     )\n                                     )\n                             }\n    \n                     val feilTypeSalgsinntekt = forForekomsterAv(sti(resultatregnskap, driftsinntekt, salgsinntekt))\n                         .forForekomsterAv(inntekt)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForSalgsinntekt\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeAnnenDriftskostnad =\n                         forForekomsterAv(sti(resultatregnskap, driftskostnad, annenDriftskostnad))\n                             .forForekomsterAv(kostnad)\n                             .hvorMinstEnForekomst {\n                                 (fastsatt(type) er oppgitt) og (\n                                     fastsatt(type).finnesIkkeBlant(\n                                         gyldigekontoerForAnnenDriftskostnad\n                                     )\n                                     )\n                             }\n    \n                     val feilTypeLoennskostnad =\n                         forForekomsterAv(sti(resultatregnskap, driftskostnad, loennskostnad))\n                             .forForekomsterAv(kostnad)\n                             .hvorMinstEnForekomst {\n                                 (fastsatt(type) er oppgitt) og (\n                                     fastsatt(type).finnesIkkeBlant(\n                                         gyldigekontoerForLoennskostnad\n                                     )\n                                     )\n                             }\n    \n                     val feilTypeVarekostnad = forForekomsterAv(sti(resultatregnskap, driftskostnad, varekostnad))\n                         .forForekomsterAv(kostnad)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForVarekostnad\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeFinansinntekt = forForekomsterAv(sti(resultatregnskap, finansinntekt))\n                         .forForekomsterAv(inntekt)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForFinansinntekt\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeFinanskostnad = forForekomsterAv(sti(resultatregnskap, finanskostnad))\n                         .forForekomsterAv(kostnad)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForFinanskostnad\n                                 )\n                                 )\n                         }\n    \n                     val feilTypeSkattekostnad = forForekomsterAv(sti(resultatregnskap, skattekostnad))\n                         .forForekomsterAv(kostnad)\n                         .hvorMinstEnForekomst {\n                             (fastsatt(type) er oppgitt) og (\n                                 fastsatt(type).finnesIkkeBlant(\n                                     gyldigekontoerForSkattekostnad\n                                 )\n                                 )\n                         }\n    \n                     hvis(\n                         feilTypeDriftsinntekt eller feilTypeSalgsinntekt eller feilTypeAnnenDriftskostnad eller\n                            feilTypeLoennskostnad eller feilTypeVarekostnad eller feilTypeFinanskostnad eller \n                       \t\tfeilTypeSkattekostnad\n                     ) {\n                         betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                     }\n                 }\n         }\n",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_NÆRINGSEIENDOMSTYPE",
      "kontrollformel": "sakstype(Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        // Kontrollen gir utslag dersom skattyter oppgir en næringseiendomstype som ikke er gyldig\n        // Kontrollen medfører at innleveringen avvises\n        skattemeldingUpersonlig\n            .forForekomsterAv(formuesgrunnlagIkkeUtleidNaeringseiendomINorge)\n            .utslagFor {\n    \n                val harIkkeUtleidNæringseiendomINorge = hvorMinstEnForekomst {\n                    naeringseiendomstype.finnesIkkeBlant(\n                        \"industri\",\n                        \"verksted\",\n                        \"lager\",\n                        \"hotell\",\n                        \"butikkEllerKjoepesenter\",\n                        \"kontor\",\n                        \"tomtGrunnarealHovedfunksjon\",\n                        \"annet\"\n                    )\n                }\n    \n                hvis(harIkkeUtleidNæringseiendomINorge) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_NÆRINGSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeNaeringstyper = naeringstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en næringstype som ikke finnes i kodelisten for næringstype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeNaering = forForekomsterAv(fordeltBeregnetNaeringsinntekt)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(naeringstype) er oppgitt) og\n                            (fastsatt(naeringstype).finnesIkkeBlant(gyldigeNaeringstyper))\n                    }\n    \n                hvis(feilTypeNaering) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_REGELTYPE_FOR_ÅRSREGNSKAP",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeRegeltyperForAarsregnskap = regeltypeForAarsregnskap_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en regeltype for årsregnskap som ikke finnes i kodelisten for regeltype for Årsregnskap\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeRegelForAarsregnskap = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(regeltypeForAarsregnskap) er oppgitt) og\n                            (fastsatt(regeltypeForAarsregnskap).finnesIkkeBlant(gyldigeRegeltyperForAarsregnskap))\n                    }\n    \n                hvis(feilTypeRegelForAarsregnskap) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_REGNSKAPSPLIKTTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeRegnskapspliktstyper = regnskapsplikttype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // kontrollen gir utslag dersom skattyter har oppgitt en regnskapspliktstype som ikke finnes i kodelisten for regnskapspliktstype\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeRegnskapsplikt = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(regnskapspliktstype) er oppgitt) og\n                            (fastsatt(regnskapspliktstype).finnesIkkeBlant(gyldigeRegnskapspliktstyper))\n                    }\n    \n                hvis(feilTypeRegnskapsplikt) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_SALDOGRUPPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeSaldogrupper = saldogruppe_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en saldogruppe som ikke finnes i kodelisten for saldogruppe\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilSaldogruppe =\n                    forForekomsterAv(sti(spesifikasjonAvAnleggsmiddel, saldoavskrevetAnleggsmiddel))\n                        .hvorMinstEnForekomst {\n                            (fastsatt(saldogruppe) er oppgitt) og\n                                (fastsatt(saldogruppe).finnesIkkeBlant(gyldigeSaldogrupper))\n                        }\n    \n                hvis(feilSaldogruppe) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_SKATTE_OG_AVGIFTSORDNING",
      "kontrollformel": "sakstype(Upersonlig)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeSkatteOgAvgiftsordninger = skatteOgAvgiftsordningOmfattetAvOffentligStoette_2021\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en skatte- og avgiftsordning som ikke finnes i kodelistene\n        skattemeldingUpersonlig\n            .utslagFor {\n    \n                val feilSkatteOgAvgiftsordning = forForekomsterAv(\n                    sti(\n                        spesifikasjonAvForholdRelevanteForBeskatning,\n                        tilleggsinformasjonKnyttetTilMottakAvSkatteOgAvgiftsordningOmfattetAvOffentligStoette\n                    )\n                )\n                    .forForekomsterAv(skatteOgAvgiftsordningOmfattetAvOffentligStoette)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(skatteOgAvgiftsordning) er oppgitt) og\n                            (fastsatt(skatteOgAvgiftsordning).finnesIkkeBlant(gyldigeSkatteOgAvgiftsordninger))\n                    }\n    \n                hvis(feilSkatteOgAvgiftsordning) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_SKJERMINGSGRUNNLAGSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeSkjermingsgrunnlagstyper = skjermingsgrunnlagstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en skjermingsgrunnlagstype som ikke finnes i kodelisten\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilSkjermingsgrunnlagstype =\n                    forForekomsterAv(sti(fordeltBeregnetPersoninntekt, spesifikasjonAvSkjermingsgrunnlag))\n                        .hvorMinstEnForekomst {\n                            (fastsatt(skjermingsgrunnlagstype) er oppgitt) og\n                                (\n                                    fastsatt(skjermingsgrunnlagstype).finnesIkkeBlant(\n                                        gyldigeSkjermingsgrunnlagstyper\n                                    )\n                                    )\n                        }\n    \n                hvis(feilSkjermingsgrunnlagstype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_TAKSAMETERTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeTaksametertyper = taksametertype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en taksametertype som ikke finnes i kodelisten for taksametertype\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTaksametertype = forForekomsterAv(sti(andreForhold, loeyveForDrosjeOgGodstransport))\n                    .forForekomsterAv(kjoeretoey)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(taksametertype) er oppgitt) og\n                            (fastsatt(taksametertype).finnesIkkeBlant(gyldigeTaksametertyper))\n                    }\n    \n                hvis(feilTaksametertype) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_VAREART",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeVarearter = vareart_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // Kontrollen gir utslag dersom skattyter har oppgitt en vareart som ikke finnes i kodelisten for vareart\n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilVareart = forForekomsterAv(sti(andreForhold, overnattingsOgServeringssted))\n                    .forForekomsterAv(varelagerPerVareart)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(vareart) er oppgitt) og\n                            (fastsatt(vareart).finnesIkkeBlant(gyldigeVarearter))\n                    }\n    \n                hvis(feilVareart) {\n                    betjeningsstrategiSettesTil(ikke, faktiskFeil, 1)\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    },
    {
      "kontrollnavn": "N_UGYLDIG_VIRKSOMHETSTYPE",
      "kontrollformel": "sakstype(Personlig, Upersonlig, SDF)\n    .kontekst(ValideringSkattepliktig) {\n        val gyldigeVirksomhetstyper = virksomhetstype_2022\n            .forForekomsterAv { kode }\n            .verdierFor { tekniskNavn }\n    \n        // kontrollen gir utslag dersom skattyter har oppgitt en virksomhetstype som ikke finnes i kodelisten for virksomhetstype\n    \n        naeringsspesifikasjon\n            .utslagFor {\n    \n                val feilTypeVirksomhet = forForekomsterAv(virksomhet)\n                    .hvorMinstEnForekomst {\n                        (fastsatt(virksomhetstype) er oppgitt) og\n                            (fastsatt(virksomhetstype).finnesIkkeBlant(gyldigeVirksomhetstyper))\n                    }\n    \n                hvis(feilTypeVirksomhet) {\n                    betjeningsstrategiSettesTil(\n                        ikke,\n                        faktiskFeil,\n                        1,\n                        Gruppering settesTil Næring\n                    )\n                }\n            }\n    }",
      "hjelpetekstSME": "",
      "BetjeningsstrategiSkattepliktig": "faktiskFeil"
    }
    ]
}